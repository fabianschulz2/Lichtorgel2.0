#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;
using global::Windows.Foundation;
using global::Windows.Foundation.Collections;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 64-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace _
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Winsock+TimeValue,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Winsock_TimeValue__System_Net_Sockets
	{
		public int Seconds;
		public int Microseconds;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CONSOLE_CURSOR_INFO,System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11" +
		"d50a3a")]
	public unsafe partial struct Interop_Kernel32_CONSOLE_CURSOR_INFO__System_Console
	{
		public int dwSize;
		public bool bVisible;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+COORD,System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_COORD__System_Console
	{
		public short X;
		public short Y;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+InputRecord,System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_InputRecord__System_Console
	{
		public short eventType;
		public global::_.Interop_KeyEventRecord__System_Console keyEvent;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+KeyEventRecord,System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_KeyEventRecord__System_Console
	{
		public global::_.Interop_BOOL__System_Console keyDown;
		public short repeatCount;
		public short virtualKeyCode;
		public short virtualScanCode;
		public char uChar;
		public int controlKeyState;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BOOL,System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum Interop_BOOL__System_Console
	{
		FALSE = 0,
		TRUE = 1,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+LogonFlags,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7" +
		"f11d50a3a")]
	public enum Interop_Advapi32_LogonFlags__System_Diagnostics_Process
	{
		LOGON_WITH_PROFILE = 1,
		LOGON_NETCREDENTIALS_ONLY = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+STARTUPINFO,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f" +
		"7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_STARTUPINFO__System_Diagnostics_Process
	{
		public int cb;
		public global::System.IntPtr lpReserved;
		public global::System.IntPtr lpDesktop;
		public global::System.IntPtr lpTitle;
		public int dwX;
		public int dwY;
		public int dwXSize;
		public int dwYSize;
		public int dwXCountChars;
		public int dwYCountChars;
		public int dwFillAttribute;
		public int dwFlags;
		public short wShowWindow;
		public short cbReserved2;
		public global::System.IntPtr lpReserved2;
		public global::System.IntPtr hStdInput;
		public global::System.IntPtr hStdOutput;
		public global::System.IntPtr hStdError;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+PROCESS_INFORMATION,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_PROCESS_INFORMATION__System_Diagnostics_Process
	{
		public global::System.IntPtr hProcess;
		public global::System.IntPtr hThread;
		public int dwProcessId;
		public int dwThreadId;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+SECURITY_ATTRIBUTES,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_SECURITY_ATTRIBUTES__System_Diagnostics_Process
	{
		public uint nLength;
		public global::System.IntPtr lpSecurityDescriptor;
		public global::_.Interop_BOOL__System_Diagnostics_Process bInheritHandle;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BOOL,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum Interop_BOOL__System_Diagnostics_Process
	{
		FALSE = 0,
		TRUE = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+SECURITY_ATTRIBUTES,System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_SECURITY_ATTRIBUTES__System_IO_FileSystem
	{
		public uint nLength;
		public global::System.IntPtr lpSecurityDescriptor;
		public global::_.Interop_BOOL__System_IO_FileSystem bInheritHandle;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BOOL,System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum Interop_BOOL__System_IO_FileSystem
	{
		FALSE = 0,
		TRUE = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CONSOLE_SCREEN_BUFFER_INFO,System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03" +
		"f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CONSOLE_SCREEN_BUFFER_INFO__System_Console
	{
		public global::_.Interop_Kernel32_COORD__System_Console dwSize;
		public global::_.Interop_Kernel32_COORD__System_Console dwCursorPosition;
		public short wAttributes;
		public global::_.Interop_Kernel32_SMALL_RECT__System_Console srWindow;
		public global::_.Interop_Kernel32_COORD__System_Console dwMaximumWindowSize;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+SMALL_RECT,System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_SMALL_RECT__System_Console
	{
		public short Left;
		public short Top;
		public short Right;
		public short Bottom;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Winsock+Linger,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Winsock_Linger__System_Net_Sockets
	{
		public ushort OnOff;
		public ushort Time;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Winsock+IPMulticastRequest,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f" +
		"11d50a3a")]
	public unsafe partial struct Interop_Winsock_IPMulticastRequest__System_Net_Sockets
	{
		public int MulticastAddress;
		public int InterfaceAddress;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Winsock+IPv6MulticastRequest,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f" +
		"7f11d50a3a")]
	public unsafe partial struct Interop_Winsock_IPv6MulticastRequest__System_Net_Sockets
	{
		public byte[] MulticastAddress;
		public int InterfaceIndex;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BOOL,System.Text.Encoding.CodePages, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum Interop_BOOL__System_Text_Encoding_CodePages
	{
		FALSE = 0,
		TRUE = 1,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW,System.Text.Encoding.CodePages, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__System_Text_Encoding_CodePages
	{
		public uint MaxCharSize;
		public global::_.Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Text_Encoding_CodePages DefaultChar;
		public global::_.Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Text_Encoding_CodePages LeadByte;
		public char UnicodeDefaultChar;
		public uint CodePage;
		public global::_.Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Text_Encoding_CodePages CodePageName;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<DefaultChar>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.1.2.0, Culture=" +
		"neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Text_Encoding_CodePages
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<LeadByte>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.1.2.0, Culture=neu" +
		"tral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Text_Encoding_CodePages
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=520, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<CodePageName>e__FixedBuffer,System.Text.Encoding.CodePages, Version=4.1.2.0, Culture" +
		"=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Text_Encoding_CodePages
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public char FixedElementField;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+LUID,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50" +
		"a3a")]
	public unsafe partial struct Interop_Advapi32_LUID__System_Diagnostics_Process
	{
		public int LowPart;
		public int HighPart;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+TokenPrivileges,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b0" +
		"3f5f7f11d50a3a")]
	public unsafe partial class Interop_Advapi32_TokenPrivileges__System_Diagnostics_Process
	{
		public int PrivilegeCount;
		public global::_.Interop_Advapi32_LUID__System_Diagnostics_Process Luid;
		public int Attributes;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+GET_FILEEX_INFO_LEVELS,System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b" +
		"03f5f7f11d50a3a")]
	public enum Interop_Kernel32_GET_FILEEX_INFO_LEVELS__System_IO_FileSystem : uint
	{
		GetFileExInfoStandard = 0x0u,
		GetFileExMaxInfoLevel = 0x1u,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+WIN32_FILE_ATTRIBUTE_DATA,System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_WIN32_FILE_ATTRIBUTE_DATA__System_IO_FileSystem
	{
		public int dwFileAttributes;
		public global::_.Interop_Kernel32_FILE_TIME__System_IO_FileSystem ftCreationTime;
		public global::_.Interop_Kernel32_FILE_TIME__System_IO_FileSystem ftLastAccessTime;
		public global::_.Interop_Kernel32_FILE_TIME__System_IO_FileSystem ftLastWriteTime;
		public uint nFileSizeHigh;
		public uint nFileSizeLow;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+FILE_TIME,System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a" +
		"3a")]
	public unsafe partial struct Interop_Kernel32_FILE_TIME__System_IO_FileSystem
	{
		public uint dwLowDateTime;
		public uint dwHighDateTime;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+FINDEX_INFO_LEVELS,System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5" +
		"f7f11d50a3a")]
	public enum Interop_Kernel32_FINDEX_INFO_LEVELS__System_IO_FileSystem : uint
	{
		FindExInfoStandard = 0x0u,
		FindExInfoBasic = 0x1u,
		FindExInfoMaxInfoLevel = 0x2u,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+WIN32_FIND_DATA,System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f" +
		"11d50a3a")]
	public unsafe partial struct Interop_Kernel32_WIN32_FIND_DATA__System_IO_FileSystem
	{
		public uint dwFileAttributes;
		public global::_.Interop_Kernel32_FILE_TIME__System_IO_FileSystem ftCreationTime;
		public global::_.Interop_Kernel32_FILE_TIME__System_IO_FileSystem ftLastAccessTime;
		public global::_.Interop_Kernel32_FILE_TIME__System_IO_FileSystem ftLastWriteTime;
		public uint nFileSizeHigh;
		public uint nFileSizeLow;
		public uint dwReserved0;
		public uint dwReserved1;
		public global::_.Interop_Kernel32_WIN32_FIND_DATA___cFileName_e__FixedBuffer__System_IO_FileSystem _cFileName;
		public global::_.Interop_Kernel32_WIN32_FIND_DATA___cAlternateFileName_e__FixedBuffer__System_IO_FileSystem _cAlternateFileName;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=520, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+WIN32_FIND_DATA+<_cFileName>e__FixedBuffer,System.IO.FileSystem, Version=4.1.1.0, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_WIN32_FIND_DATA___cFileName_e__FixedBuffer__System_IO_FileSystem
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public char FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=28, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+WIN32_FIND_DATA+<_cAlternateFileName>e__FixedBuffer,System.IO.FileSystem, Version=4.1.1.0, Cult" +
		"ure=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_WIN32_FIND_DATA___cAlternateFileName_e__FixedBuffer__System_IO_FileSystem
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public char FixedElementField;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+FINDEX_SEARCH_OPS,System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f" +
		"7f11d50a3a")]
	public enum Interop_Kernel32_FINDEX_SEARCH_OPS__System_IO_FileSystem : uint
	{
		FindExSearchNameMatch = 0x0u,
		FindExSearchLimitToDirectories = 0x1u,
		FindExSearchLimitToDevices = 0x2u,
		FindExSearchMaxSearchOp = 0x3u,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BCrypt+NTSTATUS,System.Security.Cryptography.Algorithms, Version=4.3.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public enum Interop_BCrypt_NTSTATUS__System_Security_Cryptography_Algorithms : uint
	{
		STATUS_SUCCESS = 0x0u,
		STATUS_INVALID_PARAMETER = 0xC000000Du,
		STATUS_NO_MEMORY = 0xC0000017u,
		STATUS_NOT_FOUND = 0xC0000225u,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BCrypt+BCryptCreateHashFlags,System.Security.Cryptography.Algorithms, Version=4.3.1.0, Culture=neutral, " +
		"PublicKeyToken=b03f5f7f11d50a3a")]
	public enum Interop_BCrypt_BCryptCreateHashFlags__System_Security_Cryptography_Algorithms
	{
		None = 0,
		BCRYPT_HASH_REUSABLE_FLAG = 32,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Winsock+SocketConstructorFlags,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public enum Interop_Winsock_SocketConstructorFlags__System_Net_Sockets
	{
		WSA_FLAG_OVERLAPPED = 1,
		WSA_FLAG_MULTIPOINT_C_ROOT = 2,
		WSA_FLAG_MULTIPOINT_C_LEAF = 4,
		WSA_FLAG_MULTIPOINT_D_ROOT = 8,
		WSA_FLAG_MULTIPOINT_D_LEAF = 16,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+CryptOidInfoKeyType,System.Security.Cryptography.Encoding, Version=4.1.1.0, Culture=neutral, Pub" +
		"licKeyToken=b03f5f7f11d50a3a")]
	public enum Interop_Crypt32_CryptOidInfoKeyType__System_Security_Cryptography_Encoding
	{
		CRYPT_OID_INFO_OID_KEY = 1,
		CRYPT_OID_INFO_NAME_KEY = 2,
		CRYPT_OID_INFO_ALGID_KEY = 3,
		CRYPT_OID_INFO_SIGN_KEY = 4,
		CRYPT_OID_INFO_CNG_ALGID_KEY = 5,
		CRYPT_OID_INFO_CNG_SIGN_KEY = 6,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BCrypt+BCryptOpenAlgorithmProviderFlags,System.Security.Cryptography.Algorithms, Version=4.3.1.0, Cultur" +
		"e=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum Interop_BCrypt_BCryptOpenAlgorithmProviderFlags__System_Security_Cryptography_Algorithms
	{
		None = 0,
		BCRYPT_ALG_HANDLE_HMAC_FLAG = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Winsock+WSAData,System.Net.NameResolution, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d5" +
		"0a3a")]
	public unsafe partial struct Interop_Winsock_WSAData__System_Net_NameResolution
	{
		public short wVersion;
		public short wHighVersion;
		public string szDescription;
		public string szSystemStatus;
		public short iMaxSockets;
		public short iMaxUdpDg;
		public global::System.IntPtr lpVendorInfo;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+NCrypt+ErrorCode,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public enum Interop_NCrypt_ErrorCode__System_Security_Cryptography_Cng
	{
		E_FAIL = -2147467259,
		NTE_BAD_SIGNATURE = -2146893818,
		NTE_NOT_FOUND = -2146893807,
		NTE_BAD_KEYSET = -2146893802,
		NTE_INVALID_PARAMETER = -2146893785,
		NTE_BUFFER_TOO_SMALL = -2146893784,
		NTE_NOT_SUPPORTED = -2146893783,
		NTE_NO_MORE_ITEMS = -2146893782,
		ERROR_SUCCESS = 0,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f" +
		"11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__System_Diagnostics_Process
	{
		public uint MaxCharSize;
		public global::_.Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Diagnostics_Process DefaultChar;
		public global::_.Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Diagnostics_Process LeadByte;
		public char UnicodeDefaultChar;
		public uint CodePage;
		public global::_.Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Diagnostics_Process CodePageName;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<DefaultChar>e__FixedBuffer,System.Diagnostics.Process, Version=4.2.1.0, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Diagnostics_Process
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<LeadByte>e__FixedBuffer,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral" +
		", PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Diagnostics_Process
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=260)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<CodePageName>e__FixedBuffer,System.Diagnostics.Process, Version=4.2.1.0, Culture=neu" +
		"tral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Diagnostics_Process
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, CharSet=global::System.Runtime.InteropServices.CharSet.Unicode)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW,System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__System_Console
	{
		public uint MaxCharSize;
		public global::_.Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Console DefaultChar;
		public global::_.Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Console LeadByte;
		public char UnicodeDefaultChar;
		public uint CodePage;
		public global::_.Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Console CodePageName;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<DefaultChar>e__FixedBuffer,System.Console, Version=4.1.1.0, Culture=neutral, PublicK" +
		"eyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__DefaultChar_e__FixedBuffer__System_Console
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<LeadByte>e__FixedBuffer,System.Console, Version=4.1.1.0, Culture=neutral, PublicKeyT" +
		"oken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__LeadByte_e__FixedBuffer__System_Console
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=260)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+CPINFOEXW+<CodePageName>e__FixedBuffer,System.Console, Version=4.1.1.0, Culture=neutral, Public" +
		"KeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Kernel32_CPINFOEXW__CodePageName_e__FixedBuffer__System_Console
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public byte FixedElementField;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+CERT_CHAIN_POLICY_PARA,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03" +
		"f5f7f11d50a3a")]
	public unsafe partial struct Interop_Crypt32_CERT_CHAIN_POLICY_PARA__System_Net_Security
	{
		public uint cbSize;
		public uint dwFlags;
		public global::_.Interop_Crypt32_SSL_EXTRA_CERT_CHAIN_POLICY_PARA__System_Net_Security* pvExtraPolicyPara;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+SSL_EXTRA_CERT_CHAIN_POLICY_PARA,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKe" +
		"yToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Crypt32_SSL_EXTRA_CERT_CHAIN_POLICY_PARA__System_Net_Security
	{
		public uint cbSize;
		public uint dwAuthType;
		public uint fdwChecks;
		public char* pwszServerName;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+CERT_CHAIN_POLICY_STATUS,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b" +
		"03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Crypt32_CERT_CHAIN_POLICY_STATUS__System_Net_Security
	{
		public uint cbSize;
		public uint dwError;
		public int lChainIndex;
		public int lElementIndex;
		public void* pvExtraPolicyStatus;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+CryptOidInfoKeyType,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum Interop_Crypt32_CryptOidInfoKeyType__System_Security_Cryptography_X509Certificates
	{
		CRYPT_OID_INFO_OID_KEY = 1,
		CRYPT_OID_INFO_NAME_KEY = 2,
		CRYPT_OID_INFO_ALGID_KEY = 3,
		CRYPT_OID_INFO_SIGN_KEY = 4,
		CRYPT_OID_INFO_CNG_ALGID_KEY = 5,
		CRYPT_OID_INFO_CNG_SIGN_KEY = 6,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Kernel32+FileCompletionNotificationModes,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKey" +
		"Token=b03f5f7f11d50a3a")]
	public enum Interop_Kernel32_FileCompletionNotificationModes__System_Net_Sockets : byte
	{
		None = 0x0,
		SkipCompletionPortOnSuccess = 0x1,
		SkipSetEventOnHandle = 0x2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+CERT_CONTEXT,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50" +
		"a3a")]
	public unsafe partial struct Interop_Crypt32_CERT_CONTEXT__System_Net_Security
	{
		public uint dwCertEncodingType;
		public global::System.IntPtr pbCertEncoded;
		public uint cbCertEncoded;
		public global::System.IntPtr pCertInfo;
		public global::System.IntPtr hCertStore;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+LUID,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
		"a")]
	public unsafe partial struct Interop_LUID__System_Security_Principal_Windows
	{
		public uint LowPart;
		public int HighPart;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+CryptProvParam,System.Security.Cryptography.Csp, Version=4.1.1.0, Culture=neutral, PublicKeyTok" +
		"en=b03f5f7f11d50a3a")]
	public enum Interop_Advapi32_CryptProvParam__System_Security_Cryptography_Csp
	{
		PP_CLIENT_HWND = 1,
		PP_IMPTYPE = 3,
		PP_NAME = 4,
		PP_CONTAINER = 6,
		PP_PROVTYPE = 16,
		PP_KEYSET_TYPE = 27,
		PP_KEYEXCHANGE_PIN = 32,
		PP_SIGNATURE_PIN = 33,
		PP_UNIQUE_CONTAINER = 36,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BCrypt+NTSTATUS,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Culture=neutral, PublicK" +
		"eyToken=b03f5f7f11d50a3a")]
	public enum Interop_BCrypt_NTSTATUS__System_Security_Cryptography_X509Certificates : uint
	{
		STATUS_SUCCESS = 0x0u,
		STATUS_INVALID_PARAMETER = 0xC000000Du,
		STATUS_NO_MEMORY = 0xC0000017u,
		STATUS_NOT_FOUND = 0xC0000225u,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SspiCli+CredHandle,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
		"a")]
	public unsafe partial struct Interop_SspiCli_CredHandle__System_Net_Security
	{
		public global::System.IntPtr dwLower;
		public global::System.IntPtr dwUpper;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SspiCli+SecBufferDesc,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d5" +
		"0a3a")]
	public unsafe partial struct Interop_SspiCli_SecBufferDesc__System_Net_Security
	{
		public int ulVersion;
		public int cBuffers;
		public void* pBuffers;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SspiCli+ContextAttribute,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f1" +
		"1d50a3a")]
	public enum Interop_SspiCli_ContextAttribute__System_Net_Security
	{
		SECPKG_ATTR_SIZES = 0,
		SECPKG_ATTR_NAMES = 1,
		SECPKG_ATTR_LIFESPAN = 2,
		SECPKG_ATTR_DCE_INFO = 3,
		SECPKG_ATTR_STREAM_SIZES = 4,
		SECPKG_ATTR_AUTHORITY = 6,
		SECPKG_ATTR_PACKAGE_INFO = 10,
		SECPKG_ATTR_NEGOTIATION_INFO = 12,
		SECPKG_ATTR_UNIQUE_BINDINGS = 25,
		SECPKG_ATTR_ENDPOINT_BINDINGS = 26,
		SECPKG_ATTR_CLIENT_SPECIFIED_TARGET = 27,
		SECPKG_ATTR_APPLICATION_PROTOCOL = 35,
		SECPKG_ATTR_REMOTE_CERT_CONTEXT = 83,
		SECPKG_ATTR_LOCAL_CERT_CONTEXT = 84,
		SECPKG_ATTR_ROOT_STORE = 85,
		SECPKG_ATTR_ISSUER_LIST_EX = 89,
		SECPKG_ATTR_CONNECTION_INFO = 90,
		SECPKG_ATTR_UI_INFO = 104,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SspiCli+SCHANNEL_CRED,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d5" +
		"0a3a")]
	public unsafe partial struct Interop_SspiCli_SCHANNEL_CRED__System_Net_Security
	{
		public int dwVersion;
		public int cCreds;
		public global::System.IntPtr paCred;
		public global::System.IntPtr hRootStore;
		public int cMappers;
		public global::System.IntPtr aphMappers;
		public int cSupportedAlgs;
		public global::System.IntPtr palgSupportedAlgs;
		public int grbitEnabledProtocols;
		public int dwMinimumCipherStrength;
		public int dwMaximumCipherStrength;
		public int dwSessionLifespan;
		public global::_.Interop_SspiCli_SCHANNEL_CRED_Flags__System_Net_Security dwFlags;
		public int reserved;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SspiCli+SCHANNEL_CRED+Flags,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f" +
		"7f11d50a3a")]
	public enum Interop_SspiCli_SCHANNEL_CRED_Flags__System_Net_Security
	{
		Zero = 0,
		SCH_CRED_NO_SYSTEM_MAPPER = 2,
		SCH_CRED_NO_SERVERNAME_CHECK = 4,
		SCH_CRED_MANUAL_CRED_VALIDATION = 8,
		SCH_CRED_NO_DEFAULT_CREDS = 16,
		SCH_CRED_AUTO_CRED_VALIDATION = 32,
		SCH_SEND_AUX_RECORD = 2097152,
		SCH_USE_STRONG_CRYPTO = 4194304,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SspiCli+ContextFlags,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50" +
		"a3a")]
	public enum Interop_SspiCli_ContextFlags__System_Net_Security
	{
		Zero = 0,
		Delegate = 1,
		MutualAuth = 2,
		ReplayDetect = 4,
		SequenceDetect = 8,
		Confidentiality = 16,
		UseSessionKey = 32,
		InitUseSuppliedCreds = 128,
		AllocateMemory = 256,
		Connection = 2048,
		InitExtendedError = 16384,
		AcceptExtendedError = 32768,
		InitStream = 32768,
		AcceptStream = 65536,
		InitIntegrity = 65536,
		AcceptIntegrity = 131072,
		InitIdentify = 131072,
		InitManualCredValidation = 524288,
		AcceptIdentify = 524288,
		ProxyBindings = 67108864,
		AllowMissingBindings = 268435456,
		UnverifiedTargetName = 536870912,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SspiCli+Endianness,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
		"a")]
	public enum Interop_SspiCli_Endianness__System_Net_Security
	{
		SECURITY_NETWORK_DREP = 0,
		SECURITY_NATIVE_DREP = 16,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+CryptOidInfoKeyType,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutral, PublicKe" +
		"yToken=b03f5f7f11d50a3a")]
	public enum Interop_Crypt32_CryptOidInfoKeyType__System_Security_Cryptography_Cng
	{
		CRYPT_OID_INFO_OID_KEY = 1,
		CRYPT_OID_INFO_NAME_KEY = 2,
		CRYPT_OID_INFO_ALGID_KEY = 3,
		CRYPT_OID_INFO_SIGN_KEY = 4,
		CRYPT_OID_INFO_CNG_ALGID_KEY = 5,
		CRYPT_OID_INFO_CNG_SIGN_KEY = 6,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+UNICODE_STRING,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5" +
		"f7f11d50a3a")]
	public unsafe partial struct Interop_UNICODE_STRING__System_Security_Principal_Windows
	{
		public ushort Length;
		public ushort MaximumLength;
		public string Buffer;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+LSA_OBJECT_ATTRIBUTES,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_LSA_OBJECT_ATTRIBUTES__System_Security_Principal_Windows
	{
		public int Length;
		public global::System.IntPtr RootDirectory;
		public global::System.IntPtr ObjectName;
		public int Attributes;
		public global::System.IntPtr SecurityDescriptor;
		public global::System.IntPtr SecurityQualityOfService;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+IpAdapterAddresses,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyTo" +
		"ken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_IpHlpApi_IpAdapterAddresses__System_Net_NetworkInformation
	{
		public uint length;
		public uint index;
		public global::System.IntPtr next;
		public string AdapterName;
		public global::System.IntPtr firstUnicastAddress;
		public global::System.IntPtr firstAnycastAddress;
		public global::System.IntPtr firstMulticastAddress;
		public global::System.IntPtr firstDnsServerAddress;
		public string dnsSuffix;
		public string description;
		public string friendlyName;
		public byte[] address;
		public uint addressLength;
		public global::_.Interop_IpHlpApi_AdapterFlags__System_Net_NetworkInformation flags;
		public uint mtu;
		public global::System_Net_NetworkInformation.NetworkInterfaceType__System_Net_NetworkInformation type;
		public global::System_Net_NetworkInformation.OperationalStatus__System_Net_NetworkInformation operStatus;
		public uint ipv6Index;
		public uint[] zoneIndices;
		public global::System.IntPtr firstPrefix;
		public ulong transmitLinkSpeed;
		public ulong receiveLinkSpeed;
		public global::System.IntPtr firstWinsServerAddress;
		public global::System.IntPtr firstGatewayAddress;
		public uint ipv4Metric;
		public uint ipv6Metric;
		public ulong luid;
		public global::_.Interop_IpHlpApi_IpSocketAddress__System_Net_NetworkInformation dhcpv4Server;
		public uint compartmentId;
		public byte[] networkGuid;
		public global::_.Interop_IpHlpApi_InterfaceConnectionType__System_Net_NetworkInformation connectionType;
		public global::_.Interop_IpHlpApi_InterfaceTunnelType__System_Net_NetworkInformation tunnelType;
		public global::_.Interop_IpHlpApi_IpSocketAddress__System_Net_NetworkInformation dhcpv6Server;
		public byte[] dhcpv6ClientDuid;
		public uint dhcpv6ClientDuidLength;
		public uint dhcpV6Iaid;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+AdapterFlags,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b0" +
		"3f5f7f11d50a3a")]
	public enum Interop_IpHlpApi_AdapterFlags__System_Net_NetworkInformation
	{
		DnsEnabled = 1,
		RegisterAdapterSuffix = 2,
		DhcpEnabled = 4,
		ReceiveOnly = 8,
		NoMulticast = 16,
		Ipv6OtherStatefulConfig = 32,
		NetBiosOverTcp = 64,
		IPv4Enabled = 128,
		IPv6Enabled = 256,
		IPv6ManagedAddressConfigurationSupported = 512,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+IpSocketAddress,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyToken" +
		"=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_IpHlpApi_IpSocketAddress__System_Net_NetworkInformation
	{
		public global::System.IntPtr address;
		public int addressLength;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+InterfaceConnectionType,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, Public" +
		"KeyToken=b03f5f7f11d50a3a")]
	public enum Interop_IpHlpApi_InterfaceConnectionType__System_Net_NetworkInformation
	{
		Dedicated = 1,
		Passive = 2,
		Demand = 3,
		Maximum = 4,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+InterfaceTunnelType,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyT" +
		"oken=b03f5f7f11d50a3a")]
	public enum Interop_IpHlpApi_InterfaceTunnelType__System_Net_NetworkInformation
	{
		None = 0,
		Other = 1,
		Direct = 2,
		SixToFour = 11,
		Isatap = 13,
		Teredo = 14,
		IpHttps = 15,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+FIXED_INFO,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public unsafe partial struct Interop_IpHlpApi_FIXED_INFO__System_Net_NetworkInformation
	{
		public string hostName;
		public string domainName;
		public global::System.IntPtr currentDnsServer;
		public global::_.Interop_IpHlpApi_IP_ADDR_STRING__System_Net_NetworkInformation DnsServerList;
		public uint nodeType;
		public string scopeId;
		public bool enableRouting;
		public bool enableProxy;
		public bool enableDns;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+IP_ADDR_STRING,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_IpHlpApi_IP_ADDR_STRING__System_Net_NetworkInformation
	{
		public global::System.IntPtr Next;
		public string IpAddress;
		public string IpMask;
		public uint Context;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+CRYPT_OID_INFO,System.Security.Cryptography.Encoding, Version=4.1.1.0, Culture=neutral, PublicKe" +
		"yToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Crypt32_CRYPT_OID_INFO__System_Security_Cryptography_Encoding
	{
		public int cbSize;
		public global::System.IntPtr pszOID;
		public global::System.IntPtr pwszName;
		public global::System_Security_Cryptography.OidGroup__System_Security_Cryptography_Encoding dwGroupId;
		public int AlgId;
		public int cbData;
		public global::System.IntPtr pbData;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+IpAdapterAddress,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_IpHlpApi_IpAdapterAddress__System_Net_NetworkInformation
	{
		public uint length;
		public global::_.Interop_IpHlpApi_AdapterAddressFlags__System_Net_NetworkInformation flags;
		public global::System.IntPtr next;
		public global::_.Interop_IpHlpApi_IpSocketAddress__System_Net_NetworkInformation address;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+AdapterAddressFlags,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyT" +
		"oken=b03f5f7f11d50a3a")]
	public enum Interop_IpHlpApi_AdapterAddressFlags__System_Net_NetworkInformation
	{
		DnsEligible = 1,
		Transient = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+IpAdapterUnicastAddress,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, Public" +
		"KeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_IpHlpApi_IpAdapterUnicastAddress__System_Net_NetworkInformation
	{
		public uint length;
		public global::_.Interop_IpHlpApi_AdapterAddressFlags__System_Net_NetworkInformation flags;
		public global::System.IntPtr next;
		public global::_.Interop_IpHlpApi_IpSocketAddress__System_Net_NetworkInformation address;
		public global::System_Net_NetworkInformation.PrefixOrigin__System_Net_NetworkInformation prefixOrigin;
		public global::System_Net_NetworkInformation.SuffixOrigin__System_Net_NetworkInformation suffixOrigin;
		public global::System_Net_NetworkInformation.DuplicateAddressDetectionState__System_Net_NetworkInformation dadState;
		public uint validLifetime;
		public uint preferredLifetime;
		public uint leaseLifetime;
		public byte prefixLength;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+PERF_DATA_BLOCK,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b0" +
		"3f5f7f11d50a3a")]
	public unsafe partial class Interop_Advapi32_PERF_DATA_BLOCK__System_Diagnostics_Process
	{
		public int Signature1;
		public int Signature2;
		public int LittleEndian;
		public int Version;
		public int Revision;
		public int TotalByteLength;
		public int HeaderLength;
		public int NumObjectTypes;
		public int DefaultObject;
		public global::_.Interop_Advapi32_SYSTEMTIME__System_Diagnostics_Process SystemTime;
		public int pad1;
		public long PerfTime;
		public long PerfFreq;
		public long PerfTime100nSec;
		public int SystemNameLength;
		public int SystemNameOffset;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+SYSTEMTIME,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7" +
		"f11d50a3a")]
	public unsafe partial class Interop_Advapi32_SYSTEMTIME__System_Diagnostics_Process
	{
		public short wYear;
		public short wMonth;
		public short wDayOfWeek;
		public short wDay;
		public short wHour;
		public short wMinute;
		public short wSecond;
		public short wMilliseconds;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+PERF_OBJECT_TYPE,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b" +
		"03f5f7f11d50a3a")]
	public unsafe partial class Interop_Advapi32_PERF_OBJECT_TYPE__System_Diagnostics_Process
	{
		public int TotalByteLength;
		public int DefinitionLength;
		public int HeaderLength;
		public int ObjectNameTitleIndex;
		public int ObjectNameTitlePtr;
		public int ObjectHelpTitleIndex;
		public int ObjectHelpTitlePtr;
		public int DetailLevel;
		public int NumCounters;
		public int DefaultCounter;
		public int NumInstances;
		public int CodePage;
		public long PerfTime;
		public long PerfFreq;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+PERF_COUNTER_DEFINITION,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKey" +
		"Token=b03f5f7f11d50a3a")]
	public unsafe partial class Interop_Advapi32_PERF_COUNTER_DEFINITION__System_Diagnostics_Process
	{
		public int ByteLength;
		public int CounterNameTitleIndex;
		public int CounterNameTitlePtr;
		public int CounterHelpTitleIndex;
		public int CounterHelpTitlePtr;
		public int DefaultScale;
		public int DetailLevel;
		public int CounterType;
		public int CounterSize;
		public int CounterOffset;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+PERF_INSTANCE_DEFINITION,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKe" +
		"yToken=b03f5f7f11d50a3a")]
	public unsafe partial class Interop_Advapi32_PERF_INSTANCE_DEFINITION__System_Diagnostics_Process
	{
		public int ByteLength;
		public int ParentObjectTitleIndex;
		public int ParentObjectInstance;
		public int UniqueID;
		public int NameOffset;
		public int NameLength;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Advapi32+PERF_COUNTER_BLOCK,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, PublicKeyToken" +
		"=b03f5f7f11d50a3a")]
	public unsafe partial class Interop_Advapi32_PERF_COUNTER_BLOCK__System_Diagnostics_Process
	{
		public int ByteLength;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+IpPerAdapterInfo,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_IpHlpApi_IpPerAdapterInfo__System_Net_NetworkInformation
	{
		public bool autoconfigEnabled;
		public bool autoconfigActive;
		public global::System.IntPtr currentDnsServer;
		public global::_.Interop_IpHlpApi_IpAddrString__System_Net_NetworkInformation dnsServerList;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+IpAddrString,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b0" +
		"3f5f7f11d50a3a")]
	public unsafe partial struct Interop_IpHlpApi_IpAddrString__System_Net_NetworkInformation
	{
		public global::System.IntPtr Next;
		public string IpAddress;
		public string IpMask;
		public uint Context;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+FIXED_INFO,System.Net.Primitives, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d5" +
		"0a3a")]
	public unsafe partial struct Interop_IpHlpApi_FIXED_INFO__System_Net_Primitives
	{
		public string hostName;
		public string domainName;
		public global::System.IntPtr currentDnsServer;
		public global::_.Interop_IpHlpApi_IP_ADDR_STRING__System_Net_Primitives DnsServerList;
		public uint nodeType;
		public string scopeId;
		public bool enableRouting;
		public bool enableProxy;
		public bool enableDns;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+IpHlpApi+IP_ADDR_STRING,System.Net.Primitives, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f" +
		"11d50a3a")]
	public unsafe partial struct Interop_IpHlpApi_IP_ADDR_STRING__System_Net_Primitives
	{
		public global::System.IntPtr Next;
		public string IpAddress;
		public string IpMask;
		public uint Context;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+CRYPT_OID_INFO,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Culture=neutral, " +
		"PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Crypt32_CRYPT_OID_INFO__System_Security_Cryptography_X509Certificates
	{
		public int cbSize;
		public global::System.IntPtr pszOID;
		public global::System.IntPtr pwszName;
		public global::System_Security_Cryptography.OidGroup__System_Security_Cryptography_Encoding dwGroupId;
		public int AlgId;
		public int cbData;
		public global::System.IntPtr pbData;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SChannel+SCHANNEL_ALERT_TOKEN,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public unsafe partial struct Interop_SChannel_SCHANNEL_ALERT_TOKEN__System_Net_Security
	{
		public uint dwTokenType;
		public uint dwAlertType;
		public uint dwAlertNumber;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SecPkgContext_ApplicationProtocol,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public unsafe partial class Interop_SecPkgContext_ApplicationProtocol__System_Net_Security
	{
		public global::_.Interop_ApplicationProtocolNegotiationStatus__System_Net_Security ProtoNegoStatus;
		public global::_.Interop_ApplicationProtocolNegotiationExt__System_Net_Security ProtoNegoExt;
		public byte ProtocolIdSize;
		public byte[] ProtocolId;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+ApplicationProtocolNegotiationStatus,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyTok" +
		"en=b03f5f7f11d50a3a")]
	public enum Interop_ApplicationProtocolNegotiationStatus__System_Net_Security
	{
		None = 0,
		Success = 1,
		SelectedClientOnly = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+ApplicationProtocolNegotiationExt,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public enum Interop_ApplicationProtocolNegotiationExt__System_Net_Security
	{
		None = 0,
		NPN = 1,
		ALPN = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SspiCli+SecPkgContext_IssuerListInfoEx,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyT" +
		"oken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_SspiCli_SecPkgContext_IssuerListInfoEx__System_Net_Security
	{
		public global::System.Runtime.InteropServices.SafeHandle aIssuers;
		public uint cIssuers;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SECURITY_LOGON_SESSION_DATA,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicK" +
		"eyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_SECURITY_LOGON_SESSION_DATA__System_Security_Principal_Windows
	{
		public uint Size;
		public global::_.Interop_LUID__System_Security_Principal_Windows LogonId;
		public global::_.Interop_UNICODE_INTPTR_STRING__System_Security_Principal_Windows UserName;
		public global::_.Interop_UNICODE_INTPTR_STRING__System_Security_Principal_Windows LogonDomain;
		public global::_.Interop_UNICODE_INTPTR_STRING__System_Security_Principal_Windows AuthenticationPackage;
		public uint LogonType;
		public uint Session;
		public global::System.IntPtr Sid;
		public long LogonTime;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+UNICODE_INTPTR_STRING,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_UNICODE_INTPTR_STRING__System_Security_Principal_Windows
	{
		public ushort Length;
		public ushort MaxLength;
		public global::System.IntPtr Buffer;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BCrypt+BCryptBufferDesc,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutral, PublicKeyTok" +
		"en=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_BCrypt_BCryptBufferDesc__System_Security_Cryptography_Cng
	{
		public int ulVersion;
		public int cBuffers;
		public global::System.IntPtr pBuffers;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BCrypt+BCryptBuffer,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b" +
		"03f5f7f11d50a3a")]
	public unsafe partial struct Interop_BCrypt_BCryptBuffer__System_Security_Cryptography_Cng
	{
		public int cbBuffer;
		public global::_.Interop_BCrypt_NCryptBufferDescriptors__System_Security_Cryptography_Cng BufferType;
		public global::System.IntPtr pvBuffer;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+BCrypt+NCryptBufferDescriptors,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutral, Publi" +
		"cKeyToken=b03f5f7f11d50a3a")]
	public enum Interop_BCrypt_NCryptBufferDescriptors__System_Security_Cryptography_Cng
	{
		NCRYPTBUFFER_ECC_CURVE_NAME = 60,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+SID_AND_ATTRIBUTES,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b" +
		"03f5f7f11d50a3a")]
	public unsafe partial struct Interop_SID_AND_ATTRIBUTES__System_Security_Principal_Windows
	{
		public global::System.IntPtr Sid;
		public uint Attributes;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+TOKEN_PRIMARY_GROUP,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_TOKEN_PRIMARY_GROUP__System_Security_Principal_Windows
	{
		public global::System.IntPtr PrimaryGroup;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+TOKEN_GROUPS,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7" +
		"f11d50a3a")]
	public unsafe partial struct Interop_TOKEN_GROUPS__System_Security_Principal_Windows
	{
		public uint GroupCount;
		public global::_.Interop_SID_AND_ATTRIBUTES__System_Security_Principal_Windows Groups;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+CLAIM_SECURITY_ATTRIBUTES_INFORMATION,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_CLAIM_SECURITY_ATTRIBUTES_INFORMATION__System_Security_Principal_Windows
	{
		public ushort Version;
		public ushort Reserved;
		public uint AttributeCount;
		public global::_.Interop_CLAIM_SECURITY_ATTRIBUTE_INFORMATION_V1__System_Security_Principal_Windows Attribute;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+CLAIM_SECURITY_ATTRIBUTE_INFORMATION_V1,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_CLAIM_SECURITY_ATTRIBUTE_INFORMATION_V1__System_Security_Principal_Windows
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr pAttributeV1;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+CLAIM_SECURITY_ATTRIBUTE_V1,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicK" +
		"eyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_CLAIM_SECURITY_ATTRIBUTE_V1__System_Security_Principal_Windows
	{
		public string Name;
		public global::_.Interop_ClaimSecurityAttributeType__System_Security_Principal_Windows ValueType;
		public ushort Reserved;
		public uint Flags;
		public uint ValueCount;
		public global::_.Interop_CLAIM_VALUES_ATTRIBUTE_V1__System_Security_Principal_Windows Values;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+ClaimSecurityAttributeType,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKe" +
		"yToken=b03f5f7f11d50a3a")]
	public enum Interop_ClaimSecurityAttributeType__System_Security_Principal_Windows : ushort
	{
		CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID = 0x0,
		CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 = 0x1,
		CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 = 0x2,
		CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING = 0x3,
		CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN = 0x4,
		CLAIM_SECURITY_ATTRIBUTE_TYPE_SID = 0x5,
		CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN = 0x6,
		CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING = 0x10,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+CLAIM_VALUES_ATTRIBUTE_V1,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKey" +
		"Token=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_CLAIM_VALUES_ATTRIBUTE_V1__System_Security_Principal_Windows
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr pInt64;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr pUint64;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr ppString;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr pFqbn;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr pOctetString;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Crypt32+CRYPT_OID_INFO,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_Crypt32_CRYPT_OID_INFO__System_Security_Cryptography_Cng
	{
		public int cbSize;
		public global::System.IntPtr pszOID;
		public global::System.IntPtr pwszName;
		public global::System_Security_Cryptography.OidGroup__System_Security_Cryptography_Encoding dwGroupId;
		public int AlgId;
		public int cbData;
		public global::System.IntPtr pbData;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+LSA_TRANSLATED_NAME,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_LSA_TRANSLATED_NAME__System_Security_Principal_Windows
	{
		public int Use;
		public global::_.Interop_UNICODE_INTPTR_STRING__System_Security_Principal_Windows Name;
		public int DomainIndex;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+LSA_TRUST_INFORMATION,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_LSA_TRUST_INFORMATION__System_Security_Principal_Windows
	{
		public global::_.Interop_UNICODE_INTPTR_STRING__System_Security_Principal_Windows Name;
		public global::System.IntPtr Sid;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+LSA_REFERENCED_DOMAIN_LIST,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKe" +
		"yToken=b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_LSA_REFERENCED_DOMAIN_LIST__System_Security_Principal_Windows
	{
		public int Entries;
		public global::System.IntPtr Domains;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Interop+LSA_TRANSLATED_SID2,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public unsafe partial struct Interop_LSA_TRANSLATED_SID2__System_Security_Principal_Windows
	{
		public int Use;
		public global::System.IntPtr Sid;
		public int DomainIndex;
		public uint Flags;
	}
}

namespace __Interop
{
	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=32)]
	public unsafe partial struct InlineArray_byte___32
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 32)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___32* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 32)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___32* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 32;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=16)]
	public unsafe partial struct InlineArray_byte___16
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 16)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___16* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 16)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___16* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 16;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=64)]
	public unsafe partial struct InlineArray_byte___64
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 64)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___64* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 64)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___64* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 64;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=64)]
	public unsafe partial struct InlineArray_System_IntPtr___8
	{
		public global::System.IntPtr this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 8)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_System_IntPtr___8* pThis = &(this))
					return ((global::System.IntPtr*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 8)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_System_IntPtr___8* pThis = &(this))
					((global::System.IntPtr*)pThis)[index] = value;
			}
		}
		public const int Length = 8;
		global::System.IntPtr firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=65)]
	public unsafe partial struct InlineArray_byte___65
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 65)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___65* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 65)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___65* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 65;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=257)]
	public unsafe partial struct InlineArray_byte___257
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 257)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___257* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 257)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___257* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 257;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=129)]
	public unsafe partial struct InlineArray_byte___129
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 129)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___129* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 129)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___129* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 129;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=28)]
	public unsafe partial struct InlineArray_short___14
	{
		public short this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 14)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_short___14* pThis = &(this))
					return ((short*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 14)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_short___14* pThis = &(this))
					((short*)pThis)[index] = value;
			}
		}
		public const int Length = 14;
		short firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=100)]
	public unsafe partial struct InlineArray_byte___100
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 100)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___100* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 100)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___100* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 100;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=8)]
	public unsafe partial struct InlineArray_byte___8
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 8)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___8* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 8)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___8* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 8;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=64)]
	public unsafe partial struct InlineArray_uint___16
	{
		public uint this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 16)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_uint___16* pThis = &(this))
					return ((uint*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 16)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_uint___16* pThis = &(this))
					((uint*)pThis)[index] = value;
			}
		}
		public const int Length = 16;
		uint firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=130)]
	public unsafe partial struct InlineArray_byte___130
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 130)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___130* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 130)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___130* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 130;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=132)]
	public unsafe partial struct InlineArray_byte___132
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 132)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___132* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 132)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___132* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 132;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=260)]
	public unsafe partial struct InlineArray_byte___260
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 260)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___260* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 260)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___260* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 260;
		byte firstElement;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Size=255)]
	public unsafe partial struct InlineArray_byte___255
	{
		public byte this[uint index]
		{
			get
			{
				if (index < 0 
							|| index >= 255)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___255* pThis = &(this))
					return ((byte*)pThis)[index];
			}
			set
			{
				if (index < 0 
							|| index >= 255)
					throw new global::System.IndexOutOfRangeException();
				fixed (global::__Interop.InlineArray_byte___255* pThis = &(this))
					((byte*)pThis)[index] = value;
			}
		}
		public const int Length = 255;
		byte firstElement;
	}
}

namespace Internal.Cryptography.Pal.Native
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.SafeCertContextHandle,System.Security.Cryptography.X509Certificates, Version=4." +
		"2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeCertContextHandle__System_Security_Cryptography_X509Certificates : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeCertContextHandle__System_Security_Cryptography_X509Certificates() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.SafeCertStoreHandle,System.Security.Cryptography.X509Certificates, Version=4.2." +
		"1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeCertStoreHandle__System_Security_Cryptography_X509Certificates : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeCertStoreHandle__System_Security_Cryptography_X509Certificates() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.SafeCryptMsgHandle,System.Security.Cryptography.X509Certificates, Version=4.2.1" +
		".0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeCryptMsgHandle__System_Security_Cryptography_X509Certificates : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeCryptMsgHandle__System_Security_Cryptography_X509Certificates() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.SafeCertContextHandleWithKeyContainerDeletion,System.Security.Cryptography.X509" +
		"Certificates, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeCertContextHandleWithKeyContainerDeletion__System_Security_Cryptography_X509Certificates : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeCertContextHandleWithKeyContainerDeletion__System_Security_Cryptography_X509Certificates() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}
}

namespace Internal_Cryptography_Pal_Native
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertContextPropId,System.Security.Cryptography.X509Certificates, Version=4.2.1." +
		"0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertContextPropId__System_Security_Cryptography_X509Certificates
	{
		CERT_KEY_PROV_INFO_PROP_ID = 2,
		CERT_SHA1_HASH_PROP_ID = 3,
		CERT_KEY_CONTEXT_PROP_ID = 5,
		CERT_FRIENDLY_NAME_PROP_ID = 11,
		CERT_ARCHIVED_PROP_ID = 19,
		CERT_KEY_IDENTIFIER_PROP_ID = 20,
		CERT_PUBKEY_ALG_PARA_PROP_ID = 22,
		CERT_NCRYPT_KEY_HANDLE_PROP_ID = 78,
		CERT_DELETE_KEYSET_PROP_ID = 101,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CRYPTOAPI_BLOB,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, " +
		"Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CRYPTOAPI_BLOB__System_Security_Cryptography_X509Certificates
	{
		public int cbData;
		public byte* pbData;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertQueryObjectType,System.Security.Cryptography.X509Certificates, Version=4.2." +
		"1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertQueryObjectType__System_Security_Cryptography_X509Certificates
	{
		CERT_QUERY_OBJECT_FILE = 1,
		CERT_QUERY_OBJECT_BLOB = 2,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.ExpectedContentTypeFlags,System.Security.Cryptography.X509Certificates, Version" +
		"=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum ExpectedContentTypeFlags__System_Security_Cryptography_X509Certificates
	{
		CERT_QUERY_CONTENT_FLAG_CERT = 2,
		CERT_QUERY_CONTENT_FLAG_CTL = 4,
		CERT_QUERY_CONTENT_FLAG_CRL = 8,
		CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE = 16,
		CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT = 32,
		CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL = 64,
		CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL = 128,
		CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED = 256,
		CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED = 512,
		CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED = 1024,
		CERT_QUERY_CONTENT_FLAG_PKCS10 = 2048,
		CERT_QUERY_CONTENT_FLAG_PFX = 4096,
		CERT_QUERY_CONTENT_FLAG_CERT_PAIR = 8192,
		CERT_QUERY_CONTENT_FLAG_ALL = 16382,
		CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD = 16384,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.ExpectedFormatTypeFlags,System.Security.Cryptography.X509Certificates, Version=" +
		"4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum ExpectedFormatTypeFlags__System_Security_Cryptography_X509Certificates
	{
		CERT_QUERY_FORMAT_FLAG_BINARY = 2,
		CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED = 4,
		CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED = 8,
		CERT_QUERY_FORMAT_FLAG_ALL = 14,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertEncodingType,System.Security.Cryptography.X509Certificates, Version=4.2.1.0" +
		", Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertEncodingType__System_Security_Cryptography_X509Certificates
	{
		X509_ASN_ENCODING = 1,
		PKCS_7_ASN_ENCODING = 65536,
		All = 65537,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.ContentType,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Cul" +
		"ture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum ContentType__System_Security_Cryptography_X509Certificates
	{
		CERT_QUERY_CONTENT_CERT = 1,
		CERT_QUERY_CONTENT_CTL = 2,
		CERT_QUERY_CONTENT_CRL = 3,
		CERT_QUERY_CONTENT_SERIALIZED_STORE = 4,
		CERT_QUERY_CONTENT_SERIALIZED_CERT = 5,
		CERT_QUERY_CONTENT_SERIALIZED_CTL = 6,
		CERT_QUERY_CONTENT_SERIALIZED_CRL = 7,
		CERT_QUERY_CONTENT_PKCS7_SIGNED = 8,
		CERT_QUERY_CONTENT_PKCS7_UNSIGNED = 9,
		CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED = 10,
		CERT_QUERY_CONTENT_PKCS10 = 11,
		CERT_QUERY_CONTENT_PFX = 12,
		CERT_QUERY_CONTENT_CERT_PAIR = 13,
		CERT_QUERY_CONTENT_PFX_AND_LOAD = 14,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.FormatType,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Cult" +
		"ure=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum FormatType__System_Security_Cryptography_X509Certificates
	{
		CERT_QUERY_FORMAT_BINARY = 1,
		CERT_QUERY_FORMAT_BASE64_ENCODED = 2,
		CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED = 3,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CryptMessageParameterType,System.Security.Cryptography.X509Certificates, Versio" +
		"n=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CryptMessageParameterType__System_Security_Cryptography_X509Certificates
	{
		CMSG_SIGNER_COUNT_PARAM = 5,
		CMSG_SIGNER_INFO_PARAM = 6,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.PfxCertStoreFlags,System.Security.Cryptography.X509Certificates, Version=4.2.1." +
		"0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum PfxCertStoreFlags__System_Security_Cryptography_X509Certificates
	{
		None = 0,
		CRYPT_EXPORTABLE = 1,
		CRYPT_USER_PROTECTED = 2,
		PKCS12_INCLUDE_EXTENDED_PROPERTIES = 16,
		CRYPT_MACHINE_KEYSET = 32,
		PKCS12_PREFER_CNG_KSP = 256,
		PKCS12_ALWAYS_CNG_KSP = 512,
		CRYPT_USER_KEYSET = 4096,
		PKCS12_ALLOW_OVERWRITE_KEY = 16384,
		PKCS12_NO_PERSIST_KEY = 32768,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertNameType,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Cu" +
		"lture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertNameType__System_Security_Cryptography_X509Certificates
	{
		CERT_NAME_EMAIL_TYPE = 1,
		CERT_NAME_RDN_TYPE = 2,
		CERT_NAME_ATTR_TYPE = 3,
		CERT_NAME_SIMPLE_DISPLAY_TYPE = 4,
		CERT_NAME_FRIENDLY_DISPLAY_TYPE = 5,
		CERT_NAME_DNS_TYPE = 6,
		CERT_NAME_URL_TYPE = 7,
		CERT_NAME_UPN_TYPE = 8,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertNameFlags,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, C" +
		"ulture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertNameFlags__System_Security_Cryptography_X509Certificates
	{
		None = 0,
		CERT_NAME_ISSUER_FLAG = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertNameStringType,System.Security.Cryptography.X509Certificates, Version=4.2.1" +
		".0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertNameStringType__System_Security_Cryptography_X509Certificates
	{
		CERT_X500_NAME_STR = 3,
		CERT_NAME_STR_REVERSE_FLAG = 33554432,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertFindFlags,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, C" +
		"ulture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertFindFlags__System_Security_Cryptography_X509Certificates
	{
		None = 0,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertFindType,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Cu" +
		"lture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertFindType__System_Security_Cryptography_X509Certificates
	{
		CERT_FIND_ANY = 0,
		CERT_FIND_HASH = 65536,
		CERT_FIND_ISSUER_STR = 524292,
		CERT_FIND_SUBJECT_STR = 524295,
		CERT_FIND_SUBJECT_CERT = 720896,
		CERT_FIND_EXISTING = 851968,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CERT_CONTEXT,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Cu" +
		"lture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CERT_CONTEXT__System_Security_Cryptography_X509Certificates
	{
		public global::Internal_Cryptography_Pal_Native.CertEncodingType__System_Security_Cryptography_X509Certificates dwCertEncodingType;
		public byte* pbCertEncoded;
		public int cbCertEncoded;
		public global::Internal_Cryptography_Pal_Native.CERT_INFO__System_Security_Cryptography_X509Certificates* pCertInfo;
		public global::System.IntPtr hCertStore;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CERT_INFO,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Cultu" +
		"re=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CERT_INFO__System_Security_Cryptography_X509Certificates
	{
		public int dwVersion;
		public global::Internal_Cryptography_Pal_Native.CRYPTOAPI_BLOB__System_Security_Cryptography_X509Certificates SerialNumber;
		public global::Internal_Cryptography_Pal_Native.CRYPT_ALGORITHM_IDENTIFIER__System_Security_Cryptography_X509Certificates SignatureAlgorithm;
		public global::Internal_Cryptography_Pal_Native.CRYPTOAPI_BLOB__System_Security_Cryptography_X509Certificates Issuer;
		public global::Internal_Cryptography_Pal_Native.FILETIME__System_Security_Cryptography_X509Certificates NotBefore;
		public global::Internal_Cryptography_Pal_Native.FILETIME__System_Security_Cryptography_X509Certificates NotAfter;
		public global::Internal_Cryptography_Pal_Native.CRYPTOAPI_BLOB__System_Security_Cryptography_X509Certificates Subject;
		public global::Internal_Cryptography_Pal_Native.CERT_PUBLIC_KEY_INFO__System_Security_Cryptography_X509Certificates SubjectPublicKeyInfo;
		public global::Internal_Cryptography_Pal_Native.CRYPT_BIT_BLOB__System_Security_Cryptography_X509Certificates IssuerUniqueId;
		public global::Internal_Cryptography_Pal_Native.CRYPT_BIT_BLOB__System_Security_Cryptography_X509Certificates SubjectUniqueId;
		public int cExtension;
		public global::Internal_Cryptography_Pal_Native.CERT_EXTENSION__System_Security_Cryptography_X509Certificates* rgExtension;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CRYPT_ALGORITHM_IDENTIFIER,System.Security.Cryptography.X509Certificates, Versi" +
		"on=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CRYPT_ALGORITHM_IDENTIFIER__System_Security_Cryptography_X509Certificates
	{
		public global::System.IntPtr pszObjId;
		public global::Internal_Cryptography_Pal_Native.CRYPTOAPI_BLOB__System_Security_Cryptography_X509Certificates Parameters;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.FILETIME,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Cultur" +
		"e=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct FILETIME__System_Security_Cryptography_X509Certificates
	{
		public uint ftTimeLow;
		public uint ftTimeHigh;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CERT_PUBLIC_KEY_INFO,System.Security.Cryptography.X509Certificates, Version=4.2" +
		".1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CERT_PUBLIC_KEY_INFO__System_Security_Cryptography_X509Certificates
	{
		public global::Internal_Cryptography_Pal_Native.CRYPT_ALGORITHM_IDENTIFIER__System_Security_Cryptography_X509Certificates Algorithm;
		public global::Internal_Cryptography_Pal_Native.CRYPT_BIT_BLOB__System_Security_Cryptography_X509Certificates PublicKey;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CRYPT_BIT_BLOB,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, " +
		"Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CRYPT_BIT_BLOB__System_Security_Cryptography_X509Certificates
	{
		public int cbData;
		public byte* pbData;
		public int cUnusedBits;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CERT_EXTENSION,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, " +
		"Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CERT_EXTENSION__System_Security_Cryptography_X509Certificates
	{
		public global::System.IntPtr pszObjId;
		public int fCritical;
		public global::Internal_Cryptography_Pal_Native.CRYPTOAPI_BLOB__System_Security_Cryptography_X509Certificates Value;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CryptAcquireContextFlags,System.Security.Cryptography.X509Certificates, Version" +
		"=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CryptAcquireContextFlags__System_Security_Cryptography_X509Certificates
	{
		None = 0,
		CRYPT_DELETEKEYSET = 16,
		CRYPT_MACHINE_KEYSET = 32,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertNameStrTypeAndFlags,System.Security.Cryptography.X509Certificates, Version=" +
		"4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertNameStrTypeAndFlags__System_Security_Cryptography_X509Certificates
	{
		CERT_SIMPLE_NAME_STR = 1,
		CERT_OID_NAME_STR = 2,
		CERT_X500_NAME_STR = 3,
		CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG = 65536,
		CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG = 131072,
		CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG = 262144,
		CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG = 524288,
		CERT_NAME_STR_REVERSE_FLAG = 33554432,
		CERT_NAME_STR_COMMA_FLAG = 67108864,
		CERT_NAME_STR_CRLF_FLAG = 134217728,
		CERT_NAME_STR_NO_QUOTING_FLAG = 268435456,
		CERT_NAME_STR_NO_PLUS_FLAG = 536870912,
		CERT_NAME_STR_SEMICOLON_FLAG = 1073741824,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertControlStoreFlags,System.Security.Cryptography.X509Certificates, Version=4." +
		"2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertControlStoreFlags__System_Security_Cryptography_X509Certificates
	{
		None = 0,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertControlStoreType,System.Security.Cryptography.X509Certificates, Version=4.2" +
		".1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertControlStoreType__System_Security_Cryptography_X509Certificates
	{
		CERT_STORE_CTRL_AUTO_RESYNC = 4,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CERT_CHAIN_PARA,System.Security.Cryptography.X509Certificates, Version=4.2.1.0," +
		" Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CERT_CHAIN_PARA__System_Security_Cryptography_X509Certificates
	{
		public int cbSize;
		public global::Internal_Cryptography_Pal_Native.CERT_USAGE_MATCH__System_Security_Cryptography_X509Certificates RequestedUsage;
		public global::Internal_Cryptography_Pal_Native.CERT_USAGE_MATCH__System_Security_Cryptography_X509Certificates RequestedIssuancePolicy;
		public int dwUrlRetrievalTimeout;
		public int fCheckRevocationFreshnessTime;
		public int dwRevocationFreshnessTime;
		public global::Internal_Cryptography_Pal_Native.FILETIME__System_Security_Cryptography_X509Certificates* pftCacheResync;
		public int pStrongSignPara;
		public int dwStrongSignFlags;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CERT_USAGE_MATCH,System.Security.Cryptography.X509Certificates, Version=4.2.1.0" +
		", Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CERT_USAGE_MATCH__System_Security_Cryptography_X509Certificates
	{
		public global::Internal_Cryptography_Pal_Native.CertUsageMatchType__System_Security_Cryptography_X509Certificates dwType;
		public global::Internal_Cryptography_Pal_Native.CTL_USAGE__System_Security_Cryptography_X509Certificates Usage;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertUsageMatchType,System.Security.Cryptography.X509Certificates, Version=4.2.1" +
		".0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertUsageMatchType__System_Security_Cryptography_X509Certificates
	{
		USAGE_MATCH_TYPE_AND = 0,
		USAGE_MATCH_TYPE_OR = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CTL_USAGE,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Cultu" +
		"re=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CTL_USAGE__System_Security_Cryptography_X509Certificates
	{
		public int cUsageIdentifier;
		public global::System.IntPtr rgpszUsageIdentifier;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertChainFlags,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, " +
		"Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertChainFlags__System_Security_Cryptography_X509Certificates
	{
		CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY = -2147483648,
		None = 0,
		CERT_CHAIN_REVOCATION_CHECK_END_CERT = 268435456,
		CERT_CHAIN_REVOCATION_CHECK_CHAIN = 536870912,
		CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT = 1073741824,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CERT_CHAIN_POLICY_PARA,System.Security.Cryptography.X509Certificates, Version=4" +
		".2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CERT_CHAIN_POLICY_PARA__System_Security_Cryptography_X509Certificates
	{
		public int cbSize;
		public int dwFlags;
		public global::System.IntPtr pvExtraPolicyPara;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CERT_CHAIN_POLICY_STATUS,System.Security.Cryptography.X509Certificates, Version" +
		"=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct CERT_CHAIN_POLICY_STATUS__System_Security_Cryptography_X509Certificates
	{
		public int cbSize;
		public int dwError;
		public global::System.IntPtr lChainIndex;
		public global::System.IntPtr lElementIndex;
		public global::System.IntPtr pvExtraPolicyStatus;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertStoreFlags,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, " +
		"Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertStoreFlags__System_Security_Cryptography_X509Certificates
	{
		None = 0,
		CERT_STORE_NO_CRYPT_RELEASE_FLAG = 1,
		CERT_STORE_SET_LOCALIZED_NAME_FLAG = 2,
		CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG = 4,
		CERT_STORE_DELETE_FLAG = 16,
		CERT_STORE_UNSAFE_PHYSICAL_FLAG = 32,
		CERT_STORE_SHARE_STORE_FLAG = 64,
		CERT_STORE_SHARE_CONTEXT_FLAG = 128,
		CERT_STORE_MANIFOLD_FLAG = 256,
		CERT_STORE_ENUM_ARCHIVED_FLAG = 512,
		CERT_STORE_UPDATE_KEYID_FLAG = 1024,
		CERT_STORE_BACKUP_RESTORE_FLAG = 2048,
		CERT_STORE_MAXIMUM_ALLOWED_FLAG = 4096,
		CERT_STORE_CREATE_NEW_FLAG = 8192,
		CERT_STORE_OPEN_EXISTING_FLAG = 16384,
		CERT_STORE_READONLY_FLAG = 32768,
		CERT_SYSTEM_STORE_CURRENT_USER = 65536,
		CERT_SYSTEM_STORE_LOCAL_MACHINE = 131072,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CertStoreAddDisposition,System.Security.Cryptography.X509Certificates, Version=" +
		"4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CertStoreAddDisposition__System_Security_Cryptography_X509Certificates
	{
		CERT_STORE_ADD_NEW = 1,
		CERT_STORE_ADD_USE_EXISTING = 2,
		CERT_STORE_ADD_REPLACE_EXISTING = 3,
		CERT_STORE_ADD_ALWAYS = 4,
		CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES = 5,
		CERT_STORE_ADD_NEWER = 6,
		CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES = 7,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.FormatObjectType,System.Security.Cryptography.X509Certificates, Version=4.2.1.0" +
		", Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum FormatObjectType__System_Security_Cryptography_X509Certificates
	{
		None = 0,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.FormatObjectStringType,System.Security.Cryptography.X509Certificates, Version=4" +
		".2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum FormatObjectStringType__System_Security_Cryptography_X509Certificates
	{
		None = 0,
		CRYPT_FORMAT_STR_MULTI_LINE = 1,
		CRYPT_FORMAT_STR_NO_HEX = 16,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.Cryptography.Pal.Native.CryptDecodeObjectFlags,System.Security.Cryptography.X509Certificates, Version=4" +
		".2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CryptDecodeObjectFlags__System_Security_Cryptography_X509Certificates
	{
		None = 0,
	}
}

namespace Internal_WinRT_Interop
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+DispatcherQueuePriority,System.Private.WinRTInterop.CoreLib, Version=4.0.0" +
		".0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public enum WinRTCallbacks_DispatcherQueuePriority__System_Private_WinRTInterop_CoreLib
	{
		Low = -10,
		Normal = 0,
		High = 10,
	}
}

namespace Internal_WinRT_Interop_WinRTCallbacks
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+IDispatcherQueueHandler,System.Private.WinRTInterop.CoreLib, Version=4.0.0" +
		".0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IDispatcherQueueHandler__System_Private_WinRTInterop_CoreLib
	{
		void Invoke();
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+IDispatcherQueue,System.Private.WinRTInterop.CoreLib, Version=4.0.0.0, Cul" +
		"ture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IDispatcherQueue__System_Private_WinRTInterop_CoreLib
	{
		object CreateTimer();

		bool TryEnqueue(global::Internal_WinRT_Interop_WinRTCallbacks.IDispatcherQueueHandler__System_Private_WinRTInterop_CoreLib callback);

		bool TryEnqueue(
					global::Internal_WinRT_Interop.WinRTCallbacks_DispatcherQueuePriority__System_Private_WinRTInterop_CoreLib priority, 
					global::Internal_WinRT_Interop_WinRTCallbacks.IDispatcherQueueHandler__System_Private_WinRTInterop_CoreLib callback);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Internal.WinRT.Interop.WinRTCallbacks+IDispatcherQueueStatics,System.Private.WinRTInterop.CoreLib, Version=4.0.0" +
		".0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IDispatcherQueueStatics__System_Private_WinRTInterop_CoreLib
	{
		global::Internal_WinRT_Interop_WinRTCallbacks.IDispatcherQueue__System_Private_WinRTInterop_CoreLib GetForCurrentThread();
	}
}

namespace Microsoft.Win32.SafeHandles
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeProcessHandle,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, Publ" +
		"icKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeProcessHandle__System_Diagnostics_Process : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeProcessHandle__System_Diagnostics_Process() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeLocalAllocHandle,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral" +
		", PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeLocalAllocHandle__System_Net_NetworkInformation : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeLocalAllocHandle__System_Net_NetworkInformation() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeWaitHandle,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyTo" +
		"ken=b03f5f7f11d50a3a")]
	public unsafe class SafeWaitHandle__System_Private_CoreLib : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeWaitHandle__System_Private_CoreLib() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeTokenHandle,System.Diagnostics.Process, Version=4.2.1.0, Culture=neutral, Public" +
		"KeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeTokenHandle__System_Diagnostics_Process : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeTokenHandle__System_Diagnostics_Process() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeFileHandle,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyTo" +
		"ken=b03f5f7f11d50a3a")]
	public unsafe class SafeFileHandle__System_Private_CoreLib : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeFileHandle__System_Private_CoreLib() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeFindHandle,System.IO.FileSystem, Version=4.1.1.0, Culture=neutral, PublicKeyToke" +
		"n=b03f5f7f11d50a3a")]
	public unsafe class SafeFindHandle__System_IO_FileSystem : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeFindHandle__System_IO_FileSystem() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeBCryptAlgorithmHandle,System.Security.Cryptography.Algorithms, Version=4.3.1.0, " +
		"Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeBCryptAlgorithmHandle__System_Security_Cryptography_Algorithms : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeBCryptAlgorithmHandle__System_Security_Cryptography_Algorithms() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeBCryptHashHandle,System.Security.Cryptography.Algorithms, Version=4.3.1.0, Cultu" +
		"re=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeBCryptHashHandle__System_Security_Cryptography_Algorithms : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeBCryptHashHandle__System_Security_Cryptography_Algorithms() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeBCryptHandle,System.Security.Cryptography.Algorithms, Version=4.3.1.0, Culture=n" +
		"eutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeBCryptHandle__System_Security_Cryptography_Algorithms : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeBCryptHandle__System_Security_Cryptography_Algorithms() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafePasswordHandle,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, C" +
		"ulture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafePasswordHandle__System_Security_Cryptography_X509Certificates : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafePasswordHandle__System_Security_Cryptography_X509Certificates() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeAccessTokenHandle,System.Security.Principal.Windows, Version=4.1.1.0, Culture=ne" +
		"utral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeAccessTokenHandle__System_Security_Principal_Windows : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeAccessTokenHandle__System_Security_Principal_Windows() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=" +
		"neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeNCryptProviderHandle__System_Security_Cryptography_Cng : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeNCryptProviderHandle__System_Security_Cryptography_Cng() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeNCryptKeyHandle__System_Security_Cryptography_Cng : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeNCryptKeyHandle__System_Security_Cryptography_Cng() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeX509ChainHandle,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, " +
		"Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeX509ChainHandle__System_Security_Cryptography_X509Certificates : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeX509ChainHandle__System_Security_Cryptography_X509Certificates() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeLsaReturnBufferHandle,System.Security.Principal.Windows, Version=4.1.1.0, Cultur" +
		"e=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeLsaReturnBufferHandle__System_Security_Principal_Windows : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeLsaReturnBufferHandle__System_Security_Principal_Windows() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeLocalAllocHandle,System.Net.Primitives, Version=4.1.1.0, Culture=neutral, Public" +
		"KeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeLocalAllocHandle__System_Net_Primitives : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeLocalAllocHandle__System_Net_Primitives() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeLocalAllocHandle,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neu" +
		"tral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeLocalAllocHandle__System_Security_Principal_Windows : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeLocalAllocHandle__System_Security_Principal_Windows() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeBCryptKeyHandle,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, " +
		"Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeBCryptKeyHandle__System_Security_Cryptography_X509Certificates : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeBCryptKeyHandle__System_Security_Cryptography_X509Certificates() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeBCryptHandle,System.Security.Cryptography.X509Certificates, Version=4.2.1.0, Cul" +
		"ture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeBCryptHandle__System_Security_Cryptography_X509Certificates : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeBCryptHandle__System_Security_Cryptography_X509Certificates() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeNCryptHandle,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutral," +
		" PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeNCryptHandle__System_Security_Cryptography_Cng : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeNCryptHandle__System_Security_Cryptography_Cng() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeLsaPolicyHandle,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeLsaPolicyHandle__System_Security_Principal_Windows : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeLsaPolicyHandle__System_Security_Principal_Windows() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("Microsoft.Win32.SafeHandles.SafeLsaMemoryHandle,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeLsaMemoryHandle__System_Security_Principal_Windows : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeLsaMemoryHandle__System_Security_Principal_Windows() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}
}

namespace NAudio
{
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MmResult,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MmResult__NAudio
	{
		NoError = 0,
		UnspecifiedError = 1,
		BadDeviceId = 2,
		NotEnabled = 3,
		AlreadyAllocated = 4,
		InvalidHandle = 5,
		NoDriver = 6,
		MemoryAllocationError = 7,
		NotSupported = 8,
		BadErrorNumber = 9,
		InvalidFlag = 10,
		InvalidParameter = 11,
		HandleBusy = 12,
		InvalidAlias = 13,
		BadRegistryDatabase = 14,
		RegistryKeyNotFound = 15,
		RegistryReadError = 16,
		RegistryWriteError = 17,
		RegistryDeleteError = 18,
		RegistryValueNotFound = 19,
		NoDriverCallback = 20,
		MoreData = 21,
		WaveBadFormat = 32,
		WaveStillPlaying = 33,
		WaveHeaderUnprepared = 34,
		WaveSync = 35,
		AcmNotPossible = 512,
		AcmBusy = 513,
		AcmHeaderUnprepared = 514,
		AcmCancelled = 515,
		MixerInvalidLine = 1024,
		MixerInvalidControl = 1025,
		MixerInvalidValue = 1026,
	}
}

namespace NAudio.CoreAudioApi.Interfaces
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyComObject)]
	[global::System.Runtime.InteropServices.Guid("bcde0395-e52f-467c-8e3d-c4579291692e")]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	public unsafe class MMDeviceEnumeratorComObject : global::System.__ComObject
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MMDeviceEnumeratorComObject()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.CoCreateInstanceEx(new global::System.Guid("bcde0395-e52f-467c-8e3d-c4579291692e"));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public MMDeviceEnumeratorComObject(global::System.IntPtr dummy)
		{
		}
	}
}

namespace NAudio.Dmo
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyComObject)]
	[global::System.Runtime.InteropServices.Guid("f447b69e-1884-4a7e-8055-346f74d6edb3")]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	public unsafe class ResamplerMediaComObject : global::System.__ComObject
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ResamplerMediaComObject()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.CoCreateInstanceEx(new global::System.Guid("f447b69e-1884-4a7e-8055-346f74d6edb3"));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ResamplerMediaComObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyComObject)]
	[global::System.Runtime.InteropServices.Guid("bbeea841-0a63-4f52-a7ab-a9b3a84ed38a")]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	public unsafe class WindowsMediaMp3DecoderComObject : global::System.__ComObject
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public WindowsMediaMp3DecoderComObject()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.CoCreateInstanceEx(new global::System.Guid("bbeea841-0a63-4f52-a7ab-a9b3a84ed38a"));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public WindowsMediaMp3DecoderComObject(global::System.IntPtr dummy)
		{
		}
	}
}

namespace NAudio.MediaFoundation
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyComObject)]
	[global::System.Runtime.InteropServices.Guid("48e2ed0f-98c2-4a37-bed5-166312ddd83f")]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	public unsafe class MFReadWriteClassFactory : global::System.__ComObject
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public MFReadWriteClassFactory()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.CoCreateInstanceEx(new global::System.Guid("48e2ed0f-98c2-4a37-bed5-166312ddd83f"));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public MFReadWriteClassFactory(global::System.IntPtr dummy)
		{
		}
	}
}

namespace NAudio.Midi
{
	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Midi.MidiInterop+MidiInCallback,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void MidiInterop_MidiInCallback__NAudio(
				global::System.IntPtr midiInHandle, 
				global::NAudio_Midi.MidiInterop_MidiInMessage__NAudio message, 
				global::System.IntPtr userData, 
				global::System.IntPtr messageParameter1, 
				global::System.IntPtr messageParameter2);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Midi.MidiInterop+MidiOutCallback,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void MidiInterop_MidiOutCallback__NAudio(
				global::System.IntPtr midiInHandle, 
				global::NAudio_Midi.MidiInterop_MidiOutMessage__NAudio message, 
				global::System.IntPtr userData, 
				global::System.IntPtr messageParameter1, 
				global::System.IntPtr messageParameter2);
}

namespace NAudio.Wave
{
	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveInterop+WaveCallback,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe delegate void WaveInterop_WaveCallback__NAudio(
				global::System.IntPtr hWaveOut, 
				global::NAudio_Wave.WaveInterop_WaveMessage__NAudio message, 
				global::System.IntPtr dwInstance, 
				global::NAudio_Wave.WaveHeader__NAudio wavhdr, 
				global::System.IntPtr dwReserved);
}

namespace NAudio_CoreAudioApi
{
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.AudioClientShareMode,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum AudioClientShareMode__NAudio
	{
		Shared = 0,
		Exclusive = 1,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.AudioClientStreamFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum AudioClientStreamFlags__NAudio
	{
		None = 0,
		CrossProcess = 65536,
		Loopback = 131072,
		EventCallback = 262144,
		NoPersist = 524288,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.AudioClientBufferFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum AudioClientBufferFlags__NAudio
	{
		None = 0,
		DataDiscontinuity = 1,
		Silent = 2,
		TimestampError = 4,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.DeviceState,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum DeviceState__NAudio
	{
		Active = 1,
		Disabled = 2,
		NotPresent = 4,
		Unplugged = 8,
		All = 15,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.DataFlow,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum DataFlow__NAudio
	{
		Render = 0,
		Capture = 1,
		All = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Role,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum Role__NAudio
	{
		Console = 0,
		Multimedia = 1,
		Communications = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.PropertyKey,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct PropertyKey__NAudio
	{
		public global::System.Guid formatId;
		public int propertyId;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.AudioClientProperties,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct AudioClientProperties__NAudio
	{
		public uint cbSize;
		public int bIsOffload;
		public global::NAudio_CoreAudioApi.AudioStreamCategory__NAudio eCategory;
		public global::NAudio_CoreAudioApi.AudioClientStreamOptions__NAudio Options;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.AudioStreamCategory,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum AudioStreamCategory__NAudio
	{
		Other = 0,
		ForegroundOnlyMedia = 1,
		BackgroundCapableMedia = 2,
		Communications = 3,
		Alerts = 4,
		SoundEffects = 5,
		GameEffects = 6,
		GameMedia = 7,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.AudioClientStreamOptions,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum AudioClientStreamOptions__NAudio
	{
		None = 0,
		Raw = 1,
	}
}

namespace NAudio_CoreAudioApi_Interfaces
{
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.IAudioSessionEvents,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe interface IAudioSessionEvents__NAudio
	{
		int OnDisplayNameChanged(
					string displayName, 
					ref global::System.Guid eventContext);

		int OnIconPathChanged(
					string iconPath, 
					ref global::System.Guid eventContext);

		int OnSimpleVolumeChanged(
					float volume, 
					bool isMuted, 
					ref global::System.Guid eventContext);

		int OnChannelVolumeChanged(
					uint channelCount, 
					global::System.IntPtr newVolumes, 
					uint channelIndex, 
					ref global::System.Guid eventContext);

		int OnGroupingParamChanged(
					ref global::System.Guid groupingId, 
					ref global::System.Guid eventContext);

		int OnStateChanged(global::NAudio_CoreAudioApi_Interfaces.AudioSessionState__NAudio state);

		int OnSessionDisconnected(global::NAudio_CoreAudioApi_Interfaces.AudioSessionDisconnectReason__NAudio disconnectReason);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.IAudioSessionNotification,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToke" +
		"n=null")]
	public unsafe interface IAudioSessionNotification__NAudio
	{
		int OnSessionCreated(global::NAudio_CoreAudioApi_Interfaces.IAudioSessionControl__NAudio newSession);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.IAudioSessionControl,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public unsafe interface IAudioSessionControl__NAudio
	{
		int GetState(out global::NAudio_CoreAudioApi_Interfaces.AudioSessionState__NAudio state);

		int GetDisplayName(out string displayName);

		int SetDisplayName(
					string displayName, 
					global::System.Guid eventContext);

		int GetIconPath(out string iconPath);

		int SetIconPath(
					string iconPath, 
					global::System.Guid eventContext);

		int GetGroupingParam(out global::System.Guid groupingId);

		int SetGroupingParam(
					global::System.Guid groupingId, 
					global::System.Guid eventContext);

		int RegisterAudioSessionNotification(global::NAudio_CoreAudioApi_Interfaces.IAudioSessionEvents__NAudio client);

		int UnregisterAudioSessionNotification(global::NAudio_CoreAudioApi_Interfaces.IAudioSessionEvents__NAudio client);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.IAudioCaptureClient,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe interface IAudioCaptureClient__NAudio
	{
		int GetBuffer(
					out global::System.IntPtr dataBuffer, 
					out int numFramesToRead, 
					out global::NAudio_CoreAudioApi.AudioClientBufferFlags__NAudio bufferFlags, 
					out long devicePosition, 
					out long qpcPosition);

		int ReleaseBuffer(int numFramesRead);

		int GetNextPacketSize(out int numFramesInNextPacket);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.IAudioClient,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IAudioClient__NAudio
	{
		int Initialize(
					global::NAudio_CoreAudioApi.AudioClientShareMode__NAudio shareMode, 
					global::NAudio_CoreAudioApi.AudioClientStreamFlags__NAudio streamFlags, 
					long hnsBufferDuration, 
					long hnsPeriodicity, 
					global::NAudio_Wave.WaveFormat__NAudio pFormat, 
					ref global::System.Guid audioSessionGuid);

		int GetBufferSize(out uint bufferSize);

		long GetStreamLatency();

		int GetCurrentPadding(out int currentPadding);

		int IsFormatSupported(
					global::NAudio_CoreAudioApi.AudioClientShareMode__NAudio shareMode, 
					global::NAudio_Wave.WaveFormat__NAudio pFormat, 
					global::System.IntPtr closestMatchFormat);

		int GetMixFormat(out global::System.IntPtr deviceFormatPointer);

		int GetDevicePeriod(
					out long defaultDevicePeriod, 
					out long minimumDevicePeriod);

		int Start();

		int Stop();

		int Reset();

		int SetEventHandle(global::System.IntPtr eventHandle);

		int GetService(
					global::System.Guid interfaceId, 
					out object interfacePointer);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.IAudioRenderClient,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IAudioRenderClient__NAudio
	{
		int GetBuffer(
					int numFramesRequested, 
					out global::System.IntPtr dataBufferPointer);

		int ReleaseBuffer(
					int numFramesWritten, 
					global::NAudio_CoreAudioApi.AudioClientBufferFlags__NAudio bufferFlags);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.IAudioSessionControl2,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public unsafe interface IAudioSessionControl2__NAudio
	{
		int GetState(out global::NAudio_CoreAudioApi_Interfaces.AudioSessionState__NAudio state);

		int GetDisplayName(out string displayName);

		int SetDisplayName(
					string displayName, 
					global::System.Guid eventContext);

		int GetIconPath(out string iconPath);

		int SetIconPath(
					string iconPath, 
					global::System.Guid eventContext);

		int GetGroupingParam(out global::System.Guid groupingId);

		int SetGroupingParam(
					global::System.Guid groupingId, 
					global::System.Guid eventContext);

		int RegisterAudioSessionNotification(global::NAudio_CoreAudioApi_Interfaces.IAudioSessionEvents__NAudio client);

		int UnregisterAudioSessionNotification(global::NAudio_CoreAudioApi_Interfaces.IAudioSessionEvents__NAudio client);

		int GetSessionIdentifier(out string retVal);

		int GetSessionInstanceIdentifier(out string retVal);

		int GetProcessId(out uint retVal);

		int IsSystemSoundsSession();

		int SetDuckingPreference(bool optOut);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.IMMNotificationClient,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public unsafe interface IMMNotificationClient__NAudio
	{
		void OnDeviceStateChanged(
					string deviceId, 
					global::NAudio_CoreAudioApi.DeviceState__NAudio newState);

		void OnDeviceAdded(string pwstrDeviceId);

		void OnDeviceRemoved(string deviceId);

		void OnDefaultDeviceChanged(
					global::NAudio_CoreAudioApi.DataFlow__NAudio flow, 
					global::NAudio_CoreAudioApi.Role__NAudio role, 
					string defaultDeviceId);

		void OnPropertyValueChanged(
					string pwstrDeviceId, 
					global::NAudio_CoreAudioApi.PropertyKey__NAudio key);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.AudioSessionState,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum AudioSessionState__NAudio
	{
		AudioSessionStateInactive = 0,
		AudioSessionStateActive = 1,
		AudioSessionStateExpired = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.AudioSessionDisconnectReason,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyT" +
		"oken=null")]
	public enum AudioSessionDisconnectReason__NAudio
	{
		DisconnectReasonDeviceRemoval = 0,
		DisconnectReasonServerShutdown = 1,
		DisconnectReasonFormatChanged = 2,
		DisconnectReasonSessionLogoff = 3,
		DisconnectReasonSessionDisconnected = 4,
		DisconnectReasonExclusiveModeOverride = 5,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=24)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.PropVariant,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct PropVariant__NAudio
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public short vt;
		[global::System.Runtime.InteropServices.FieldOffset(2)]
		public short wReserved1;
		[global::System.Runtime.InteropServices.FieldOffset(4)]
		public short wReserved2;
		[global::System.Runtime.InteropServices.FieldOffset(6)]
		public short wReserved3;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public sbyte cVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public byte bVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public short iVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public ushort uiVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public int lVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public uint ulVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public int intVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public uint uintVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public long hVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public long uhVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public float fltVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public double dblVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public short boolVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public int scode;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public global::System_Runtime_InteropServices_ComTypes.FILETIME__System_Private_Interop filetime;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public global::NAudio_CoreAudioApi_Interfaces.Blob__NAudio blobVal;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public global::System.IntPtr pointerValue;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.Blob,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct Blob__NAudio
	{
		public int Length;
		public global::System.IntPtr Data;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.CoreAudioApi.Interfaces.AudioVolumeNotificationDataStruct,NAudio, Version=1.9.0.0, Culture=neutral, Publi" +
		"cKeyToken=null")]
	public unsafe partial struct AudioVolumeNotificationDataStruct__NAudio
	{
		public global::System.Guid guidEventContext;
		public bool bMuted;
		public float fMasterVolume;
		public uint nChannels;
		public float ChannelVolume;
	}
}

namespace NAudio_Dmo
{
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.IMediaBuffer,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMediaBuffer__NAudio
	{
		int SetLength(int length);

		int GetMaxLength(out int maxLength);

		int GetBufferAndLength(
					global::System.IntPtr bufferPointerPointer, 
					global::System.IntPtr validDataLengthPointer);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.IMediaObject,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMediaObject__NAudio
	{
		int GetStreamCount(
					out int inputStreams, 
					out int outputStreams);

		int GetInputStreamInfo(
					int inputStreamIndex, 
					out global::NAudio_Dmo.InputStreamInfoFlags__NAudio flags);

		int GetOutputStreamInfo(
					int outputStreamIndex, 
					out global::NAudio_Dmo.OutputStreamInfoFlags__NAudio flags);

		int GetInputType(
					int inputStreamIndex, 
					int typeIndex, 
					out global::NAudio_Dmo.DmoMediaType__NAudio mediaType);

		int GetOutputType(
					int outputStreamIndex, 
					int typeIndex, 
					out global::NAudio_Dmo.DmoMediaType__NAudio mediaType);

		int SetInputType(
					int inputStreamIndex, 
					ref global::NAudio_Dmo.DmoMediaType__NAudio mediaType, 
					global::NAudio_Dmo.DmoSetTypeFlags__NAudio flags);

		int SetOutputType(
					int outputStreamIndex, 
					ref global::NAudio_Dmo.DmoMediaType__NAudio mediaType, 
					global::NAudio_Dmo.DmoSetTypeFlags__NAudio flags);

		int GetInputCurrentType(
					int inputStreamIndex, 
					out global::NAudio_Dmo.DmoMediaType__NAudio mediaType);

		int GetOutputCurrentType(
					int outputStreamIndex, 
					out global::NAudio_Dmo.DmoMediaType__NAudio mediaType);

		int GetInputSizeInfo(
					int inputStreamIndex, 
					out int size, 
					out int maxLookahead, 
					out int alignment);

		int GetOutputSizeInfo(
					int outputStreamIndex, 
					out int size, 
					out int alignment);

		int GetInputMaxLatency(
					int inputStreamIndex, 
					out long referenceTimeMaxLatency);

		int SetInputMaxLatency(
					int inputStreamIndex, 
					long referenceTimeMaxLatency);

		int Flush();

		int Discontinuity(int inputStreamIndex);

		int AllocateStreamingResources();

		int FreeStreamingResources();

		int GetInputStatus(
					int inputStreamIndex, 
					out global::NAudio_Dmo.DmoInputStatusFlags__NAudio flags);

		int ProcessInput(
					int inputStreamIndex, 
					global::NAudio_Dmo.IMediaBuffer__NAudio mediaBuffer, 
					global::NAudio_Dmo.DmoInputDataBufferFlags__NAudio flags, 
					long referenceTimeTimestamp, 
					long referenceTimeDuration);

		int ProcessOutput(
					global::NAudio_Dmo.DmoProcessOutputFlags__NAudio flags, 
					int outputBufferCount, 
					global::NAudio_Dmo.DmoOutputDataBuffer__NAudio[] outputBuffers, 
					out int statusReserved);

		int Lock(bool acquireLock);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.IMediaObjectInPlace,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMediaObjectInPlace__NAudio
	{
		int Process(
					int size, 
					global::System.IntPtr data, 
					long refTimeStart, 
					global::NAudio_Dmo.DmoInPlaceProcessFlags__NAudio dwFlags);

		int Clone(out global::NAudio_Dmo.IMediaObjectInPlace__NAudio mediaObjectInPlace);

		int GetLatency(out long latencyTime);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.IMediaParamInfo,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMediaParamInfo__NAudio
	{
		int GetParamCount(out int paramCount);

		int GetParamInfo(
					int paramIndex, 
					ref global::NAudio_Dmo.MediaParamInfo__NAudio paramInfo);

		int GetParamText(
					int paramIndex, 
					out global::System.IntPtr paramText);

		int GetNumTimeFormats(out int numTimeFormats);

		int GetSupportedTimeFormat(
					int formatIndex, 
					out global::System.Guid guidTimeFormat);

		int GetCurrentTimeFormat(
					out global::System.Guid guidTimeFormat, 
					out int mediaTimeData);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.IEnumDmo,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IEnumDmo__NAudio
	{
		int Next(
					int itemsToFetch, 
					out global::System.Guid clsid, 
					out global::System.IntPtr name, 
					out int itemsFetched);

		int Skip(int itemsToSkip);

		int Reset();

		int Clone(out global::NAudio_Dmo.IEnumDmo__NAudio enumPointer);
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.InputStreamInfoFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum InputStreamInfoFlags__NAudio
	{
		None = 0,
		DMO_INPUT_STREAMF_WHOLE_SAMPLES = 1,
		DMO_INPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER = 2,
		DMO_INPUT_STREAMF_FIXED_SAMPLE_SIZE = 4,
		DMO_INPUT_STREAMF_HOLDS_BUFFERS = 8,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.OutputStreamInfoFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum OutputStreamInfoFlags__NAudio
	{
		DMO_OUTPUT_STREAMF_WHOLE_SAMPLES = 1,
		DMO_OUTPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER = 2,
		DMO_OUTPUT_STREAMF_FIXED_SAMPLE_SIZE = 4,
		DMO_OUTPUT_STREAMF_DISCARDABLE = 8,
		DMO_OUTPUT_STREAMF_OPTIONAL = 16,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoMediaType,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct DmoMediaType__NAudio
	{
		public global::System.Guid majortype;
		public global::System.Guid subtype;
		public bool bFixedSizeSamples;
		public bool bTemporalCompression;
		public int lSampleSize;
		public global::System.Guid formattype;
		public global::System.IntPtr pUnk;
		public int cbFormat;
		public global::System.IntPtr pbFormat;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoSetTypeFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum DmoSetTypeFlags__NAudio
	{
		None = 0,
		DMO_SET_TYPEF_TEST_ONLY = 1,
		DMO_SET_TYPEF_CLEAR = 2,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoInputStatusFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum DmoInputStatusFlags__NAudio
	{
		None = 0,
		DMO_INPUT_STATUSF_ACCEPT_DATA = 1,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoInputDataBufferFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum DmoInputDataBufferFlags__NAudio
	{
		None = 0,
		SyncPoint = 1,
		Time = 2,
		TimeLength = 4,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoProcessOutputFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum DmoProcessOutputFlags__NAudio
	{
		None = 0,
		DiscardWhenNoBuffer = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoOutputDataBuffer,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct DmoOutputDataBuffer__NAudio
	{
		public global::NAudio_Dmo.IMediaBuffer__NAudio pBuffer;
		public global::NAudio_Dmo.DmoOutputDataBufferFlags__NAudio dwStatus;
		public long rtTimestamp;
		public long referenceTimeDuration;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoOutputDataBufferFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum DmoOutputDataBufferFlags__NAudio
	{
		None = 0,
		SyncPoint = 1,
		Time = 2,
		TimeLength = 4,
		Incomplete = 16777216,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoInPlaceProcessFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum DmoInPlaceProcessFlags__NAudio
	{
		Normal = 0,
		Zero = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.MediaParamInfo,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MediaParamInfo__NAudio
	{
		public global::NAudio_Dmo.MediaParamType__NAudio mpType;
		public global::NAudio_Dmo.MediaParamCurveType__NAudio mopCaps;
		public float mpdMinValue;
		public float mpdMaxValue;
		public float mpdNeutralValue;
		public string szUnitText;
		public string szLabel;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.MediaParamType,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MediaParamType__NAudio
	{
		Int = 0,
		Float = 1,
		Bool = 2,
		Enum = 3,
		Max = 4,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.MediaParamCurveType,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MediaParamCurveType__NAudio
	{
		MP_CURVE_JUMP = 1,
		MP_CURVE_LINEAR = 2,
		MP_CURVE_SQUARE = 4,
		MP_CURVE_INVSQUARE = 8,
		MP_CURVE_SINE = 16,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoEnumFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum DmoEnumFlags__NAudio
	{
		None = 0,
		DMO_ENUMF_INCLUDE_KEYED = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Dmo.DmoPartialMediaType,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct DmoPartialMediaType__NAudio
	{
		public global::System.Guid type;
		public global::System.Guid subtype;
	}
}

namespace NAudio_MediaFoundation
{
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFAttributes,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFAttributes__NAudio
	{
		void GetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr pValue);

		void GetItemType(
					global::System.Guid guidKey, 
					out int pType);

		void CompareItem(
					global::System.Guid guidKey, 
					global::System.IntPtr value, 
					out bool pbResult);

		void Compare(
					global::NAudio_MediaFoundation.IMFAttributes__NAudio pTheirs, 
					int matchType, 
					out bool pbResult);

		void GetUINT32(
					global::System.Guid guidKey, 
					out int punValue);

		void GetUINT64(
					global::System.Guid guidKey, 
					out long punValue);

		void GetDouble(
					global::System.Guid guidKey, 
					out double pfValue);

		void GetGUID(
					global::System.Guid guidKey, 
					out global::System.Guid pguidValue);

		void GetStringLength(
					global::System.Guid guidKey, 
					out int pcchLength);

		void GetString(
					global::System.Guid guidKey, 
					global::System.Text.StringBuilder pwszValue, 
					int cchBufSize, 
					out int pcchLength);

		void GetAllocatedString(
					global::System.Guid guidKey, 
					out string ppwszValue, 
					out int pcchLength);

		void GetBlobSize(
					global::System.Guid guidKey, 
					out int pcbBlobSize);

		void GetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize, 
					out int pcbBlobSize);

		void GetAllocatedBlob(
					global::System.Guid guidKey, 
					out global::System.IntPtr ip, 
					out int pcbSize);

		void GetUnknown(
					global::System.Guid guidKey, 
					global::System.Guid riid, 
					out object ppv);

		void SetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr Value);

		void DeleteItem(global::System.Guid guidKey);

		void DeleteAllItems();

		void SetUINT32(
					global::System.Guid guidKey, 
					int unValue);

		void SetUINT64(
					global::System.Guid guidKey, 
					long unValue);

		void SetDouble(
					global::System.Guid guidKey, 
					double fValue);

		void SetGUID(
					global::System.Guid guidKey, 
					global::System.Guid guidValue);

		void SetString(
					global::System.Guid guidKey, 
					string wszValue);

		void SetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize);

		void SetUnknown(
					global::System.Guid guidKey, 
					object pUnknown);

		void LockStore();

		void UnlockStore();

		void GetCount(out int pcItems);

		void GetItemByIndex(
					int unIndex, 
					out global::System.Guid pGuidKey, 
					global::System.IntPtr pValue);

		void CopyAllItems(global::NAudio_MediaFoundation.IMFAttributes__NAudio pDest);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFActivate,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFActivate__NAudio
	{
		void GetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr pValue);

		void GetItemType(
					global::System.Guid guidKey, 
					out int pType);

		void CompareItem(
					global::System.Guid guidKey, 
					global::System.IntPtr value, 
					out bool pbResult);

		void Compare(
					global::NAudio_MediaFoundation.IMFAttributes__NAudio pTheirs, 
					int matchType, 
					out bool pbResult);

		void GetUINT32(
					global::System.Guid guidKey, 
					out int punValue);

		void GetUINT64(
					global::System.Guid guidKey, 
					out long punValue);

		void GetDouble(
					global::System.Guid guidKey, 
					out double pfValue);

		void GetGUID(
					global::System.Guid guidKey, 
					out global::System.Guid pguidValue);

		void GetStringLength(
					global::System.Guid guidKey, 
					out int pcchLength);

		void GetString(
					global::System.Guid guidKey, 
					global::System.Text.StringBuilder pwszValue, 
					int cchBufSize, 
					out int pcchLength);

		void GetAllocatedString(
					global::System.Guid guidKey, 
					out string ppwszValue, 
					out int pcchLength);

		void GetBlobSize(
					global::System.Guid guidKey, 
					out int pcbBlobSize);

		void GetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize, 
					out int pcbBlobSize);

		void GetAllocatedBlob(
					global::System.Guid guidKey, 
					out global::System.IntPtr ip, 
					out int pcbSize);

		void GetUnknown(
					global::System.Guid guidKey, 
					global::System.Guid riid, 
					out object ppv);

		void SetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr value);

		void DeleteItem(global::System.Guid guidKey);

		void DeleteAllItems();

		void SetUINT32(
					global::System.Guid guidKey, 
					int unValue);

		void SetUINT64(
					global::System.Guid guidKey, 
					long unValue);

		void SetDouble(
					global::System.Guid guidKey, 
					double fValue);

		void SetGUID(
					global::System.Guid guidKey, 
					global::System.Guid guidValue);

		void SetString(
					global::System.Guid guidKey, 
					string wszValue);

		void SetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize);

		void SetUnknown(
					global::System.Guid guidKey, 
					object pUnknown);

		void LockStore();

		void UnlockStore();

		void GetCount(out int pcItems);

		void GetItemByIndex(
					int unIndex, 
					out global::System.Guid pGuidKey, 
					global::System.IntPtr pValue);

		void CopyAllItems(global::NAudio_MediaFoundation.IMFAttributes__NAudio pDest);

		void ActivateObject(
					global::System.Guid riid, 
					out object ppv);

		void ShutdownObject();

		void DetachObject();
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFByteStream,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFByteStream__NAudio
	{
		void GetCapabilities(ref int pdwCapabiities);

		void GetLength(ref long pqwLength);

		void SetLength(long qwLength);

		void GetCurrentPosition(ref long pqwPosition);

		void SetCurrentPosition(long qwPosition);

		void IsEndOfStream(ref bool pfEndOfStream);

		void Read(
					global::System.IntPtr pb, 
					int cb, 
					ref int pcbRead);

		void BeginRead(
					global::System.IntPtr pb, 
					int cb, 
					global::System.IntPtr pCallback, 
					global::System.IntPtr punkState);

		void EndRead(
					global::System.IntPtr pResult, 
					ref int pcbRead);

		void Write(
					global::System.IntPtr pb, 
					int cb, 
					ref int pcbWritten);

		void BeginWrite(
					global::System.IntPtr pb, 
					int cb, 
					global::System.IntPtr pCallback, 
					global::System.IntPtr punkState);

		void EndWrite(
					global::System.IntPtr pResult, 
					ref int pcbWritten);

		void Seek(
					int SeekOrigin, 
					long llSeekOffset, 
					int dwSeekFlags, 
					ref long pqwCurrentPosition);

		void Flush();

		void Close();
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFCollection,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFCollection__NAudio
	{
		void GetElementCount(out int pcElements);

		void GetElement(
					int dwElementIndex, 
					out object ppUnkElement);

		void AddElement(object pUnkElement);

		void RemoveElement(
					int dwElementIndex, 
					out object ppUnkElement);

		void InsertElementAt(
					int dwIndex, 
					object pUnknown);

		void RemoveAllElements();
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFMediaBuffer,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFMediaBuffer__NAudio
	{
		void Lock(
					out global::System.IntPtr ppbBuffer, 
					out int pcbMaxLength, 
					out int pcbCurrentLength);

		void Unlock();

		void GetCurrentLength(out int pcbCurrentLength);

		void SetCurrentLength(int cbCurrentLength);

		void GetMaxLength(out int pcbMaxLength);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFMediaEvent,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFMediaEvent__NAudio
	{
		void GetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr pValue);

		void GetItemType(
					global::System.Guid guidKey, 
					out int pType);

		void CompareItem(
					global::System.Guid guidKey, 
					global::System.IntPtr value, 
					out bool pbResult);

		void Compare(
					global::NAudio_MediaFoundation.IMFAttributes__NAudio pTheirs, 
					int matchType, 
					out bool pbResult);

		void GetUINT32(
					global::System.Guid guidKey, 
					out int punValue);

		void GetUINT64(
					global::System.Guid guidKey, 
					out long punValue);

		void GetDouble(
					global::System.Guid guidKey, 
					out double pfValue);

		void GetGUID(
					global::System.Guid guidKey, 
					out global::System.Guid pguidValue);

		void GetStringLength(
					global::System.Guid guidKey, 
					out int pcchLength);

		void GetString(
					global::System.Guid guidKey, 
					global::System.Text.StringBuilder pwszValue, 
					int cchBufSize, 
					out int pcchLength);

		void GetAllocatedString(
					global::System.Guid guidKey, 
					out string ppwszValue, 
					out int pcchLength);

		void GetBlobSize(
					global::System.Guid guidKey, 
					out int pcbBlobSize);

		void GetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize, 
					out int pcbBlobSize);

		void GetAllocatedBlob(
					global::System.Guid guidKey, 
					out global::System.IntPtr ip, 
					out int pcbSize);

		void GetUnknown(
					global::System.Guid guidKey, 
					global::System.Guid riid, 
					out object ppv);

		void SetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr value);

		void DeleteItem(global::System.Guid guidKey);

		void DeleteAllItems();

		void SetUINT32(
					global::System.Guid guidKey, 
					int unValue);

		void SetUINT64(
					global::System.Guid guidKey, 
					long unValue);

		void SetDouble(
					global::System.Guid guidKey, 
					double fValue);

		void SetGUID(
					global::System.Guid guidKey, 
					global::System.Guid guidValue);

		void SetString(
					global::System.Guid guidKey, 
					string wszValue);

		void SetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize);

		void SetUnknown(
					global::System.Guid guidKey, 
					object pUnknown);

		void LockStore();

		void UnlockStore();

		void GetCount(out int pcItems);

		void GetItemByIndex(
					int unIndex, 
					out global::System.Guid pGuidKey, 
					global::System.IntPtr pValue);

		void CopyAllItems(global::NAudio_MediaFoundation.IMFAttributes__NAudio pDest);

		void GetType(out global::NAudio_MediaFoundation.MediaEventType__NAudio pmet);

		void GetExtendedType(out global::System.Guid pguidExtendedType);

		void GetStatus(out int phrStatus);

		void GetValue(global::System.IntPtr pvValue);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFMediaType,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFMediaType__NAudio
	{
		void GetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr pValue);

		void GetItemType(
					global::System.Guid guidKey, 
					out int pType);

		void CompareItem(
					global::System.Guid guidKey, 
					global::System.IntPtr value, 
					out bool pbResult);

		void Compare(
					global::NAudio_MediaFoundation.IMFAttributes__NAudio pTheirs, 
					int matchType, 
					out bool pbResult);

		void GetUINT32(
					global::System.Guid guidKey, 
					out int punValue);

		void GetUINT64(
					global::System.Guid guidKey, 
					out long punValue);

		void GetDouble(
					global::System.Guid guidKey, 
					out double pfValue);

		void GetGUID(
					global::System.Guid guidKey, 
					out global::System.Guid pguidValue);

		void GetStringLength(
					global::System.Guid guidKey, 
					out int pcchLength);

		void GetString(
					global::System.Guid guidKey, 
					global::System.Text.StringBuilder pwszValue, 
					int cchBufSize, 
					out int pcchLength);

		void GetAllocatedString(
					global::System.Guid guidKey, 
					out string ppwszValue, 
					out int pcchLength);

		void GetBlobSize(
					global::System.Guid guidKey, 
					out int pcbBlobSize);

		void GetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize, 
					out int pcbBlobSize);

		void GetAllocatedBlob(
					global::System.Guid guidKey, 
					out global::System.IntPtr ip, 
					out int pcbSize);

		void GetUnknown(
					global::System.Guid guidKey, 
					global::System.Guid riid, 
					out object ppv);

		void SetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr value);

		void DeleteItem(global::System.Guid guidKey);

		void DeleteAllItems();

		void SetUINT32(
					global::System.Guid guidKey, 
					int unValue);

		void SetUINT64(
					global::System.Guid guidKey, 
					long unValue);

		void SetDouble(
					global::System.Guid guidKey, 
					double fValue);

		void SetGUID(
					global::System.Guid guidKey, 
					global::System.Guid guidValue);

		void SetString(
					global::System.Guid guidKey, 
					string wszValue);

		void SetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize);

		void SetUnknown(
					global::System.Guid guidKey, 
					object pUnknown);

		void LockStore();

		void UnlockStore();

		void GetCount(out int pcItems);

		void GetItemByIndex(
					int unIndex, 
					out global::System.Guid pGuidKey, 
					global::System.IntPtr pValue);

		void CopyAllItems(global::NAudio_MediaFoundation.IMFAttributes__NAudio pDest);

		void GetMajorType(out global::System.Guid pguidMajorType);

		void IsCompressedFormat(out bool pfCompressed);

		int IsEqual(
					global::NAudio_MediaFoundation.IMFMediaType__NAudio pIMediaType, 
					ref int pdwFlags);

		void GetRepresentation(
					global::System.Guid guidRepresentation, 
					ref global::System.IntPtr ppvRepresentation);

		void FreeRepresentation(
					global::System.Guid guidRepresentation, 
					global::System.IntPtr pvRepresentation);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFReadWriteClassFactory,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFReadWriteClassFactory__NAudio
	{
		void CreateInstanceFromURL(
					global::System.Guid clsid, 
					string pwszURL, 
					global::NAudio_MediaFoundation.IMFAttributes__NAudio pAttributes, 
					global::System.Guid riid, 
					out object ppvObject);

		void CreateInstanceFromObject(
					global::System.Guid clsid, 
					object punkObject, 
					global::NAudio_MediaFoundation.IMFAttributes__NAudio pAttributes, 
					global::System.Guid riid, 
					out object ppvObject);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFSample,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFSample__NAudio
	{
		void GetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr pValue);

		void GetItemType(
					global::System.Guid guidKey, 
					out int pType);

		void CompareItem(
					global::System.Guid guidKey, 
					global::System.IntPtr value, 
					out bool pbResult);

		void Compare(
					global::NAudio_MediaFoundation.IMFAttributes__NAudio pTheirs, 
					int matchType, 
					out bool pbResult);

		void GetUINT32(
					global::System.Guid guidKey, 
					out int punValue);

		void GetUINT64(
					global::System.Guid guidKey, 
					out long punValue);

		void GetDouble(
					global::System.Guid guidKey, 
					out double pfValue);

		void GetGUID(
					global::System.Guid guidKey, 
					out global::System.Guid pguidValue);

		void GetStringLength(
					global::System.Guid guidKey, 
					out int pcchLength);

		void GetString(
					global::System.Guid guidKey, 
					global::System.Text.StringBuilder pwszValue, 
					int cchBufSize, 
					out int pcchLength);

		void GetAllocatedString(
					global::System.Guid guidKey, 
					out string ppwszValue, 
					out int pcchLength);

		void GetBlobSize(
					global::System.Guid guidKey, 
					out int pcbBlobSize);

		void GetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize, 
					out int pcbBlobSize);

		void GetAllocatedBlob(
					global::System.Guid guidKey, 
					out global::System.IntPtr ip, 
					out int pcbSize);

		void GetUnknown(
					global::System.Guid guidKey, 
					global::System.Guid riid, 
					out object ppv);

		void SetItem(
					global::System.Guid guidKey, 
					global::System.IntPtr value);

		void DeleteItem(global::System.Guid guidKey);

		void DeleteAllItems();

		void SetUINT32(
					global::System.Guid guidKey, 
					int unValue);

		void SetUINT64(
					global::System.Guid guidKey, 
					long unValue);

		void SetDouble(
					global::System.Guid guidKey, 
					double fValue);

		void SetGUID(
					global::System.Guid guidKey, 
					global::System.Guid guidValue);

		void SetString(
					global::System.Guid guidKey, 
					string wszValue);

		void SetBlob(
					global::System.Guid guidKey, 
					byte[] pBuf, 
					int cbBufSize);

		void SetUnknown(
					global::System.Guid guidKey, 
					object pUnknown);

		void LockStore();

		void UnlockStore();

		void GetCount(out int pcItems);

		void GetItemByIndex(
					int unIndex, 
					out global::System.Guid pGuidKey, 
					global::System.IntPtr pValue);

		void CopyAllItems(global::NAudio_MediaFoundation.IMFAttributes__NAudio pDest);

		void GetSampleFlags(out int pdwSampleFlags);

		void SetSampleFlags(int dwSampleFlags);

		void GetSampleTime(out long phnsSampletime);

		void SetSampleTime(long hnsSampleTime);

		void GetSampleDuration(out long phnsSampleDuration);

		void SetSampleDuration(long hnsSampleDuration);

		void GetBufferCount(out int pdwBufferCount);

		void GetBufferByIndex(
					int dwIndex, 
					out global::NAudio_MediaFoundation.IMFMediaBuffer__NAudio ppBuffer);

		void ConvertToContiguousBuffer(out global::NAudio_MediaFoundation.IMFMediaBuffer__NAudio ppBuffer);

		void AddBuffer(global::NAudio_MediaFoundation.IMFMediaBuffer__NAudio pBuffer);

		void RemoveBufferByIndex(int dwIndex);

		void RemoveAllBuffers();

		void GetTotalLength(out int pcbTotalLength);

		void CopyToBuffer(global::NAudio_MediaFoundation.IMFMediaBuffer__NAudio pBuffer);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFSinkWriter,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFSinkWriter__NAudio
	{
		void AddStream(
					global::NAudio_MediaFoundation.IMFMediaType__NAudio pTargetMediaType, 
					out int pdwStreamIndex);

		void SetInputMediaType(
					int dwStreamIndex, 
					global::NAudio_MediaFoundation.IMFMediaType__NAudio pInputMediaType, 
					global::NAudio_MediaFoundation.IMFAttributes__NAudio pEncodingParameters);

		void BeginWriting();

		void WriteSample(
					int dwStreamIndex, 
					global::NAudio_MediaFoundation.IMFSample__NAudio pSample);

		void SendStreamTick(
					int dwStreamIndex, 
					long llTimestamp);

		void PlaceMarker(
					int dwStreamIndex, 
					global::System.IntPtr pvContext);

		void NotifyEndOfSegment(int dwStreamIndex);

		void Flush(int dwStreamIndex);

		void DoFinalize();

		void GetServiceForStream(
					int dwStreamIndex, 
					ref global::System.Guid guidService, 
					ref global::System.Guid riid, 
					out global::System.IntPtr ppvObject);

		void GetStatistics(
					int dwStreamIndex, 
					global::NAudio_MediaFoundation.MF_SINK_WRITER_STATISTICS__NAudio pStats);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFSourceReader,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFSourceReader__NAudio
	{
		void GetStreamSelection(
					int dwStreamIndex, 
					out bool pSelected);

		void SetStreamSelection(
					int dwStreamIndex, 
					bool pSelected);

		void GetNativeMediaType(
					int dwStreamIndex, 
					int dwMediaTypeIndex, 
					out global::NAudio_MediaFoundation.IMFMediaType__NAudio ppMediaType);

		void GetCurrentMediaType(
					int dwStreamIndex, 
					out global::NAudio_MediaFoundation.IMFMediaType__NAudio ppMediaType);

		void SetCurrentMediaType(
					int dwStreamIndex, 
					global::System.IntPtr pdwReserved, 
					global::NAudio_MediaFoundation.IMFMediaType__NAudio pMediaType);

		void SetCurrentPosition(
					global::System.Guid guidTimeFormat, 
					global::System.IntPtr varPosition);

		void ReadSample(
					int dwStreamIndex, 
					int dwControlFlags, 
					out int pdwActualStreamIndex, 
					out global::NAudio_MediaFoundation.MF_SOURCE_READER_FLAG__NAudio pdwStreamFlags, 
					out ulong pllTimestamp, 
					out global::NAudio_MediaFoundation.IMFSample__NAudio ppSample);

		void Flush(int dwStreamIndex);

		void GetServiceForStream(
					int dwStreamIndex, 
					global::System.Guid guidService, 
					global::System.Guid riid, 
					out global::System.IntPtr ppvObject);

		int GetPresentationAttribute(
					int dwStreamIndex, 
					global::System.Guid guidAttribute, 
					global::System.IntPtr pvarAttribute);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.IMFTransform,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IMFTransform__NAudio
	{
		void GetStreamLimits(
					out int pdwInputMinimum, 
					out int pdwInputMaximum, 
					out int pdwOutputMinimum, 
					out int pdwOutputMaximum);

		void GetStreamCount(
					out int pcInputStreams, 
					out int pcOutputStreams);

		void GetStreamIds(
					int dwInputIdArraySize, 
					global::System.IntPtr pdwInputIDs, 
					int dwOutputIdArraySize, 
					global::System.IntPtr pdwOutputIDs);

		void GetInputStreamInfo(
					int dwInputStreamId, 
					out global::NAudio_MediaFoundation.MFT_INPUT_STREAM_INFO__NAudio pStreamInfo);

		void GetOutputStreamInfo(
					int dwOutputStreamId, 
					out global::NAudio_MediaFoundation.MFT_OUTPUT_STREAM_INFO__NAudio pStreamInfo);

		void GetAttributes(out global::NAudio_MediaFoundation.IMFAttributes__NAudio pAttributes);

		void GetInputStreamAttributes(
					int dwInputStreamId, 
					out global::NAudio_MediaFoundation.IMFAttributes__NAudio pAttributes);

		void GetOutputStreamAttributes(
					int dwOutputStreamId, 
					out global::NAudio_MediaFoundation.IMFAttributes__NAudio pAttributes);

		void DeleteInputStream(int dwOutputStreamId);

		void AddInputStreams(
					int cStreams, 
					global::System.IntPtr adwStreamIDs);

		void GetInputAvailableType(
					int dwInputStreamId, 
					int dwTypeIndex, 
					out global::NAudio_MediaFoundation.IMFMediaType__NAudio ppType);

		void GetOutputAvailableType(
					int dwOutputStreamId, 
					int dwTypeIndex, 
					out global::NAudio_MediaFoundation.IMFMediaType__NAudio ppType);

		void SetInputType(
					int dwInputStreamId, 
					global::NAudio_MediaFoundation.IMFMediaType__NAudio pType, 
					global::NAudio_MediaFoundation._MFT_SET_TYPE_FLAGS__NAudio dwFlags);

		void SetOutputType(
					int dwOutputStreamId, 
					global::NAudio_MediaFoundation.IMFMediaType__NAudio pType, 
					global::NAudio_MediaFoundation._MFT_SET_TYPE_FLAGS__NAudio dwFlags);

		void GetInputCurrentType(
					int dwInputStreamId, 
					out global::NAudio_MediaFoundation.IMFMediaType__NAudio ppType);

		void GetOutputCurrentType(
					int dwOutputStreamId, 
					out global::NAudio_MediaFoundation.IMFMediaType__NAudio ppType);

		void GetInputStatus(
					int dwInputStreamId, 
					out global::NAudio_MediaFoundation._MFT_INPUT_STATUS_FLAGS__NAudio pdwFlags);

		void GetOutputStatus(
					int dwInputStreamId, 
					out global::NAudio_MediaFoundation._MFT_OUTPUT_STATUS_FLAGS__NAudio pdwFlags);

		void SetOutputBounds(
					long hnsLowerBound, 
					long hnsUpperBound);

		void ProcessEvent(
					int dwInputStreamId, 
					global::NAudio_MediaFoundation.IMFMediaEvent__NAudio pEvent);

		void ProcessMessage(
					global::NAudio_MediaFoundation.MFT_MESSAGE_TYPE__NAudio eMessage, 
					global::System.IntPtr ulParam);

		void ProcessInput(
					int dwInputStreamId, 
					global::NAudio_MediaFoundation.IMFSample__NAudio pSample, 
					int dwFlags);

		int ProcessOutput(
					global::NAudio_MediaFoundation._MFT_PROCESS_OUTPUT_FLAGS__NAudio dwFlags, 
					int cOutputBufferCount, 
					global::NAudio_MediaFoundation.MFT_OUTPUT_DATA_BUFFER__NAudio[] pOutputSamples, 
					out global::NAudio_MediaFoundation._MFT_PROCESS_OUTPUT_STATUS__NAudio pdwStatus);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.MediaEventType,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MediaEventType__NAudio
	{
		MEUnknown = 0,
		MEError = 1,
		MEExtendedType = 2,
		MENonFatalError = 3,
		MESessionUnknown = 100,
		MESessionTopologySet = 101,
		MESessionTopologiesCleared = 102,
		MESessionStarted = 103,
		MESessionPaused = 104,
		MESessionStopped = 105,
		MESessionClosed = 106,
		MESessionEnded = 107,
		MESessionRateChanged = 108,
		MESessionScrubSampleComplete = 109,
		MESessionCapabilitiesChanged = 110,
		MESessionTopologyStatus = 111,
		MESessionNotifyPresentationTime = 112,
		MENewPresentation = 113,
		MELicenseAcquisitionStart = 114,
		MELicenseAcquisitionCompleted = 115,
		MEIndividualizationStart = 116,
		MEIndividualizationCompleted = 117,
		MEEnablerProgress = 118,
		MEEnablerCompleted = 119,
		MEPolicyError = 120,
		MEPolicyReport = 121,
		MEBufferingStarted = 122,
		MEBufferingStopped = 123,
		MEConnectStart = 124,
		MEConnectEnd = 125,
		MEReconnectStart = 126,
		MEReconnectEnd = 127,
		MERendererEvent = 128,
		MESessionStreamSinkFormatChanged = 129,
		MESourceUnknown = 200,
		MESourceStarted = 201,
		MEStreamStarted = 202,
		MESourceSeeked = 203,
		MEStreamSeeked = 204,
		MENewStream = 205,
		MEUpdatedStream = 206,
		MESourceStopped = 207,
		MEStreamStopped = 208,
		MESourcePaused = 209,
		MEStreamPaused = 210,
		MEEndOfPresentation = 211,
		MEEndOfStream = 212,
		MEMediaSample = 213,
		MEStreamTick = 214,
		MEStreamThinMode = 215,
		MEStreamFormatChanged = 216,
		MESourceRateChanged = 217,
		MEEndOfPresentationSegment = 218,
		MESourceCharacteristicsChanged = 219,
		MESourceRateChangeRequested = 220,
		MESourceMetadataChanged = 221,
		MESequencerSourceTopologyUpdated = 222,
		MESinkUnknown = 300,
		MEStreamSinkStarted = 301,
		MEStreamSinkStopped = 302,
		MEStreamSinkPaused = 303,
		MEStreamSinkRateChanged = 304,
		MEStreamSinkRequestSample = 305,
		MEStreamSinkMarker = 306,
		MEStreamSinkPrerolled = 307,
		MEStreamSinkScrubSampleComplete = 308,
		MEStreamSinkFormatChanged = 309,
		MEStreamSinkDeviceChanged = 310,
		MEQualityNotify = 311,
		MESinkInvalidated = 312,
		MEAudioSessionNameChanged = 313,
		MEAudioSessionVolumeChanged = 314,
		MEAudioSessionDeviceRemoved = 315,
		MEAudioSessionServerShutdown = 316,
		MEAudioSessionGroupingParamChanged = 317,
		MEAudioSessionIconChanged = 318,
		MEAudioSessionFormatChanged = 319,
		MEAudioSessionDisconnected = 320,
		MEAudioSessionExclusiveModeOverride = 321,
		METrustUnknown = 400,
		MEPolicyChanged = 401,
		MEContentProtectionMessage = 402,
		MEPolicySet = 403,
		MEWMDRMLicenseBackupCompleted = 500,
		MEWMDRMLicenseBackupProgress = 501,
		MEWMDRMLicenseRestoreCompleted = 502,
		MEWMDRMLicenseRestoreProgress = 503,
		MEWMDRMLicenseAcquisitionCompleted = 506,
		MEWMDRMIndividualizationCompleted = 508,
		MEWMDRMIndividualizationProgress = 513,
		MEWMDRMProximityCompleted = 514,
		MEWMDRMLicenseStoreCleaned = 515,
		MEWMDRMRevocationDownloadCompleted = 516,
		METransformUnknown = 600,
		METransformNeedInput = 601,
		METransformHaveOutput = 602,
		METransformDrainComplete = 603,
		METransformMarker = 604,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.MF_SINK_WRITER_STATISTICS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial class MF_SINK_WRITER_STATISTICS__NAudio
	{
		public int cb;
		public long llLastTimestampReceived;
		public long llLastTimestampEncoded;
		public long llLastTimestampProcessed;
		public long llLastStreamTickReceived;
		public long llLastSinkSampleRequest;
		public long qwNumSamplesReceived;
		public long qwNumSamplesEncoded;
		public long qwNumSamplesProcessed;
		public long qwNumStreamTicksReceived;
		public int dwByteCountQueued;
		public long qwByteCountProcessed;
		public int dwNumOutstandingSinkSampleRequests;
		public int dwAverageSampleRateReceived;
		public int dwAverageSampleRateEncoded;
		public int dwAverageSampleRateProcessed;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.MF_SOURCE_READER_FLAG,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MF_SOURCE_READER_FLAG__NAudio
	{
		None = 0,
		MF_SOURCE_READERF_ERROR = 1,
		MF_SOURCE_READERF_ENDOFSTREAM = 2,
		MF_SOURCE_READERF_NEWSTREAM = 4,
		MF_SOURCE_READERF_NATIVEMEDIATYPECHANGED = 16,
		MF_SOURCE_READERF_CURRENTMEDIATYPECHANGED = 32,
		MF_SOURCE_READERF_STREAMTICK = 256,
		MF_SOURCE_READERF_ALLEFFECTSREMOVED = 512,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.MFT_INPUT_STREAM_INFO,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MFT_INPUT_STREAM_INFO__NAudio
	{
		public long hnsMaxLatency;
		public global::NAudio_MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS__NAudio dwFlags;
		public int cbSize;
		public int cbMaxLookahead;
		public int cbAlignment;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation._MFT_INPUT_STREAM_INFO_FLAGS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=nul" +
		"l")]
	public enum _MFT_INPUT_STREAM_INFO_FLAGS__NAudio
	{
		None = 0,
		MFT_INPUT_STREAM_WHOLE_SAMPLES = 1,
		MFT_INPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2,
		MFT_INPUT_STREAM_FIXED_SAMPLE_SIZE = 4,
		MFT_INPUT_STREAM_HOLDS_BUFFERS = 8,
		MFT_INPUT_STREAM_DOES_NOT_ADDREF = 256,
		MFT_INPUT_STREAM_REMOVABLE = 512,
		MFT_INPUT_STREAM_OPTIONAL = 1024,
		MFT_INPUT_STREAM_PROCESSES_IN_PLACE = 2048,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.MFT_OUTPUT_STREAM_INFO,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MFT_OUTPUT_STREAM_INFO__NAudio
	{
		public global::NAudio_MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS__NAudio dwFlags;
		public int cbSize;
		public int cbAlignment;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation._MFT_OUTPUT_STREAM_INFO_FLAGS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public enum _MFT_OUTPUT_STREAM_INFO_FLAGS__NAudio
	{
		None = 0,
		MFT_OUTPUT_STREAM_WHOLE_SAMPLES = 1,
		MFT_OUTPUT_STREAM_SINGLE_SAMPLE_PER_BUFFER = 2,
		MFT_OUTPUT_STREAM_FIXED_SAMPLE_SIZE = 4,
		MFT_OUTPUT_STREAM_DISCARDABLE = 8,
		MFT_OUTPUT_STREAM_OPTIONAL = 16,
		MFT_OUTPUT_STREAM_PROVIDES_SAMPLES = 256,
		MFT_OUTPUT_STREAM_CAN_PROVIDE_SAMPLES = 512,
		MFT_OUTPUT_STREAM_LAZY_READ = 1024,
		MFT_OUTPUT_STREAM_REMOVABLE = 2048,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation._MFT_SET_TYPE_FLAGS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum _MFT_SET_TYPE_FLAGS__NAudio
	{
		None = 0,
		MFT_SET_TYPE_TEST_ONLY = 1,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation._MFT_INPUT_STATUS_FLAGS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum _MFT_INPUT_STATUS_FLAGS__NAudio
	{
		None = 0,
		MFT_INPUT_STATUS_ACCEPT_DATA = 1,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation._MFT_OUTPUT_STATUS_FLAGS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum _MFT_OUTPUT_STATUS_FLAGS__NAudio
	{
		None = 0,
		MFT_OUTPUT_STATUS_SAMPLE_READY = 1,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.MFT_MESSAGE_TYPE,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MFT_MESSAGE_TYPE__NAudio
	{
		MFT_MESSAGE_COMMAND_FLUSH = 0,
		MFT_MESSAGE_COMMAND_DRAIN = 1,
		MFT_MESSAGE_SET_D3D_MANAGER = 2,
		MFT_MESSAGE_DROP_SAMPLES = 3,
		MFT_MESSAGE_COMMAND_TICK = 4,
		MFT_MESSAGE_NOTIFY_BEGIN_STREAMING = 268435456,
		MFT_MESSAGE_NOTIFY_END_STREAMING = 268435457,
		MFT_MESSAGE_NOTIFY_END_OF_STREAM = 268435458,
		MFT_MESSAGE_NOTIFY_START_OF_STREAM = 268435459,
		MFT_MESSAGE_COMMAND_MARKER = 536870912,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_FLAGS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum _MFT_PROCESS_OUTPUT_FLAGS__NAudio
	{
		None = 0,
		MFT_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER = 1,
		MFT_PROCESS_OUTPUT_REGENERATE_LAST_OUTPUT = 2,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation.MFT_OUTPUT_DATA_BUFFER,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MFT_OUTPUT_DATA_BUFFER__NAudio
	{
		public int dwStreamID;
		public global::NAudio_MediaFoundation.IMFSample__NAudio pSample;
		public global::NAudio_MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS__NAudio dwStatus;
		public global::NAudio_MediaFoundation.IMFCollection__NAudio pEvents;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation._MFT_OUTPUT_DATA_BUFFER_FLAGS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public enum _MFT_OUTPUT_DATA_BUFFER_FLAGS__NAudio
	{
		None = 0,
		MFT_OUTPUT_DATA_BUFFER_FORMAT_CHANGE = 256,
		MFT_OUTPUT_DATA_BUFFER_STREAM_END = 512,
		MFT_OUTPUT_DATA_BUFFER_NO_SAMPLE = 768,
		MFT_OUTPUT_DATA_BUFFER_INCOMPLETE = 16777216,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.MediaFoundation._MFT_PROCESS_OUTPUT_STATUS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum _MFT_PROCESS_OUTPUT_STATUS__NAudio
	{
		None = 0,
		MFT_PROCESS_OUTPUT_STATUS_NEW_STREAMS = 256,
	}
}

namespace NAudio_Midi
{
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Midi.MidiInterop+MIDIHDR,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MidiInterop_MIDIHDR__NAudio
	{
		public global::System.IntPtr lpData;
		public int dwBufferLength;
		public int dwBytesRecorded;
		public global::System.IntPtr dwUser;
		public int dwFlags;
		public global::System.IntPtr lpNext;
		public global::System.IntPtr reserved;
		public int dwOffset;
		public global::System.IntPtr[] dwReserved;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Midi.MidiInCapabilities,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MidiInCapabilities__NAudio
	{
		public ushort manufacturerId;
		public ushort productId;
		public uint driverVersion;
		public string productName;
		public int support;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Midi.MidiInterop+MidiInMessage,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MidiInterop_MidiInMessage__NAudio
	{
		Open = 961,
		Close = 962,
		Data = 963,
		LongData = 964,
		Error = 965,
		LongError = 966,
		MoreData = 972,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Midi.MidiOutCapabilities,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MidiOutCapabilities__NAudio
	{
		public short manufacturerId;
		public short productId;
		public int driverVersion;
		public string productName;
		public short wTechnology;
		public short wVoices;
		public short wNotes;
		public ushort wChannelMask;
		public global::NAudio_Midi.MidiOutCapabilities_MidiOutCapabilityFlags__NAudio dwSupport;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Midi.MidiOutCapabilities+MidiOutCapabilityFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=" +
		"null")]
	public enum MidiOutCapabilities_MidiOutCapabilityFlags__NAudio
	{
		Volume = 1,
		LeftRightVolume = 2,
		PatchCaching = 4,
		Stream = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Midi.MidiInterop+MidiOutMessage,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MidiInterop_MidiOutMessage__NAudio
	{
		Open = 967,
		Close = 968,
		Done = 969,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Midi.MidiInterop+MMTIME,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MidiInterop_MMTIME__NAudio
	{
		public int wType;
		public int u;
	}
}

namespace NAudio_Mixer
{
	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MixerFlags__NAudio
	{
		Handle = -2147483648,
		MixerHandle = -2147483648,
		WaveOutHandle = -1879048192,
		WaveInHandle = -1610612736,
		MidiOutHandle = -1342177280,
		MidiInHandle = -1073741824,
		Mixer = 0,
		Value = 0,
		All = 0,
		GetLineInfoOfDestination = 0,
		ListText = 1,
		OneById = 1,
		GetLineInfoOfSource = 1,
		OneByType = 2,
		GetLineInfoOfLineId = 2,
		GetLineInfoOfComponentType = 3,
		GetLineInfoOfTargetType = 4,
		QueryMask = 15,
		GetLineInfoOfQueryMask = 15,
		WaveOut = 268435456,
		WaveIn = 536870912,
		MidiOut = 805306368,
		MidiIn = 1073741824,
		Aux = 1342177280,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MixerInterop_MIXERCONTROLDETAILS__NAudio
	{
		public int cbStruct;
		public int dwControlID;
		public int cChannels;
		public global::System.IntPtr hwndOwner;
		public int cbDetails;
		public global::System.IntPtr paDetails;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERCAPS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MixerInterop_MIXERCAPS__NAudio
	{
		public ushort wMid;
		public ushort wPid;
		public uint vDriverVersion;
		public string szPname;
		public uint fdwSupport;
		public uint cDestinations;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERLINECONTROLS,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MixerInterop_MIXERLINECONTROLS__NAudio
	{
		public int cbStruct;
		public int dwLineID;
		public int dwControlID;
		public int cControls;
		public int cbmxctrl;
		public global::System.IntPtr pamxctrl;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERLINE,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MixerInterop_MIXERLINE__NAudio
	{
		public int cbStruct;
		public int dwDestination;
		public int dwSource;
		public int dwLineID;
		public global::NAudio_Mixer.MixerInterop_MIXERLINE_LINEF__NAudio fdwLine;
		public global::System.IntPtr dwUser;
		public global::NAudio_Mixer.MixerLineComponentType__NAudio dwComponentType;
		public int cChannels;
		public int cConnections;
		public int cControls;
		public string szShortName;
		public string szName;
		public uint dwType;
		public uint dwDeviceID;
		public ushort wMid;
		public ushort wPid;
		public uint vDriverVersion;
		public string szPname;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERLINE_LINEF,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MixerInterop_MIXERLINE_LINEF__NAudio
	{
		MIXERLINE_LINEF_SOURCE = -2147483648,
		MIXERLINE_LINEF_ACTIVE = 1,
		MIXERLINE_LINEF_DISCONNECTED = 32768,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerLineComponentType,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MixerLineComponentType__NAudio
	{
		DestinationUndefined = 0,
		DestinationDigital = 1,
		DestinationLine = 2,
		DestinationMonitor = 3,
		DestinationSpeakers = 4,
		DestinationHeadphones = 5,
		DestinationTelephone = 6,
		DestinationWaveIn = 7,
		DestinationVoiceIn = 8,
		SourceUndefined = 4096,
		SourceDigital = 4097,
		SourceLine = 4098,
		SourceMicrophone = 4099,
		SourceSynthesizer = 4100,
		SourceCompactDisc = 4101,
		SourceTelephone = 4102,
		SourcePcSpeaker = 4103,
		SourceWaveOut = 4104,
		SourceAuxiliary = 4105,
		SourceAnalog = 4106,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+Bounds,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MixerInterop_Bounds__NAudio
	{
		public int minimum;
		public int maximum;
		public int reserved2;
		public int reserved3;
		public int reserved4;
		public int reserved5;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+Metrics,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MixerInterop_Metrics__NAudio
	{
		public int step;
		public int customData;
		public int reserved2;
		public int reserved3;
		public int reserved4;
		public int reserved5;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERCONTROL,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MixerInterop_MIXERCONTROL__NAudio
	{
		public uint cbStruct;
		public int dwControlID;
		public global::NAudio_Mixer.MixerControlType__NAudio dwControlType;
		public uint fdwControl;
		public uint cMultipleItems;
		public string szShortName;
		public string szName;
		public global::NAudio_Mixer.MixerInterop_Bounds__NAudio Bounds;
		public global::NAudio_Mixer.MixerInterop_Metrics__NAudio Metrics;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerControlType,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum MixerControlType__NAudio
	{
		Custom = 0,
		BooleanMeter = 268500992,
		SignedMeter = 268566528,
		PeakMeter = 268566529,
		UnsignedMeter = 268632064,
		Boolean = 536936448,
		OnOff = 536936449,
		Mute = 536936450,
		Mono = 536936451,
		Loudness = 536936452,
		StereoEnhance = 536936453,
		Button = 553713664,
		Signed = 805437440,
		Unsigned = 805502976,
		Decibels = 805568512,
		Percent = 805634048,
		Slider = 1073872896,
		Pan = 1073872897,
		QSoundPan = 1073872898,
		Fader = 1342373888,
		Volume = 1342373889,
		Bass = 1342373890,
		Treble = 1342373891,
		Equalizer = 1342373892,
		MicroTime = 1610809344,
		MilliTime = 1627586560,
		SingleSelect = 1879113728,
		Mux = 1879113729,
		MultipleSelect = 1895890944,
		Mixer = 1895890945,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS_BOOLEAN,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=n" +
		"ull")]
	public unsafe partial struct MixerInterop_MIXERCONTROLDETAILS_BOOLEAN__NAudio
	{
		public int fValue;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS_SIGNED,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public unsafe partial struct MixerInterop_MIXERCONTROLDETAILS_SIGNED__NAudio
	{
		public int lValue;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS_LISTTEXT,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=" +
		"null")]
	public unsafe partial struct MixerInterop_MIXERCONTROLDETAILS_LISTTEXT__NAudio
	{
		public uint dwParam1;
		public uint dwParam2;
		public string szName;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Mixer.MixerInterop+MIXERCONTROLDETAILS_UNSIGNED,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=" +
		"null")]
	public unsafe partial struct MixerInterop_MIXERCONTROLDETAILS_UNSIGNED__NAudio
	{
		public uint dwValue;
	}
}

namespace NAudio_Wave
{
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.IActivateAudioInterfaceCompletionHandler,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=nu" +
		"ll")]
	public unsafe interface IActivateAudioInterfaceCompletionHandler__NAudio
	{
		void ActivateCompleted(global::NAudio_Wave.IActivateAudioInterfaceAsyncOperation__NAudio activateOperation);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.IActivateAudioInterfaceAsyncOperation,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IActivateAudioInterfaceAsyncOperation__NAudio
	{
		void GetActivateResult(
					out int activateResult, 
					out object activateInterface);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.IAgileObject,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IAgileObject__NAudio
	{
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.IAudioClient2,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe interface IAudioClient2__NAudio
	{
		int Initialize(
					global::NAudio_CoreAudioApi.AudioClientShareMode__NAudio shareMode, 
					global::NAudio_CoreAudioApi.AudioClientStreamFlags__NAudio streamFlags, 
					long hnsBufferDuration, 
					long hnsPeriodicity, 
					global::NAudio_Wave.WaveFormat__NAudio pFormat, 
					global::System.IntPtr audioSessionGuid);

		int GetBufferSize(out uint bufferSize);

		long GetStreamLatency();

		int GetCurrentPadding(out int currentPadding);

		int IsFormatSupported(
					global::NAudio_CoreAudioApi.AudioClientShareMode__NAudio shareMode, 
					global::NAudio_Wave.WaveFormat__NAudio pFormat, 
					out global::System.IntPtr closestMatchFormat);

		int GetMixFormat(out global::System.IntPtr deviceFormatPointer);

		int GetDevicePeriod(
					out long defaultDevicePeriod, 
					out long minimumDevicePeriod);

		int Start();

		int Stop();

		int Reset();

		int SetEventHandle(global::System.IntPtr eventHandle);

		int GetService(
					global::System.Guid interfaceId, 
					out object interfacePointer);

		void IsOffloadCapable(
					int category, 
					out bool pbOffloadCapable);

		void SetClientProperties(global::System.IntPtr pProperties);

		void GetBufferSizeLimits(
					global::System.IntPtr pFormat, 
					bool bEventDriven, 
					out long phnsMinBufferDuration, 
					out long phnsMaxBufferDuration);
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveFormat,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial class WaveFormat__NAudio
	{
		public global::NAudio_Wave.WaveFormatEncoding__NAudio waveFormatTag;
		public short channels;
		public int sampleRate;
		public int averageBytesPerSecond;
		public short blockAlign;
		public short bitsPerSample;
		public short extraSize;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveFormatEncoding,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum WaveFormatEncoding__NAudio : ushort
	{
		Unknown = 0x0,
		Pcm = 0x1,
		Adpcm = 0x2,
		IeeeFloat = 0x3,
		Vselp = 0x4,
		IbmCvsd = 0x5,
		ALaw = 0x6,
		MuLaw = 0x7,
		Dts = 0x8,
		Drm = 0x9,
		WmaVoice9 = 0xA,
		OkiAdpcm = 0x10,
		DviAdpcm = 0x11,
		ImaAdpcm = 0x11,
		MediaspaceAdpcm = 0x12,
		SierraAdpcm = 0x13,
		G723Adpcm = 0x14,
		DigiStd = 0x15,
		DigiFix = 0x16,
		DialogicOkiAdpcm = 0x17,
		MediaVisionAdpcm = 0x18,
		CUCodec = 0x19,
		YamahaAdpcm = 0x20,
		SonarC = 0x21,
		DspGroupTrueSpeech = 0x22,
		EchoSpeechCorporation1 = 0x23,
		AudioFileAf36 = 0x24,
		Aptx = 0x25,
		AudioFileAf10 = 0x26,
		Prosody1612 = 0x27,
		Lrc = 0x28,
		DolbyAc2 = 0x30,
		Gsm610 = 0x31,
		MsnAudio = 0x32,
		AntexAdpcme = 0x33,
		ControlResVqlpc = 0x34,
		DigiReal = 0x35,
		DigiAdpcm = 0x36,
		ControlResCr10 = 0x37,
		WAVE_FORMAT_NMS_VBXADPCM = 0x38,
		WAVE_FORMAT_CS_IMAADPCM = 0x39,
		WAVE_FORMAT_ECHOSC3 = 0x3A,
		WAVE_FORMAT_ROCKWELL_ADPCM = 0x3B,
		WAVE_FORMAT_ROCKWELL_DIGITALK = 0x3C,
		WAVE_FORMAT_XEBEC = 0x3D,
		WAVE_FORMAT_G721_ADPCM = 0x40,
		WAVE_FORMAT_G728_CELP = 0x41,
		WAVE_FORMAT_MSG723 = 0x42,
		Mpeg = 0x50,
		WAVE_FORMAT_RT24 = 0x52,
		WAVE_FORMAT_PAC = 0x53,
		MpegLayer3 = 0x55,
		WAVE_FORMAT_LUCENT_G723 = 0x59,
		WAVE_FORMAT_CIRRUS = 0x60,
		WAVE_FORMAT_ESPCM = 0x61,
		WAVE_FORMAT_VOXWARE = 0x62,
		WAVE_FORMAT_CANOPUS_ATRAC = 0x63,
		WAVE_FORMAT_G726_ADPCM = 0x64,
		WAVE_FORMAT_G722_ADPCM = 0x65,
		WAVE_FORMAT_DSAT_DISPLAY = 0x67,
		WAVE_FORMAT_VOXWARE_BYTE_ALIGNED = 0x69,
		WAVE_FORMAT_VOXWARE_AC8 = 0x70,
		WAVE_FORMAT_VOXWARE_AC10 = 0x71,
		WAVE_FORMAT_VOXWARE_AC16 = 0x72,
		WAVE_FORMAT_VOXWARE_AC20 = 0x73,
		WAVE_FORMAT_VOXWARE_RT24 = 0x74,
		WAVE_FORMAT_VOXWARE_RT29 = 0x75,
		WAVE_FORMAT_VOXWARE_RT29HW = 0x76,
		WAVE_FORMAT_VOXWARE_VR12 = 0x77,
		WAVE_FORMAT_VOXWARE_VR18 = 0x78,
		WAVE_FORMAT_VOXWARE_TQ40 = 0x79,
		WAVE_FORMAT_SOFTSOUND = 0x80,
		WAVE_FORMAT_VOXWARE_TQ60 = 0x81,
		WAVE_FORMAT_MSRT24 = 0x82,
		WAVE_FORMAT_G729A = 0x83,
		WAVE_FORMAT_MVI_MVI2 = 0x84,
		WAVE_FORMAT_DF_G726 = 0x85,
		WAVE_FORMAT_DF_GSM610 = 0x86,
		WAVE_FORMAT_ISIAUDIO = 0x88,
		WAVE_FORMAT_ONLIVE = 0x89,
		WAVE_FORMAT_SBC24 = 0x91,
		WAVE_FORMAT_DOLBY_AC3_SPDIF = 0x92,
		WAVE_FORMAT_MEDIASONIC_G723 = 0x93,
		WAVE_FORMAT_PROSODY_8KBPS = 0x94,
		WAVE_FORMAT_ZYXEL_ADPCM = 0x97,
		WAVE_FORMAT_PHILIPS_LPCBB = 0x98,
		WAVE_FORMAT_PACKED = 0x99,
		WAVE_FORMAT_MALDEN_PHONYTALK = 0xA0,
		Gsm = 0xA1,
		G729 = 0xA2,
		G723 = 0xA3,
		Acelp = 0xA4,
		RawAac = 0xFF,
		WAVE_FORMAT_RHETOREX_ADPCM = 0x100,
		WAVE_FORMAT_IRAT = 0x101,
		WAVE_FORMAT_VIVO_G723 = 0x111,
		WAVE_FORMAT_VIVO_SIREN = 0x112,
		WAVE_FORMAT_DIGITAL_G723 = 0x123,
		WAVE_FORMAT_SANYO_LD_ADPCM = 0x125,
		WAVE_FORMAT_SIPROLAB_ACEPLNET = 0x130,
		WAVE_FORMAT_SIPROLAB_ACELP4800 = 0x131,
		WAVE_FORMAT_SIPROLAB_ACELP8V3 = 0x132,
		WAVE_FORMAT_SIPROLAB_G729 = 0x133,
		WAVE_FORMAT_SIPROLAB_G729A = 0x134,
		WAVE_FORMAT_SIPROLAB_KELVIN = 0x135,
		WAVE_FORMAT_G726ADPCM = 0x140,
		WAVE_FORMAT_QUALCOMM_PUREVOICE = 0x150,
		WAVE_FORMAT_QUALCOMM_HALFRATE = 0x151,
		WAVE_FORMAT_TUBGSM = 0x155,
		WAVE_FORMAT_MSAUDIO1 = 0x160,
		WindowsMediaAudio = 0x161,
		WindowsMediaAudioProfessional = 0x162,
		WindowsMediaAudioLosseless = 0x163,
		WindowsMediaAudioSpdif = 0x164,
		WAVE_FORMAT_UNISYS_NAP_ADPCM = 0x170,
		WAVE_FORMAT_UNISYS_NAP_ULAW = 0x171,
		WAVE_FORMAT_UNISYS_NAP_ALAW = 0x172,
		WAVE_FORMAT_UNISYS_NAP_16K = 0x173,
		WAVE_FORMAT_CREATIVE_ADPCM = 0x200,
		WAVE_FORMAT_CREATIVE_FASTSPEECH8 = 0x202,
		WAVE_FORMAT_CREATIVE_FASTSPEECH10 = 0x203,
		WAVE_FORMAT_UHER_ADPCM = 0x210,
		WAVE_FORMAT_QUARTERDECK = 0x220,
		WAVE_FORMAT_ILINK_VC = 0x230,
		WAVE_FORMAT_RAW_SPORT = 0x240,
		WAVE_FORMAT_ESST_AC3 = 0x241,
		WAVE_FORMAT_IPI_HSX = 0x250,
		WAVE_FORMAT_IPI_RPELP = 0x251,
		WAVE_FORMAT_CS2 = 0x260,
		WAVE_FORMAT_SONY_SCX = 0x270,
		WAVE_FORMAT_FM_TOWNS_SND = 0x300,
		WAVE_FORMAT_BTV_DIGITAL = 0x400,
		WAVE_FORMAT_QDESIGN_MUSIC = 0x450,
		WAVE_FORMAT_VME_VMPCM = 0x680,
		WAVE_FORMAT_TPC = 0x681,
		WAVE_FORMAT_OLIGSM = 0x1000,
		WAVE_FORMAT_OLIADPCM = 0x1001,
		WAVE_FORMAT_OLICELP = 0x1002,
		WAVE_FORMAT_OLISBC = 0x1003,
		WAVE_FORMAT_OLIOPR = 0x1004,
		WAVE_FORMAT_LH_CODEC = 0x1100,
		WAVE_FORMAT_NORRIS = 0x1400,
		WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS = 0x1500,
		MPEG_ADTS_AAC = 0x1600,
		MPEG_RAW_AAC = 0x1601,
		MPEG_LOAS = 0x1602,
		NOKIA_MPEG_ADTS_AAC = 0x1608,
		NOKIA_MPEG_RAW_AAC = 0x1609,
		VODAFONE_MPEG_ADTS_AAC = 0x160A,
		VODAFONE_MPEG_RAW_AAC = 0x160B,
		MPEG_HEAAC = 0x1610,
		WAVE_FORMAT_DVM = 0x2000,
		Vorbis1 = 0x674F,
		Vorbis2 = 0x6750,
		Vorbis3 = 0x6751,
		Vorbis1P = 0x676F,
		Vorbis2P = 0x6770,
		Vorbis3P = 0x6771,
		Extensible = 0xFFFE,
		WAVE_FORMAT_DEVELOPMENT = 0xFFFF,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveHeader,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial class WaveHeader__NAudio
	{
		public global::System.IntPtr dataBuffer;
		public int bufferLength;
		public int bytesRecorded;
		public global::System.IntPtr userData;
		public global::NAudio_Wave.WaveHeaderFlags__NAudio flags;
		public int loops;
		public global::System.IntPtr next;
		public global::System.IntPtr reserved;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveHeaderFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum WaveHeaderFlags__NAudio
	{
		Done = 1,
		Prepared = 2,
		BeginLoop = 4,
		EndLoop = 8,
		InQueue = 16,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveInterop+WaveMessage,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum WaveInterop_WaveMessage__NAudio
	{
		WaveOutOpen = 955,
		WaveOutClose = 956,
		WaveOutDone = 957,
		WaveInOpen = 958,
		WaveInClose = 959,
		WaveInData = 960,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveInterop+WaveInOutOpenFlags,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum WaveInterop_WaveInOutOpenFlags__NAudio
	{
		CallbackNull = 0,
		CallbackWindow = 65536,
		CallbackThread = 131072,
		CallbackFunction = 196608,
		CallbackEvent = 327680,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=12)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.MmTime,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct MmTime__NAudio
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public uint wType;
		[global::System.Runtime.InteropServices.FieldOffset(4)]
		public uint ms;
		[global::System.Runtime.InteropServices.FieldOffset(4)]
		public uint sample;
		[global::System.Runtime.InteropServices.FieldOffset(4)]
		public uint cb;
		[global::System.Runtime.InteropServices.FieldOffset(4)]
		public uint ticks;
		[global::System.Runtime.InteropServices.FieldOffset(4)]
		public byte smpteHour;
		[global::System.Runtime.InteropServices.FieldOffset(5)]
		public byte smpteMin;
		[global::System.Runtime.InteropServices.FieldOffset(6)]
		public byte smpteSec;
		[global::System.Runtime.InteropServices.FieldOffset(7)]
		public byte smpteFrame;
		[global::System.Runtime.InteropServices.FieldOffset(8)]
		public byte smpteFps;
		[global::System.Runtime.InteropServices.FieldOffset(9)]
		public byte smpteDummy;
		[global::System.Runtime.InteropServices.FieldOffset(10)]
		public byte smptePad0;
		[global::System.Runtime.InteropServices.FieldOffset(11)]
		public byte smptePad1;
		[global::System.Runtime.InteropServices.FieldOffset(4)]
		public uint midiSongPtrPos;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveOutCapabilities,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct WaveOutCapabilities__NAudio
	{
		public short manufacturerId;
		public short productId;
		public int driverVersion;
		public string productName;
		public global::NAudio_Wave.SupportedWaveFormat__NAudio supportedFormats;
		public short channels;
		public short reserved;
		public global::NAudio_Wave.WaveOutSupport__NAudio support;
		public global::System.Guid manufacturerGuid;
		public global::System.Guid productGuid;
		public global::System.Guid nameGuid;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.SupportedWaveFormat,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum SupportedWaveFormat__NAudio
	{
		WAVE_FORMAT_1M08 = 1,
		WAVE_FORMAT_1S08 = 2,
		WAVE_FORMAT_1M16 = 4,
		WAVE_FORMAT_1S16 = 8,
		WAVE_FORMAT_2M08 = 16,
		WAVE_FORMAT_2S08 = 32,
		WAVE_FORMAT_2M16 = 64,
		WAVE_FORMAT_2S16 = 128,
		WAVE_FORMAT_4M08 = 256,
		WAVE_FORMAT_44M08 = 256,
		WAVE_FORMAT_4S08 = 512,
		WAVE_FORMAT_44S08 = 512,
		WAVE_FORMAT_4M16 = 1024,
		WAVE_FORMAT_44M16 = 1024,
		WAVE_FORMAT_4S16 = 2048,
		WAVE_FORMAT_44S16 = 2048,
		WAVE_FORMAT_48M08 = 4096,
		WAVE_FORMAT_48S08 = 8192,
		WAVE_FORMAT_48M16 = 16384,
		WAVE_FORMAT_48S16 = 32768,
		WAVE_FORMAT_96M08 = 65536,
		WAVE_FORMAT_96S08 = 131072,
		WAVE_FORMAT_96M16 = 262144,
		WAVE_FORMAT_96S16 = 524288,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveOutSupport,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum WaveOutSupport__NAudio
	{
		Pitch = 1,
		PlaybackRate = 2,
		Volume = 4,
		LRVolume = 8,
		Sync = 16,
		SampleAccurate = 32,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveInCapabilities,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct WaveInCapabilities__NAudio
	{
		public short manufacturerId;
		public short productId;
		public int driverVersion;
		public string productName;
		public global::NAudio_Wave.SupportedWaveFormat__NAudio supportedFormats;
		public short channels;
		public short reserved;
		public global::System.Guid manufacturerGuid;
		public global::System.Guid productGuid;
		public global::System.Guid nameGuid;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.EventAccess,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public enum EventAccess__NAudio
	{
		STANDARD_RIGHTS_REQUIRED = 983040,
		SYNCHRONIZE = 1048576,
		EVENT_ALL_ACCESS = 2031619,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.AdpcmWaveFormat,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial class AdpcmWaveFormat__NAudio : global::NAudio_Wave.WaveFormat__NAudio
	{
		public short samplesPerBlock;
		public short numCoeff;
		public short[] coefficients;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.Gsm610WaveFormat,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial class Gsm610WaveFormat__NAudio : global::NAudio_Wave.WaveFormat__NAudio
	{
		public short samplesPerBlock;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveFormatExtensible,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial class WaveFormatExtensible__NAudio : global::NAudio_Wave.WaveFormat__NAudio
	{
		public short wValidBitsPerSample;
		public int dwChannelMask;
		public global::System.Guid subFormat;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("NAudio.Wave.WaveFormatExtraData,NAudio, Version=1.9.0.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial class WaveFormatExtraData__NAudio : global::NAudio_Wave.WaveFormat__NAudio
	{
		public byte[] extraData;
	}
}

namespace Swan_Net_Dns
{
	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=1)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Swan.Net.Dns.DnsClient+DnsHeader,Swan, Version=2.3.1.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct DnsClient_DnsHeader__Swan
	{
		public ushort id;
		public byte flag0;
		public byte flag1;
		public ushort questionCount;
		public ushort answerCount;
		public ushort authorityCount;
		public ushort addtionalCount;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Swan.Net.Dns.DnsClient+DnsQuestion+Tail,Swan, Version=2.3.1.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct DnsClient_DnsQuestion_Tail__Swan
	{
		public ushort type;
		public ushort klass;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=2)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Swan.Net.Dns.DnsClient+DnsResourceRecord+Tail,Swan, Version=2.3.1.0, Culture=neutral, PublicKeyToken=null")]
	public unsafe partial struct DnsClient_DnsResourceRecord_Tail__Swan
	{
		public ushort type;
		public ushort klass;
		public uint ttl;
		public ushort dataLength;
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Sequential, Pack=4)]
	[global::System.Runtime.InteropServices.McgRedirectedType("Swan.Net.Dns.DnsClient+DnsStartOfAuthorityResourceRecord+Options,Swan, Version=2.3.1.0, Culture=neutral, PublicK" +
		"eyToken=null")]
	public unsafe partial struct DnsClient_DnsStartOfAuthorityResourceRecord_Options__Swan
	{
		public uint serialNumber;
		public uint refreshInterval;
		public uint retryInterval;
		public uint expireInterval;
		public uint ttl;
	}
}

namespace System.Net.Security
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Security.SafeFreeContextBuffer_SECURITY,System.Net.Security, Version=4.1.1.0, Culture=neutral, Public" +
		"KeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeFreeContextBuffer_SECURITY__System_Net_Security : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeFreeContextBuffer_SECURITY__System_Net_Security() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}
}

namespace System.Net.Sockets
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.SafeCloseSocket,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f" +
		"11d50a3a")]
	public unsafe class SafeCloseSocket__System_Net_Sockets : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeCloseSocket__System_Net_Sockets() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.SafeCloseSocket+InnerSafeCloseSocket,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, Pu" +
		"blicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeCloseSocket_InnerSafeCloseSocket__System_Net_Sockets : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeCloseSocket_InnerSafeCloseSocket__System_Net_Sockets() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.SafeFreeAddrInfo,System.Net.NameResolution, Version=4.1.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public unsafe class SafeFreeAddrInfo__System_Net_NameResolution : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeFreeAddrInfo__System_Net_NameResolution() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.ConnectExDelegate,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f" +
		"7f11d50a3a")]
	public unsafe delegate bool ConnectExDelegate__System_Net_Sockets(
				global::System.Net.Sockets.SafeCloseSocket__System_Net_Sockets socketHandle, 
				global::System.IntPtr socketAddress, 
				int socketAddressSize, 
				global::System.IntPtr buffer, 
				int dataLength, 
				out int bytesSent, 
				global::System_Threading.NativeOverlapped__System_Private_CoreLib* overlapped);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.AcceptExDelegate,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7" +
		"f11d50a3a")]
	public unsafe delegate bool AcceptExDelegate__System_Net_Sockets(
				global::System.Net.Sockets.SafeCloseSocket__System_Net_Sockets listenSocketHandle, 
				global::System.Net.Sockets.SafeCloseSocket__System_Net_Sockets acceptSocketHandle, 
				global::System.IntPtr buffer, 
				int len, 
				int localAddressLength, 
				int remoteAddressLength, 
				out int bytesReceived, 
				global::System_Threading.NativeOverlapped__System_Private_CoreLib* overlapped);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.GetAcceptExSockaddrsDelegate,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyT" +
		"oken=b03f5f7f11d50a3a")]
	public unsafe delegate void GetAcceptExSockaddrsDelegate__System_Net_Sockets(
				global::System.IntPtr buffer, 
				int receiveDataLength, 
				int localAddressLength, 
				int remoteAddressLength, 
				out global::System.IntPtr localSocketAddress, 
				out int localSocketAddressLength, 
				out global::System.IntPtr remoteSocketAddress, 
				out int remoteSocketAddressLength);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.DisconnectExDelegate,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03" +
		"f5f7f11d50a3a")]
	public unsafe delegate bool DisconnectExDelegate__System_Net_Sockets(
				global::System.Net.Sockets.SafeCloseSocket__System_Net_Sockets socketHandle, 
				global::System_Threading.NativeOverlapped__System_Private_CoreLib* overlapped, 
				int flags, 
				int reserved);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.DisconnectExDelegateBlocking,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyT" +
		"oken=b03f5f7f11d50a3a")]
	public unsafe delegate bool DisconnectExDelegateBlocking__System_Net_Sockets(
				global::System.Net.Sockets.SafeCloseSocket__System_Net_Sockets socketHandle, 
				global::System.IntPtr overlapped, 
				int flags, 
				int reserved);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.WSARecvMsgDelegate,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5" +
		"f7f11d50a3a")]
	public unsafe delegate global::System_Net_Sockets.SocketError__System_Net_Primitives WSARecvMsgDelegate__System_Net_Sockets(
				global::System.Net.Sockets.SafeCloseSocket__System_Net_Sockets socketHandle, 
				global::System.IntPtr msg, 
				out int bytesTransferred, 
				global::System_Threading.NativeOverlapped__System_Private_CoreLib* overlapped, 
				global::System.IntPtr completionRoutine);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.WSARecvMsgDelegateBlocking,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyTok" +
		"en=b03f5f7f11d50a3a")]
	public unsafe delegate global::System_Net_Sockets.SocketError__System_Net_Primitives WSARecvMsgDelegateBlocking__System_Net_Sockets(
				global::System.IntPtr socketHandle, 
				global::System.IntPtr msg, 
				out int bytesTransferred, 
				global::System.IntPtr overlapped, 
				global::System.IntPtr completionRoutine);

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.TransmitPacketsDelegate,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public unsafe delegate bool TransmitPacketsDelegate__System_Net_Sockets(
				global::System.Net.Sockets.SafeCloseSocket__System_Net_Sockets socketHandle, 
				global::System.IntPtr packetArray, 
				int elementCount, 
				int sendSize, 
				global::System_Threading.NativeOverlapped__System_Private_CoreLib* overlapped, 
				global::System_Net_Sockets.TransmitFileOptions__System_Net_Sockets flags);
}

namespace System.Security.Cryptography
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Security.Cryptography.SafeKeyHandle,System.Security.Cryptography.Csp, Version=4.1.1.0, Culture=neutral, P" +
		"ublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeKeyHandle__System_Security_Cryptography_Csp : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeKeyHandle__System_Security_Cryptography_Csp() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Security.Cryptography.SafeProvHandle,System.Security.Cryptography.Csp, Version=4.1.1.0, Culture=neutral, " +
		"PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe class SafeProvHandle__System_Security_Cryptography_Csp : global::System.Runtime.InteropServices.SafeHandle
	{
		public SafeProvHandle__System_Security_Cryptography_Csp() : 
				base(default(global::System.IntPtr), false)
		{
		}

		public override bool IsInvalid
		{
			get
			{
				return false;
			}
		}

		protected override bool ReleaseHandle()
		{
			return false;
		}
	}
}

namespace System_Net
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.SecPkgContext_ConnectionInfo,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b0" +
		"3f5f7f11d50a3a")]
	public unsafe partial class SecPkgContext_ConnectionInfo__System_Net_Security
	{
		public int Protocol;
		public int DataCipherAlg;
		public int DataKeySize;
		public int DataHashAlg;
		public int DataHashKeySize;
		public int KeyExchangeAlg;
		public int KeyExchKeySize;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.SecPkgContext_StreamSizes,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5" +
		"f7f11d50a3a")]
	public unsafe partial class SecPkgContext_StreamSizes__System_Net_Security
	{
		public int cbHeader;
		public int cbTrailer;
		public int cbMaximumMessage;
		public int cBuffers;
		public int cbBlockSize;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.SecPkgContext_Sizes,System.Net.Security, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d" +
		"50a3a")]
	public unsafe partial class SecPkgContext_Sizes__System_Net_Security
	{
		public int cbMaxToken;
		public int cbMaxSignature;
		public int cbBlockSize;
		public int cbSecurityTrailer;
	}
}

namespace System_Net_Internals
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Internals.SocketType,System.Net.NameResolution, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public enum SocketType__System_Net_NameResolution
	{
		Unknown = -1,
		Stream = 1,
		Dgram = 2,
		Raw = 3,
		Rdm = 4,
		Seqpacket = 5,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Internals.ProtocolFamily,System.Net.NameResolution, Version=4.1.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public enum ProtocolFamily__System_Net_NameResolution
	{
		Unknown = -1,
		Unspecified = 0,
		Unix = 1,
		InterNetwork = 2,
		ImpLink = 3,
		Pup = 4,
		Chaos = 5,
		NS = 6,
		Ipx = 6,
		Iso = 7,
		Osi = 7,
		Ecma = 8,
		DataKit = 9,
		Ccitt = 10,
		Sna = 11,
		DecNet = 12,
		DataLink = 13,
		Lat = 14,
		HyperChannel = 15,
		AppleTalk = 16,
		NetBios = 17,
		VoiceView = 18,
		FireFox = 19,
		Banyan = 21,
		Atm = 22,
		InterNetworkV6 = 23,
		Cluster = 24,
		Ieee12844 = 25,
		Irda = 26,
		NetworkDesigners = 28,
		Max = 29,
	}
}

namespace System_Net_NetworkInformation
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.NetworkInformation.NetworkInterfaceType,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum NetworkInterfaceType__System_Net_NetworkInformation
	{
		Unknown = 1,
		Ethernet = 6,
		TokenRing = 9,
		Fddi = 15,
		BasicIsdn = 20,
		PrimaryIsdn = 21,
		Ppp = 23,
		Loopback = 24,
		Ethernet3Megabit = 26,
		Slip = 28,
		Atm = 37,
		GenericModem = 48,
		FastEthernetT = 62,
		Isdn = 63,
		FastEthernetFx = 69,
		Wireless80211 = 71,
		AsymmetricDsl = 94,
		RateAdaptDsl = 95,
		SymmetricDsl = 96,
		VeryHighSpeedDsl = 97,
		IPOverAtm = 114,
		GigabitEthernet = 117,
		Tunnel = 131,
		MultiRateSymmetricDsl = 143,
		HighPerformanceSerialBus = 144,
		Wman = 237,
		Wwanpp = 243,
		Wwanpp2 = 244,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.NetworkInformation.OperationalStatus,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral," +
		" PublicKeyToken=b03f5f7f11d50a3a")]
	public enum OperationalStatus__System_Net_NetworkInformation
	{
		Up = 1,
		Down = 2,
		Testing = 3,
		Unknown = 4,
		Dormant = 5,
		NotPresent = 6,
		LowerLayerDown = 7,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.NetworkInformation.PrefixOrigin,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, Publ" +
		"icKeyToken=b03f5f7f11d50a3a")]
	public enum PrefixOrigin__System_Net_NetworkInformation
	{
		Other = 0,
		Manual = 1,
		WellKnown = 2,
		Dhcp = 3,
		RouterAdvertisement = 4,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.NetworkInformation.SuffixOrigin,System.Net.NetworkInformation, Version=4.2.1.0, Culture=neutral, Publ" +
		"icKeyToken=b03f5f7f11d50a3a")]
	public enum SuffixOrigin__System_Net_NetworkInformation
	{
		Other = 0,
		Manual = 1,
		WellKnown = 2,
		OriginDhcp = 3,
		LinkLayerAddress = 4,
		Random = 5,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.NetworkInformation.DuplicateAddressDetectionState,System.Net.NetworkInformation, Version=4.2.1.0, Cul" +
		"ture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum DuplicateAddressDetectionState__System_Net_NetworkInformation
	{
		Invalid = 0,
		Tentative = 1,
		Duplicate = 2,
		Deprecated = 3,
		Preferred = 4,
	}
}

namespace System_Net_Sockets
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.SocketError,System.Net.Primitives, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f1" +
		"1d50a3a")]
	public enum SocketError__System_Net_Primitives
	{
		SocketError = -1,
		Success = 0,
		OperationAborted = 995,
		IOPending = 997,
		Interrupted = 10004,
		AccessDenied = 10013,
		Fault = 10014,
		InvalidArgument = 10022,
		TooManyOpenSockets = 10024,
		WouldBlock = 10035,
		InProgress = 10036,
		AlreadyInProgress = 10037,
		NotSocket = 10038,
		DestinationAddressRequired = 10039,
		MessageSize = 10040,
		ProtocolType = 10041,
		ProtocolOption = 10042,
		ProtocolNotSupported = 10043,
		SocketNotSupported = 10044,
		OperationNotSupported = 10045,
		ProtocolFamilyNotSupported = 10046,
		AddressFamilyNotSupported = 10047,
		AddressAlreadyInUse = 10048,
		AddressNotAvailable = 10049,
		NetworkDown = 10050,
		NetworkUnreachable = 10051,
		NetworkReset = 10052,
		ConnectionAborted = 10053,
		ConnectionReset = 10054,
		NoBufferSpaceAvailable = 10055,
		IsConnected = 10056,
		NotConnected = 10057,
		Shutdown = 10058,
		TimedOut = 10060,
		ConnectionRefused = 10061,
		HostDown = 10064,
		HostUnreachable = 10065,
		ProcessLimit = 10067,
		SystemNotReady = 10091,
		VersionNotSupported = 10092,
		NotInitialized = 10093,
		Disconnecting = 10101,
		TypeNotFound = 10109,
		HostNotFound = 11001,
		TryAgain = 11002,
		NoRecovery = 11003,
		NoData = 11004,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.SocketOptionLevel,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f" +
		"7f11d50a3a")]
	public enum SocketOptionLevel__System_Net_Sockets
	{
		IP = 0,
		Tcp = 6,
		Udp = 17,
		IPv6 = 41,
		Socket = 65535,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.SocketOptionName,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7" +
		"f11d50a3a")]
	public enum SocketOptionName__System_Net_Sockets
	{
		DontLinger = -129,
		ExclusiveAddressUse = -5,
		Debug = 1,
		IPOptions = 1,
		NoDelay = 1,
		NoChecksum = 1,
		AcceptConnection = 2,
		HeaderIncluded = 2,
		BsdUrgent = 2,
		Expedited = 2,
		TypeOfService = 3,
		ReuseAddress = 4,
		IpTimeToLive = 4,
		KeepAlive = 8,
		MulticastInterface = 9,
		MulticastTimeToLive = 10,
		MulticastLoopback = 11,
		AddMembership = 12,
		DropMembership = 13,
		DontFragment = 14,
		AddSourceMembership = 15,
		DontRoute = 16,
		DropSourceMembership = 16,
		BlockSource = 17,
		UnblockSource = 18,
		PacketInformation = 19,
		ChecksumCoverage = 20,
		HopLimit = 21,
		IPProtectionLevel = 23,
		IPv6Only = 27,
		Broadcast = 32,
		UseLoopback = 64,
		Linger = 128,
		OutOfBandInline = 256,
		SendBuffer = 4097,
		ReceiveBuffer = 4098,
		SendLowWater = 4099,
		ReceiveLowWater = 4100,
		SendTimeout = 4101,
		ReceiveTimeout = 4102,
		Error = 4103,
		Type = 4104,
		ReuseUnicastPort = 12295,
		UpdateAcceptContext = 28683,
		UpdateConnectContext = 28688,
		MaxConnections = 2147483647,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.SocketFlags,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d5" +
		"0a3a")]
	public enum SocketFlags__System_Net_Sockets
	{
		None = 0,
		OutOfBand = 1,
		Peek = 2,
		DontRoute = 4,
		Truncated = 256,
		ControlDataTruncated = 512,
		Broadcast = 1024,
		Multicast = 2048,
		Partial = 32768,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.AddressFamily,System.Net.Primitives, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7" +
		"f11d50a3a")]
	public enum AddressFamily__System_Net_Primitives
	{
		Unknown = -1,
		Unspecified = 0,
		Unix = 1,
		InterNetwork = 2,
		ImpLink = 3,
		Pup = 4,
		Chaos = 5,
		NS = 6,
		Ipx = 6,
		Iso = 7,
		Osi = 7,
		Ecma = 8,
		DataKit = 9,
		Ccitt = 10,
		Sna = 11,
		DecNet = 12,
		DataLink = 13,
		Lat = 14,
		HyperChannel = 15,
		AppleTalk = 16,
		NetBios = 17,
		VoiceView = 18,
		FireFox = 19,
		Banyan = 21,
		Atm = 22,
		InterNetworkV6 = 23,
		Cluster = 24,
		Ieee12844 = 25,
		Irda = 26,
		NetworkDesigners = 28,
		Max = 29,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.SocketType,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50" +
		"a3a")]
	public enum SocketType__System_Net_Sockets
	{
		Unknown = -1,
		Stream = 1,
		Dgram = 2,
		Raw = 3,
		Rdm = 4,
		Seqpacket = 5,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.ProtocolType,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d" +
		"50a3a")]
	public enum ProtocolType__System_Net_Sockets
	{
		Unknown = -1,
		IP = 0,
		IPv6HopByHopOptions = 0,
		Unspecified = 0,
		Icmp = 1,
		Igmp = 2,
		Ggp = 3,
		IPv4 = 4,
		Tcp = 6,
		Pup = 12,
		Udp = 17,
		Idp = 22,
		IPv6 = 41,
		IPv6RoutingHeader = 43,
		IPv6FragmentHeader = 44,
		IPSecEncapsulatingSecurityPayload = 50,
		IPSecAuthenticationHeader = 51,
		IcmpV6 = 58,
		IPv6NoNextHeader = 59,
		IPv6DestinationOptions = 60,
		ND = 77,
		Raw = 255,
		Ipx = 1000,
		Spx = 1256,
		SpxII = 1257,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.WSABuffer,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a" +
		"3a")]
	public unsafe partial struct WSABuffer__System_Net_Sockets
	{
		public int Length;
		public global::System.IntPtr Pointer;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.AddressInfoEx,System.Net.NameResolution, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03" +
		"f5f7f11d50a3a")]
	public unsafe partial struct AddressInfoEx__System_Net_NameResolution
	{
		public global::System_Net_Sockets.AddressInfoHints__System_Net_NameResolution ai_flags;
		public global::System_Net_Sockets.AddressFamily__System_Net_Primitives ai_family;
		public global::System_Net_Internals.SocketType__System_Net_NameResolution ai_socktype;
		public global::System_Net_Internals.ProtocolFamily__System_Net_NameResolution ai_protocol;
		public int ai_addrlen;
		public global::System.IntPtr ai_canonname;
		public byte* ai_addr;
		public global::System.IntPtr ai_blob;
		public int ai_bloblen;
		public global::System.IntPtr ai_provider;
		public global::System_Net_Sockets.AddressInfoEx__System_Net_NameResolution* ai_next;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.AddressInfoHints,System.Net.NameResolution, Version=4.1.1.0, Culture=neutral, PublicKeyToken=" +
		"b03f5f7f11d50a3a")]
	public enum AddressInfoHints__System_Net_NameResolution
	{
		AI_PASSIVE = 1,
		AI_CANONNAME = 2,
		AI_NUMERICHOST = 4,
		AI_FQDN = 131072,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.AddressInfo,System.Net.NameResolution, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5" +
		"f7f11d50a3a")]
	public unsafe partial struct AddressInfo__System_Net_NameResolution
	{
		public global::System_Net_Sockets.AddressInfoHints__System_Net_NameResolution ai_flags;
		public global::System_Net_Sockets.AddressFamily__System_Net_Primitives ai_family;
		public global::System_Net_Internals.SocketType__System_Net_NameResolution ai_socktype;
		public global::System_Net_Internals.ProtocolFamily__System_Net_NameResolution ai_protocol;
		public int ai_addrlen;
		public sbyte* ai_canonname;
		public byte* ai_addr;
		public global::System_Net_Sockets.AddressInfo__System_Net_NameResolution* ai_next;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Net.Sockets.TransmitFileOptions,System.Net.Sockets, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f" +
		"5f7f11d50a3a")]
	public enum TransmitFileOptions__System_Net_Sockets
	{
		UseDefaultWorkerThread = 0,
		Disconnect = 1,
		ReuseSocket = 2,
		WriteBehind = 4,
		UseSystemThread = 16,
		UseKernelApc = 32,
	}
}

namespace System_Runtime_InteropServices
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IClassFactory,System.Private.Interop, Version=999.999.999.999, Culture=neutral, P" +
		"ublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface IClassFactory__System_Private_Interop
	{
		int CreateInstance(
					global::System.IntPtr pUnkOuter, 
					global::System.Guid* riid, 
					global::System.IntPtr* ppvObject);

		int LockServer(int fLock);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IMarshal,System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, Public" +
		"KeyToken=b77a5c561934e089")]
	public unsafe interface IMarshal__System_Runtime_WindowsRuntime
	{
		void GetUnmarshalClass(
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlFlags, 
					out global::System.Guid pCid);

		void GetMarshalSizeMax(
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlflags, 
					out uint pSize);

		void MarshalInterface(
					global::System.IntPtr pStm, 
					ref global::System.Guid riid, 
					global::System.IntPtr pv, 
					uint dwDestContext, 
					global::System.IntPtr pvDestContext, 
					uint mshlflags);

		void UnmarshalInterface(
					global::System.IntPtr pStm, 
					ref global::System.Guid riid, 
					out global::System.IntPtr ppv);

		void ReleaseMarshalData(global::System.IntPtr pStm);

		void DisconnectObject(uint dwReserved);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.IAgileObject,System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, Pu" +
		"blicKeyToken=b77a5c561934e089")]
	public unsafe interface IAgileObject__System_Runtime_WindowsRuntime
	{
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ClassFactory,System.Private.Interop, Version=999.999.999.999, Culture=neutral, Pu" +
		"blicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial class ClassFactory__System_Private_Interop
	{
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=24)]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.HSTRING_HEADER,System.Private.Interop, Version=999.999.999.999, Culture=neutral, " +
		"PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct HSTRING_HEADER__System_Private_Interop
	{
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.HSTRING,System.Private.Interop, Version=999.999.999.999, Culture=neutral, PublicK" +
		"eyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct HSTRING__System_Private_Interop
	{
		public global::System.IntPtr handle;
	}
}

namespace System_Runtime_InteropServices_ComTypes
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.IStream,System.Private.Interop, Version=999.999.999.999, Culture=neutral" +
		", PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface IStream__System_Private_Interop
	{
		void Read(
					byte[] pv, 
					int cb, 
					global::System.IntPtr pcbRead);

		void Write(
					byte[] pv, 
					int cb, 
					global::System.IntPtr pcbWritten);

		void Seek(
					long dlibMove, 
					int dwOrigin, 
					global::System.IntPtr plibNewPosition);

		void SetSize(long libNewSize);

		void CopyTo(
					global::System_Runtime_InteropServices_ComTypes.IStream__System_Private_Interop pstm, 
					long cb, 
					global::System.IntPtr pcbRead, 
					global::System.IntPtr pcbWritten);

		void Commit(int grfCommitFlags);

		void Revert();

		void LockRegion(
					long libOffset, 
					long cb, 
					int dwLockType);

		void UnlockRegion(
					long libOffset, 
					long cb, 
					int dwLockType);

		void Stat(
					out global::System_Runtime_InteropServices_ComTypes.STATSTG__System_Private_Interop pstatstg, 
					int grfStatFlag);

		void Clone(out global::System_Runtime_InteropServices_ComTypes.IStream__System_Private_Interop ppstm);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=999.999.999.999, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeInfo__System_Private_Interop
	{
		void GetTypeAttr(out global::System.IntPtr ppTypeAttr);

		void GetTypeComp(out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp);

		void GetFuncDesc(
					int index, 
					out global::System.IntPtr ppFuncDesc);

		void GetVarDesc(
					int index, 
					out global::System.IntPtr ppVarDesc);

		void GetNames(
					int memid, 
					string[] rgBstrNames, 
					int cMaxNames, 
					out int pcNames);

		void GetRefTypeOfImplType(
					int index, 
					out int href);

		void GetImplTypeFlags(
					int index, 
					out global::System_Runtime_InteropServices_ComTypes.IMPLTYPEFLAGS__System_Private_Interop pImplTypeFlags);

		void GetIDsOfNames(
					string[] rgszNames, 
					int cNames, 
					int[] pMemId);

		void Invoke(
					object pvInstance, 
					int memid, 
					short wFlags, 
					ref global::System_Runtime_InteropServices_ComTypes.DISPPARAMS__System_Private_Interop pDispParams, 
					global::System.IntPtr pVarResult, 
					global::System.IntPtr pExcepInfo, 
					out int puArgErr);

		void GetDocumentation(
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile);

		void GetDllEntry(
					int memid, 
					global::System_Runtime_InteropServices_ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					global::System.IntPtr pBstrDllName, 
					global::System.IntPtr pBstrName, 
					global::System.IntPtr pwOrdinal);

		void GetRefTypeInfo(
					int hRef, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTI);

		void AddressOfMember(
					int memid, 
					global::System_Runtime_InteropServices_ComTypes.INVOKEKIND__System_Private_Interop invKind, 
					out global::System.IntPtr ppv);

		void CreateInstance(
					object pUnkOuter, 
					ref global::System.Guid riid, 
					out object ppvObj);

		void GetMops(
					int memid, 
					out string pBstrMops);

		void GetContainingTypeLib(
					out global::System_Runtime_InteropServices_ComTypes.ITypeLib__System_Private_Interop ppTLB, 
					out int pIndex);

		void ReleaseTypeAttr(global::System.IntPtr pTypeAttr);

		void ReleaseFuncDesc(global::System.IntPtr pFuncDesc);

		void ReleaseVarDesc(global::System.IntPtr pVarDesc);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=999.999.999.999, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeComp__System_Private_Interop
	{
		void Bind(
					string szName, 
					int lHashVal, 
					short wFlags, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System_Runtime_InteropServices_ComTypes.DESCKIND__System_Private_Interop pDescKind, 
					out global::System_Runtime_InteropServices_ComTypes.BINDPTR__System_Private_Interop pBindPtr);

		void BindType(
					string szName, 
					int lHashVal, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTInfo, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.ITypeLib,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe interface ITypeLib__System_Private_Interop
	{
		int GetTypeInfoCount();

		void GetTypeInfo(
					int index, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTI);

		void GetTypeInfoType(
					int index, 
					out global::System_Runtime_InteropServices_ComTypes.TYPEKIND__System_Private_Interop pTKind);

		void GetTypeInfoOfGuid(
					ref global::System.Guid guid, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTInfo);

		void GetLibAttr(out global::System.IntPtr ppTLibAttr);

		void GetTypeComp(out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp);

		void GetDocumentation(
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile);

		bool IsName(
					string szNameBuf, 
					int lHashVal);

		void FindName(
					string szNameBuf, 
					int lHashVal, 
					global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop[] ppTInfo, 
					int[] rgMemId, 
					ref short pcFound);

		void ReleaseTLibAttr(global::System.IntPtr pTLibAttr);
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.STATSTG,System.Private.Interop, Version=999.999.999.999, Culture=neutral" +
		", PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct STATSTG__System_Private_Interop
	{
		public string pwcsName;
		public int type;
		public long cbSize;
		public global::System_Runtime_InteropServices_ComTypes.FILETIME__System_Private_Interop mtime;
		public global::System_Runtime_InteropServices_ComTypes.FILETIME__System_Private_Interop ctime;
		public global::System_Runtime_InteropServices_ComTypes.FILETIME__System_Private_Interop atime;
		public int grfMode;
		public int grfLocksSupported;
		public global::System.Guid clsid;
		public int grfStateBits;
		public int reserved;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.FILETIME,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct FILETIME__System_Private_Interop
	{
		public int dwLowDateTime;
		public int dwHighDateTime;
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.DESCKIND,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum DESCKIND__System_Private_Interop
	{
		DESCKIND_NONE = 0,
		DESCKIND_FUNCDESC = 1,
		DESCKIND_VARDESC = 2,
		DESCKIND_TYPECOMP = 3,
		DESCKIND_IMPLICITAPPOBJ = 4,
		DESCKIND_MAX = 5,
	}

	[global::System.Runtime.InteropServices.StructLayout(global::System.Runtime.InteropServices.LayoutKind.Explicit, Size=8)]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.BINDPTR,System.Private.Interop, Version=999.999.999.999, Culture=neutral" +
		", PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct BINDPTR__System_Private_Interop
	{
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lpfuncdesc;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lpvardesc;
		[global::System.Runtime.InteropServices.FieldOffset(0)]
		public global::System.IntPtr lptcomp;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS,System.Private.Interop, Version=999.999.999.999, Culture=n" +
		"eutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum IMPLTYPEFLAGS__System_Private_Interop
	{
		IMPLTYPEFLAG_FDEFAULT = 1,
		IMPLTYPEFLAG_FSOURCE = 2,
		IMPLTYPEFLAG_FRESTRICTED = 4,
		IMPLTYPEFLAG_FDEFAULTVTABLE = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.DISPPARAMS,System.Private.Interop, Version=999.999.999.999, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public unsafe partial struct DISPPARAMS__System_Private_Interop
	{
		public global::System.IntPtr rgvarg;
		public global::System.IntPtr rgdispidNamedArgs;
		public int cArgs;
		public int cNamedArgs;
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.INVOKEKIND,System.Private.Interop, Version=999.999.999.999, Culture=neut" +
		"ral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum INVOKEKIND__System_Private_Interop
	{
		INVOKE_FUNC = 1,
		INVOKE_PROPERTYGET = 2,
		INVOKE_PROPERTYPUT = 4,
		INVOKE_PROPERTYPUTREF = 8,
	}

	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.ComTypes.TYPEKIND,System.Private.Interop, Version=999.999.999.999, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum TYPEKIND__System_Private_Interop
	{
		TKIND_ENUM = 0,
		TKIND_RECORD = 1,
		TKIND_MODULE = 2,
		TKIND_INTERFACE = 3,
		TKIND_DISPATCH = 4,
		TKIND_COCLASS = 5,
		TKIND_ALIAS = 6,
		TKIND_UNION = 7,
		TKIND_MAX = 8,
	}
}

namespace System_Runtime_InteropServices_WindowsRuntime
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Runtime.InteropServices.WindowsRuntime.IBufferByteAccess,System.Runtime.WindowsRuntime, Version=4.0.14.0," +
		" Culture=neutral, PublicKeyToken=b77a5c561934e089")]
	public unsafe interface IBufferByteAccess__System_Runtime_WindowsRuntime
	{
		global::System.IntPtr GetBuffer();
	}
}

namespace System_Security_Cryptography
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Security.Cryptography.OidGroup,System.Security.Cryptography.Encoding, Version=4.1.1.0, Culture=neutral, P" +
		"ublicKeyToken=b03f5f7f11d50a3a")]
	public enum OidGroup__System_Security_Cryptography_Encoding
	{
		All = 0,
		HashAlgorithm = 1,
		EncryptionAlgorithm = 2,
		PublicKeyAlgorithm = 3,
		SignatureAlgorithm = 4,
		Attribute = 5,
		ExtensionOrAttribute = 6,
		EnhancedKeyUsage = 7,
		Policy = 8,
		Template = 9,
		KeyDerivationFunction = 10,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Security.Cryptography.CngKeyOpenOptions,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutra" +
		"l, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CngKeyOpenOptions__System_Security_Cryptography_Cng
	{
		None = 0,
		UserKey = 0,
		MachineKey = 32,
		Silent = 64,
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Security.Cryptography.CngPropertyOptions,System.Security.Cryptography.Cng, Version=4.3.1.0, Culture=neutr" +
		"al, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum CngPropertyOptions__System_Security_Cryptography_Cng
	{
		Persist = -2147483648,
		None = 0,
		CustomProperty = 1073741824,
	}
}

namespace System_Security_Cryptography_X509Certificates
{
	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Security.Cryptography.X509Certificates.X509KeyUsageFlags,System.Security.Cryptography.X509Certificates, V" +
		"ersion=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	public enum X509KeyUsageFlags__System_Security_Cryptography_X509Certificates
	{
		None = 0,
		EncipherOnly = 1,
		CrlSign = 2,
		KeyCertSign = 4,
		KeyAgreement = 8,
		DataEncipherment = 16,
		KeyEncipherment = 32,
		NonRepudiation = 64,
		DigitalSignature = 128,
		DecipherOnly = 32768,
	}
}

namespace System_Security_Principal
{
	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Security.Principal.TokenAccessLevels,System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral," +
		" PublicKeyToken=b03f5f7f11d50a3a")]
	public enum TokenAccessLevels__System_Security_Principal_Windows
	{
		AssignPrimary = 1,
		Duplicate = 2,
		Impersonate = 4,
		Query = 8,
		QuerySource = 16,
		AdjustPrivileges = 32,
		AdjustGroups = 64,
		AdjustDefault = 128,
		AdjustSessionId = 256,
		Read = 131080,
		Write = 131296,
		AllAccess = 983551,
		MaximumAllowed = 33554432,
	}
}

namespace System_Threading
{
	[global::System.Runtime.InteropServices.McgRedirectedType("System.Threading.NativeOverlapped,System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5" +
		"f7f11d50a3a")]
	public unsafe partial struct NativeOverlapped__System_Private_CoreLib
	{
		public global::System.IntPtr InternalLow;
		public global::System.IntPtr InternalHigh;
		public int OffsetLow;
		public int OffsetHigh;
		public global::System.IntPtr EventHandle;
	}
}

namespace Unosquare.WiringPi.Native
{
	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Unosquare.WiringPi.Native.InterruptServiceRoutineCallback,Unosquare.WiringPi, Version=0.5.0.0, Culture=neutral, " +
		"PublicKeyToken=null")]
	public unsafe delegate void InterruptServiceRoutineCallback__Unosquare_WiringPi();

	// Unmanaged Function Pointer - Calling Convention StdCall
	[global::System.Runtime.InteropServices.McgRedirectedType("Unosquare.WiringPi.Native.ThreadWorker,Unosquare.WiringPi, Version=0.5.0.0, Culture=neutral, PublicKeyToken=null" +
		"")]
	public unsafe delegate void ThreadWorker__Unosquare_WiringPi();
}

namespace Unosquare_RaspberryIO_Native
{
	[global::System.Runtime.InteropServices.McgRedirectedType("Unosquare.RaspberryIO.Native.SystemName,Unosquare.RaspberryIO, Version=0.27.0.0, Culture=neutral, PublicKeyToken" +
		"=null")]
	public unsafe partial struct SystemName__Unosquare_RaspberryIO
	{
		public string SysName;
		public string NodeName;
		public string Release;
		public string Version;
		public string Machine;
		public string DomainName;
	}
}

namespace Windows.ApplicationModel
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SuspendingOperation")]
		public global::Windows.ApplicationModel.SuspendingOperation get_SuspendingOperation()
		{
			global::Windows.ApplicationModel.SuspendingOperation __retVal = global::Windows.ApplicationModel.ISuspendingEventArgs__Impl.Stubs.get_SuspendingOperation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SuspendingEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingOperation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingOperation : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingOperation
	{
		public global::Windows.ApplicationModel.SuspendingDeferral GetDeferral()
		{
			global::Windows.ApplicationModel.SuspendingDeferral __retVal = global::Windows.ApplicationModel.ISuspendingOperation__Impl.Stubs.GetDeferral(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SuspendingOperation(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ISuspendingDeferral))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SuspendingDeferral : global::System.__ComObject, global::Windows.ApplicationModel.ISuspendingDeferral
	{
		public void Complete()
		{
			global::Windows.ApplicationModel.ISuspendingDeferral__Impl.Stubs.Complete(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public SuspendingDeferral(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.ILeavingBackgroundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LeavingBackgroundEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.ILeavingBackgroundEventArgs
	{
		public LeavingBackgroundEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IEnteredBackgroundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EnteredBackgroundEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.IEnteredBackgroundEventArgs
	{
		public EnteredBackgroundEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackage))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackage2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Package : global::System.__ComObject, global::Windows.ApplicationModel.IPackage, global::Windows.ApplicationModel.IPackage2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		public global::Windows.ApplicationModel.PackageId get_Id()
		{
			global::Windows.ApplicationModel.PackageId __retVal = global::Windows.ApplicationModel.IPackage__Impl.Stubs.get_Id(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InstalledLocation")]
		public global::Windows.Storage.StorageFolder get_InstalledLocation()
		{
			global::Windows.Storage.StorageFolder __retVal = global::Windows.ApplicationModel.IPackage__Impl.Stubs.get_InstalledLocation(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.ApplicationModel.IPackage2__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public static global::Windows.ApplicationModel.Package get_Current()
		{
			global::Windows.ApplicationModel.Package retval;
			retval = __Factory_Windows_ApplicationModel__IPackageStatics_get_Current("Windows.ApplicationModel.Package");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Package __Factory_Windows_ApplicationModel__IPackageStatics_get_Current(string typeName)
		{
			global::Windows.ApplicationModel.Package __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.IPackageStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.IPackageStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Package(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.IPackageId))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PackageId : global::System.__ComObject, global::Windows.ApplicationModel.IPackageId
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		public string get_Name()
		{
			string __retVal = global::Windows.ApplicationModel.IPackageId__Impl.Stubs.get_Name(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FullName")]
		public string get_FullName()
		{
			string __retVal = global::Windows.ApplicationModel.IPackageId__Impl.Stubs.get_FullName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public PackageId(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SuspendingOperation")]
		global::Windows.ApplicationModel.SuspendingOperation get_SuspendingOperation();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingOperation
	{
		global::Windows.ApplicationModel.SuspendingDeferral GetDeferral();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISuspendingDeferral
	{
		void Complete();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILeavingBackgroundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEnteredBackgroundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackageStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.ApplicationModel.Package get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackage
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Id")]
		global::Windows.ApplicationModel.PackageId get_Id();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "InstalledLocation")]
		global::Windows.Storage.StorageFolder get_InstalledLocation();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackageId
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FullName")]
		string get_FullName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPackage2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}
}

namespace Windows.ApplicationModel.Activation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LaunchActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs, global::Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Arguments")]
		public string get_Arguments()
		{
			string __retVal = global::Windows.ApplicationModel.Activation.ILaunchActivatedEventArgs__Impl.Stubs.get_Arguments(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PrelaunchActivated")]
		public bool get_PrelaunchActivated()
		{
			bool __retVal = global::Windows.ApplicationModel.Activation.IPrelaunchActivatedEventArgs__Impl.Stubs.get_PrelaunchActivated(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public LaunchActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SearchActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ISearchActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public SearchActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ShareTargetActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IShareTargetActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ShareTargetActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileOpenPickerActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileOpenPickerActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileOpenPickerActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FileSavePickerActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IFileSavePickerActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FileSavePickerActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CachedFileUpdaterActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.ICachedFileUpdaterActivatedEventArgs, global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		public global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState()
		{
			global::Windows.ApplicationModel.Activation.ApplicationExecutionState __retVal = global::Windows.ApplicationModel.Activation.IActivatedEventArgs__Impl.Stubs.get_PreviousExecutionState(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CachedFileUpdaterActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BackgroundActivatedEventArgs : global::System.__ComObject, global::Windows.ApplicationModel.Activation.IBackgroundActivatedEventArgs
	{
		public BackgroundActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PreviousExecutionState")]
		global::Windows.ApplicationModel.Activation.ApplicationExecutionState get_PreviousExecutionState();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILaunchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Arguments")]
		string get_Arguments();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPrelaunchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PrelaunchActivated")]
		bool get_PrelaunchActivated();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISearchActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IShareTargetActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileOpenPickerActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFileSavePickerActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICachedFileUpdaterActivatedEventArgs : global::Windows.ApplicationModel.Activation.IActivatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBackgroundActivatedEventArgs
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ApplicationExecutionState
	{
		NotRunning = 0,
		Running = 1,
		Suspended = 2,
		Terminated = 3,
		ClosedByUser = 4,
	}
}

namespace Windows.ApplicationModel.Resources.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContext))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceContext : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceContext
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "QualifierValues")]
		public global::Windows.Foundation.Collections.IObservableMap<string, string> get_QualifierValues()
		{
			global::Windows.Foundation.Collections.IObservableMap<string, string> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.get_QualifierValues(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.ApplicationModel.Resources.Core.ResourceContext Clone()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.Clone(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Languages")]
		public global::System.Collections.Generic.IReadOnlyList<string> get_Languages()
		{
			global::System.Collections.Generic.IReadOnlyList<string> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.get_Languages(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Languages")]
		public void put_Languages(global::System.Collections.Generic.IReadOnlyList<string> languages)
		{
			global::Windows.ApplicationModel.Resources.Core.IResourceContext__Impl.Stubs.put_Languages(
								this, 
								languages
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static global::Windows.ApplicationModel.Resources.Core.ResourceContext GetForViewIndependentUse()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext retval;
			retval = __Factory_Windows_ApplicationModel_Resources_Core__IResourceContextStatics2_GetForViewIndependentUse("Windows.ApplicationModel.Resources.Core.ResourceContext");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Resources.Core.ResourceContext __Factory_Windows_ApplicationModel_Resources_Core__IResourceContextStatics2_GetForViewIndependentUse(string typeName)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceContext __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Resources.Core.IResourceContextStatics2__Impl.Stubs.GetForViewIndependentUse(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceContextStatics2).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ResourceContext(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManager))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceManager : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceManager
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainResourceMap")]
		public global::Windows.ApplicationModel.Resources.Core.ResourceMap get_MainResourceMap()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceMap __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Stubs.get_MainResourceMap(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllResourceMaps")]
		public global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.ResourceMap> get_AllResourceMaps()
		{
			global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.ResourceMap> __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceManager__Impl.Stubs.get_AllResourceMaps(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public static global::Windows.ApplicationModel.Resources.Core.ResourceManager get_Current()
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceManager retval;
			retval = __Factory_Windows_ApplicationModel_Resources_Core__IResourceManagerStatics_get_Current("Windows.ApplicationModel.Resources.Core.ResourceManager");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.ApplicationModel.Resources.Core.ResourceManager __Factory_Windows_ApplicationModel_Resources_Core__IResourceManagerStatics_get_Current(string typeName)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceManager __pRetVal;
			__pRetVal = global::Windows.ApplicationModel.Resources.Core.IResourceManagerStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.ApplicationModel.Resources.Core.IResourceManagerStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ResourceManager(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceMap))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceMap : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceMap, global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>, global::System.Collections.Generic.IReadOnlyCollection<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>
	{
		int global::System.Collections.Generic.IReadOnlyCollection<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Count_Get(((global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)this));
			}
		}

		global::Windows.ApplicationModel.Resources.Core.NamedResource global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>)this), 
									index
								);
			}
		}

		global::System.Collections.Generic.IEnumerable<string> global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Keys(this);
			}
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.ApplicationModel.Resources.Core.NamedResource> global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.Values(this);
			}
		}

		bool global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.ContainsKey(
								this, 
								key
							);
		}

		bool global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>.TryGetValue(
					string key, 
					out global::Windows.ApplicationModel.Resources.Core.NamedResource value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapViewSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>).TypeHandle
							);
		}

		public global::Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceCandidate __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Stubs.GetValue(
								this, 
								resource, 
								context
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.ApplicationModel.Resources.Core.ResourceMap GetSubtree(string reference)
		{
			global::Windows.ApplicationModel.Resources.Core.ResourceMap __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceMap__Impl.Stubs.GetSubtree(
								this, 
								reference
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ResourceMap(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.INamedResource))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NamedResource : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.INamedResource
	{
		public NamedResource(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.ApplicationModel.Resources.Core.IResourceCandidate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ResourceCandidate : global::System.__ComObject, global::Windows.ApplicationModel.Resources.Core.IResourceCandidate
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueAsString")]
		public string get_ValueAsString()
		{
			string __retVal = global::Windows.ApplicationModel.Resources.Core.IResourceCandidate__Impl.Stubs.get_ValueAsString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public ResourceCandidate(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceContextStatics2
	{
		global::Windows.ApplicationModel.Resources.Core.ResourceContext GetForViewIndependentUse();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceContext
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "QualifierValues")]
		global::Windows.Foundation.Collections.IObservableMap<string, string> get_QualifierValues();

		global::Windows.ApplicationModel.Resources.Core.ResourceContext Clone();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Languages")]
		global::System.Collections.Generic.IReadOnlyList<string> get_Languages();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Languages")]
		void put_Languages(global::System.Collections.Generic.IReadOnlyList<string> languages);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceManagerStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.ApplicationModel.Resources.Core.ResourceManager get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceManager
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MainResourceMap")]
		global::Windows.ApplicationModel.Resources.Core.ResourceMap get_MainResourceMap();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllResourceMaps")]
		global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.ResourceMap> get_AllResourceMaps();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceMap : global::System.Collections.Generic.IReadOnlyDictionary<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::Windows.ApplicationModel.Resources.Core.NamedResource>>
	{
		global::Windows.ApplicationModel.Resources.Core.ResourceCandidate GetValue(
					string resource, 
					global::Windows.ApplicationModel.Resources.Core.ResourceContext context);

		global::Windows.ApplicationModel.Resources.Core.ResourceMap GetSubtree(string reference);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INamedResource
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IResourceCandidate
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ValueAsString")]
		string get_ValueAsString();
	}
}

namespace Windows.Devices.Enumeration
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.DeviceInformation>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.DeviceInformation>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DeviceInformationCollection : global::System.__ComObject, global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.DeviceInformation>, global::System.Collections.Generic.IReadOnlyCollection<global::Windows.Devices.Enumeration.DeviceInformation>, global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.DeviceInformation>
	{
		global::System.Collections.Generic.IEnumerator<global::Windows.Devices.Enumeration.DeviceInformation> global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.DeviceInformation>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.Devices.Enumeration.DeviceInformation>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.Devices.Enumeration.DeviceInformation>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.DeviceInformation>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.Devices.Enumeration.DeviceInformation>).TypeHandle
							);
		}

		int global::System.Collections.Generic.IReadOnlyCollection<global::Windows.Devices.Enumeration.DeviceInformation>.Count
		{
			get
			{
				global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IVectorViewSharedReferenceTypesDynamicAdapter<global::Windows.Devices.Enumeration.DeviceInformation>).TypeHandle;
				return global::__Interop.McgHelpers.GetReadOnlyCollectionCount(
									this, 
									typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.DeviceInformation>).TypeHandle
								);
			}
		}

		global::Windows.Devices.Enumeration.DeviceInformation global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.DeviceInformation>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.McgMarshal.FastCast<global::System.Runtime.InteropServices.WindowsRuntime.IReadOnlyListAdapter<global::Windows.Devices.Enumeration.DeviceInformation>>(global::System.Runtime.InteropServices.McgMarshal.GetDynamicAdapter(
										this, 
										typeof(global::System.Collections.Generic.IReadOnlyList<global::Windows.Devices.Enumeration.DeviceInformation>).TypeHandle
									))[index];
			}
		}

		public DeviceInformationCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Devices.Enumeration.IDeviceInformation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DeviceInformation : global::System.__ComObject, global::Windows.Devices.Enumeration.IDeviceInformation, global::Windows.Devices.Enumeration.IDeviceInformation2
	{
		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceInformationCollection> FindAllAsync(
					string aqsFilter, 
					global::System.Collections.Generic.IEnumerable<string> additionalProperties)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceInformationCollection> retval;
			retval = __Factory_Windows_Devices_Enumeration__IDeviceInformationStatics_FindAllAsync(
								"Windows.Devices.Enumeration.DeviceInformation", 
								aqsFilter, 
								additionalProperties
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceInformationCollection> __Factory_Windows_Devices_Enumeration__IDeviceInformationStatics_FindAllAsync(
					string typeName, 
					string aqsFilter, 
					global::System.Collections.Generic.IEnumerable<string> additionalProperties)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceInformationCollection> __pRetVal;
			__pRetVal = global::Windows.Devices.Enumeration.IDeviceInformationStatics__Impl.Stubs.FindAllAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Devices.Enumeration.IDeviceInformationStatics).TypeHandle
												), 
								aqsFilter, 
								additionalProperties
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public DeviceInformation(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDeviceInformationStatics
	{
		global::Windows.Foundation.IAsyncOperation<global::Windows.Devices.Enumeration.DeviceInformationCollection> FindAllAsync(
					string aqsFilter, 
					global::System.Collections.Generic.IEnumerable<string> additionalProperties);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDeviceInformation
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDeviceInformation2
	{
	}
}

namespace Windows.Foundation
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStringable
	{
		string ToString();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct UniversalApiContract
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct FoundationContract
	{
	}
}

namespace Windows.Foundation.Diagnostics
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TracingStatusChangedEventArgs : global::System.__ComObject, global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Enabled")]
		public bool get_Enabled()
		{
			bool __retVal = global::Windows.Foundation.Diagnostics.ITracingStatusChangedEventArgs__Impl.Stubs.get_Enabled(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public TracingStatusChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AsyncCausalityTracer : global::System.__ComObject
	{
		public static void TraceOperationCreation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCreation(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								operationName, 
								relatedContext
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCreation(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationCreation(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								operationName, 
								relatedContext
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceOperationCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCompletion(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationCompletion(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationCompletion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceOperationRelation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationRelation(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								relation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceOperationRelation(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceOperationRelation(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								relation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceSynchronousWorkStart(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkStart(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkStart(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceSynchronousWorkStart(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void TraceSynchronousWorkCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkCompletion(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								traceLevel, 
								source, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_TraceSynchronousWorkCompletion(
					string typeName, 
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.TraceSynchronousWorkCompletion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								traceLevel, 
								source, 
								work
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TracingStatusChanged")]
		public static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TracingStatusChanged(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken retval;
			retval = __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_add_TracingStatusChanged(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_add_TracingStatusChanged(
					string typeName, 
					global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __pRetVal;
			__pRetVal = global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.add_TracingStatusChanged(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TracingStatusChanged")]
		public static void remove_TracingStatusChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie)
		{
			__Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_remove_TracingStatusChanged(
								"Windows.Foundation.Diagnostics.AsyncCausalityTracer", 
								cookie
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_Foundation_Diagnostics__IAsyncCausalityTracerStatics_remove_TracingStatusChanged(
					string typeName, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie)
		{
			global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics__Impl.Stubs.remove_TracingStatusChanged(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics).TypeHandle
												), 
								cookie
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public AsyncCausalityTracer(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITracingStatusChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Enabled")]
		bool get_Enabled();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAsyncCausalityTracerStatics
	{
		void TraceOperationCreation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					string operationName, 
					ulong relatedContext);

		void TraceOperationCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.AsyncStatus status);

		void TraceOperationRelation(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalityRelation relation);

		void TraceSynchronousWorkStart(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::System.Guid platformId, 
					ulong operationId, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work);

		void TraceSynchronousWorkCompletion(
					global::Windows.Foundation.Diagnostics.CausalityTraceLevel traceLevel, 
					global::Windows.Foundation.Diagnostics.CausalitySource source, 
					global::Windows.Foundation.Diagnostics.CausalitySynchronousWork work);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "TracingStatusChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_TracingStatusChanged(global::System.EventHandler<global::Windows.Foundation.Diagnostics.TracingStatusChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "TracingStatusChanged")]
		void remove_TracingStatusChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken cookie);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalityTraceLevel
	{
		Required = 0,
		Important = 1,
		Verbose = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalitySource
	{
		Application = 0,
		Library = 1,
		System = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalityRelation
	{
		AssignDelegate = 0,
		Join = 1,
		Choice = 2,
		Cancel = 3,
		Error = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CausalitySynchronousWork
	{
		CompletionNotification = 0,
		ProgressNotification = 1,
		Execution = 2,
	}
}

namespace Windows.Foundation.Metadata
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApiInformation : global::System.__ComObject
	{
		public static bool IsEventPresent(
					string typeName, 
					string eventName)
		{
			bool retval;
			retval = __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsEventPresent(
								"Windows.Foundation.Metadata.ApiInformation", 
								typeName, 
								eventName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static bool __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsEventPresent(
					string typeName_1, 
					string typeName, 
					string eventName)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Foundation.Metadata.IApiInformationStatics__Impl.Stubs.IsEventPresent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName_1, 
													typeof(global::Windows.Foundation.Metadata.IApiInformationStatics).TypeHandle
												), 
								typeName, 
								eventName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static bool IsPropertyPresent(
					string typeName, 
					string propertyName)
		{
			bool retval;
			retval = __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsPropertyPresent(
								"Windows.Foundation.Metadata.ApiInformation", 
								typeName, 
								propertyName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static bool __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsPropertyPresent(
					string typeName_1, 
					string typeName, 
					string propertyName)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Foundation.Metadata.IApiInformationStatics__Impl.Stubs.IsPropertyPresent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName_1, 
													typeof(global::Windows.Foundation.Metadata.IApiInformationStatics).TypeHandle
												), 
								typeName, 
								propertyName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static bool IsEnumNamedValuePresent(
					string enumTypeName, 
					string valueName)
		{
			bool retval;
			retval = __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsEnumNamedValuePresent(
								"Windows.Foundation.Metadata.ApiInformation", 
								enumTypeName, 
								valueName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static bool __Factory_Windows_Foundation_Metadata__IApiInformationStatics_IsEnumNamedValuePresent(
					string typeName, 
					string enumTypeName, 
					string valueName)
		{
			bool __pRetVal;
			__pRetVal = global::Windows.Foundation.Metadata.IApiInformationStatics__Impl.Stubs.IsEnumNamedValuePresent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Foundation.Metadata.IApiInformationStatics).TypeHandle
												), 
								enumTypeName, 
								valueName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public ApiInformation(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApiInformationStatics
	{
		bool IsEventPresent(
					string typeName, 
					string eventName);

		bool IsPropertyPresent(
					string typeName, 
					string propertyName);

		bool IsEnumNamedValuePresent(
					string enumTypeName, 
					string valueName);
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LengthIsAttribute : global::System.Attribute
	{
		public LengthIsAttribute(int indexLengthParameter)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.LengthIsAttribute\'.  Windows Runtime attribute types are not " +
					"constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class OverloadAttribute : global::System.Attribute
	{
		public OverloadAttribute(string method)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.OverloadAttribute\'.  Windows Runtime attribute types are not " +
					"constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DefaultOverloadAttribute : global::System.Attribute
	{
		public DefaultOverloadAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DefaultOverloadAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GuidAttribute : global::System.Attribute
	{
		public GuidAttribute(
					uint a, 
					ushort b, 
					ushort c, 
					byte d, 
					byte e, 
					byte f, 
					byte g, 
					byte h, 
					byte i, 
					byte j, 
					byte k)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.GuidAttribute\'.  Windows Runtime attribute types are not cons" +
					"tructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ExclusiveToAttribute : global::System.Attribute
	{
		public ExclusiveToAttribute(global::System.Type typeName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ExclusiveToAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContractVersionAttribute : global::System.Attribute
	{
		public ContractVersionAttribute(uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}

		public ContractVersionAttribute(
					global::System.Type contract, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}

		public ContractVersionAttribute(
					string contract, 
					uint version)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ContractVersionAttribute\'.  Windows Runtime attribute types a" +
					"re not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WebHostHiddenAttribute : global::System.Attribute
	{
		public WebHostHiddenAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.WebHostHiddenAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MarshalingBehaviorAttribute : global::System.Attribute
	{
		public MarshalingBehaviorAttribute(global::Windows.Foundation.Metadata.MarshalingType behavior)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.MarshalingBehaviorAttribute\'.  Windows Runtime attribute type" +
					"s are not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StaticAttribute : global::System.Attribute
	{
		public StaticAttribute(
					global::System.Type type, 
					uint version, 
					string contractName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.StaticAttribute\'.  Windows Runtime attribute types are not co" +
					"nstructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ThreadingAttribute : global::System.Attribute
	{
		public ThreadingAttribute(global::Windows.Foundation.Metadata.ThreadingModel model)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ThreadingAttribute\'.  Windows Runtime attribute types are not" +
					" constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ComposableAttribute : global::System.Attribute
	{
		public ComposableAttribute(
					global::System.Type type, 
					global::Windows.Foundation.Metadata.CompositionType compositionType, 
					uint version, 
					string contract)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ComposableAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MuseAttribute : global::System.Attribute
	{
		public MuseAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.MuseAttribute\'.  Windows Runtime attribute types are not cons" +
					"tructable.");
		}
		public uint Version;
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AllowMultipleAttribute : global::System.Attribute
	{
		public AllowMultipleAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.AllowMultipleAttribute\'.  Windows Runtime attribute types are" +
					" not constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApiContractAttribute : global::System.Attribute
	{
		public ApiContractAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ApiContractAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RemoteAsyncAttribute : global::System.Attribute
	{
		public RemoteAsyncAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.RemoteAsyncAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=true)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ActivatableAttribute : global::System.Attribute
	{
		public ActivatableAttribute(
					uint version, 
					string type)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}

		public ActivatableAttribute(
					global::System.Type type, 
					uint version, 
					string contractName)
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.ActivatableAttribute\'.  Windows Runtime attribute types are n" +
					"ot constructable.");
		}
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DualApiPartitionAttribute : global::System.Attribute
	{
		public DualApiPartitionAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.Foundation.Metadata.DualApiPartitionAttribute\'.  Windows Runtime attribute types " +
					"are not constructable.");
		}
		public uint version;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum MarshalingType
	{
		InvalidMarshaling = 0,
		None = 1,
		Agile = 2,
		Standard = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ThreadingModel
	{
		InvalidThreading = 0,
		STA = 1,
		MTA = 2,
		Both = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CompositionType
	{
		Protected = 1,
		Public = 2,
	}
}

namespace Windows.Globalization
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.ICalendar))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Calendar : global::System.__ComObject, global::Windows.Globalization.ICalendar
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Calendar()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Globalization.Calendar");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public void ChangeCalendarSystem(string value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.ChangeCalendarSystem(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::System.DateTimeOffset GetDateTime()
		{
			global::System.DateTimeOffset __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.GetDateTime(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LastEra")]
		public int get_LastEra()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_LastEra(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Era")]
		public void put_Era(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Era(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public string EraAsString()
		{
			string __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.EraAsString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public string EraAsString(int idealLength)
		{
			string __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.EraAsString(
								this, 
								idealLength
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstYearInThisEra")]
		public int get_FirstYearInThisEra()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstYearInThisEra(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		public void put_Year(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Year(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstMonthInThisYear")]
		public int get_FirstMonthInThisYear()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstMonthInThisYear(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Month")]
		public void put_Month(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Month(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstDayInThisMonth")]
		public int get_FirstDayInThisMonth()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_FirstDayInThisMonth(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Day")]
		public int get_Day()
		{
			int __retVal = global::Windows.Globalization.ICalendar__Impl.Stubs.get_Day(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Day")]
		public void put_Day(int value)
		{
			global::Windows.Globalization.ICalendar__Impl.Stubs.put_Day(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Calendar(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.ILanguage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Language : global::System.__ComObject, global::Windows.Globalization.ILanguage
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Language(string languageTag)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Globalization__ILanguageFactory_CreateLanguage(
								"Windows.Globalization.Language", 
								languageTag
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Globalization__ILanguageFactory_CreateLanguage(
					string typeName, 
					string languageTag)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Globalization.ILanguageFactory__Impl.Stubs.CreateLanguage(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Globalization.ILanguageFactory).TypeHandle
												), 
								languageTag
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Globalization.ILanguage__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public Language(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Globalization.IGeographicRegion))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GeographicRegion : global::System.__ComObject, global::Windows.Globalization.IGeographicRegion
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public GeographicRegion(string geographicRegionCode)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Globalization__IGeographicRegionFactory_CreateGeographicRegion(
								"Windows.Globalization.GeographicRegion", 
								geographicRegionCode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Globalization__IGeographicRegionFactory_CreateGeographicRegion(
					string typeName, 
					string geographicRegionCode)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Globalization.IGeographicRegionFactory__Impl.Stubs.CreateGeographicRegion(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Globalization.IGeographicRegionFactory).TypeHandle
												), 
								geographicRegionCode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		public string get_DisplayName()
		{
			string __retVal = global::Windows.Globalization.IGeographicRegion__Impl.Stubs.get_DisplayName(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public GeographicRegion(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CalendarIdentifiers : global::System.__ComObject
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gregorian")]
		public static string get_Gregorian()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Gregorian("Windows.Globalization.CalendarIdentifiers");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Gregorian(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Gregorian(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Hijri")]
		public static string get_Hijri()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Hijri("Windows.Globalization.CalendarIdentifiers");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Hijri(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Hijri(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Japanese")]
		public static string get_Japanese()
		{
			string retval;
			retval = __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Japanese("Windows.Globalization.CalendarIdentifiers");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Globalization__ICalendarIdentifiersStatics_get_Japanese(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Globalization.ICalendarIdentifiersStatics__Impl.Stubs.get_Japanese(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Globalization.ICalendarIdentifiersStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CalendarIdentifiers(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICalendar
	{
		void ChangeCalendarSystem(string value);

		global::System.DateTimeOffset GetDateTime();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "LastEra")]
		int get_LastEra();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Era")]
		void put_Era(int value);

		string EraAsString();

		string EraAsString(int idealLength);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstYearInThisEra")]
		int get_FirstYearInThisEra();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Year")]
		void put_Year(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstMonthInThisYear")]
		int get_FirstMonthInThisYear();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Month")]
		void put_Month(int value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FirstDayInThisMonth")]
		int get_FirstDayInThisMonth();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Day")]
		int get_Day();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Day")]
		void put_Day(int value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILanguageFactory
	{
		global::System.IntPtr CreateLanguage(string languageTag);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILanguage
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGeographicRegionFactory
	{
		global::System.IntPtr CreateGeographicRegion(string geographicRegionCode);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGeographicRegion
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DisplayName")]
		string get_DisplayName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICalendarIdentifiersStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Gregorian")]
		string get_Gregorian();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Hijri")]
		string get_Hijri();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Japanese")]
		string get_Japanese();
	}
}

namespace Windows.Media.Devices
{
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class MediaDevice : global::System.__ComObject
	{
		public static string GetAudioCaptureSelector()
		{
			string retval;
			retval = __Factory_Windows_Media_Devices__IMediaDeviceStatics_GetAudioCaptureSelector("Windows.Media.Devices.MediaDevice");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Media_Devices__IMediaDeviceStatics_GetAudioCaptureSelector(string typeName)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Media.Devices.IMediaDeviceStatics__Impl.Stubs.GetAudioCaptureSelector(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.Media.Devices.IMediaDeviceStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static string GetDefaultAudioCaptureId(global::Windows.Media.Devices.AudioDeviceRole role)
		{
			string retval;
			retval = __Factory_Windows_Media_Devices__IMediaDeviceStatics_GetDefaultAudioCaptureId(
								"Windows.Media.Devices.MediaDevice", 
								role
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Media_Devices__IMediaDeviceStatics_GetDefaultAudioCaptureId(
					string typeName, 
					global::Windows.Media.Devices.AudioDeviceRole role)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Media.Devices.IMediaDeviceStatics__Impl.Stubs.GetDefaultAudioCaptureId(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Media.Devices.IMediaDeviceStatics).TypeHandle
												), 
								role
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public static string GetDefaultAudioRenderId(global::Windows.Media.Devices.AudioDeviceRole role)
		{
			string retval;
			retval = __Factory_Windows_Media_Devices__IMediaDeviceStatics_GetDefaultAudioRenderId(
								"Windows.Media.Devices.MediaDevice", 
								role
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static string __Factory_Windows_Media_Devices__IMediaDeviceStatics_GetDefaultAudioRenderId(
					string typeName, 
					global::Windows.Media.Devices.AudioDeviceRole role)
		{
			string __pRetVal;
			__pRetVal = global::Windows.Media.Devices.IMediaDeviceStatics__Impl.Stubs.GetDefaultAudioRenderId(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Media.Devices.IMediaDeviceStatics).TypeHandle
												), 
								role
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public MediaDevice(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IMediaDeviceStatics
	{
		string GetAudioCaptureSelector();

		string GetDefaultAudioCaptureId(global::Windows.Media.Devices.AudioDeviceRole role);

		string GetDefaultAudioRenderId(global::Windows.Media.Devices.AudioDeviceRole role);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AudioDeviceRole
	{
		Default = 0,
		Communications = 1,
	}
}

namespace Windows.Security.Credentials
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.Credentials.IPasswordCredential))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PasswordCredential : global::System.__ComObject, global::Windows.Security.Credentials.IPasswordCredential
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public PasswordCredential()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Security.Credentials.PasswordCredential");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserName")]
		public void put_UserName(string userName)
		{
			global::Windows.Security.Credentials.IPasswordCredential__Impl.Stubs.put_UserName(
								this, 
								userName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Password")]
		public void put_Password(string password)
		{
			global::Windows.Security.Credentials.IPasswordCredential__Impl.Stubs.put_Password(
								this, 
								password
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public PasswordCredential(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPasswordCredential
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UserName")]
		void put_UserName(string userName);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Password")]
		void put_Password(string password);
	}
}

namespace Windows.Security.Cryptography.Certificates
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.Cryptography.Certificates.ICertificate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Certificate : global::System.__ComObject, global::Windows.Security.Cryptography.Certificates.ICertificate, global::Windows.Security.Cryptography.Certificates.ICertificate2, global::Windows.Security.Cryptography.Certificates.ICertificate3
	{
		public global::Windows.Storage.Streams.IBuffer GetCertificateBlob()
		{
			global::Windows.Storage.Streams.IBuffer __retVal = global::Windows.Security.Cryptography.Certificates.ICertificate__Impl.Stubs.GetCertificateBlob(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public Certificate(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.Cryptography.Certificates.ICertificateQuery))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Security.Cryptography.Certificates.ICertificateQuery2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CertificateQuery : global::System.__ComObject, global::Windows.Security.Cryptography.Certificates.ICertificateQuery, global::Windows.Security.Cryptography.Certificates.ICertificateQuery2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public CertificateQuery()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Security.Cryptography.Certificates.CertificateQuery");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Thumbprint")]
		public void put_Thumbprint(byte[] value)
		{
			global::Windows.Security.Cryptography.Certificates.ICertificateQuery__Impl.Stubs.put_Thumbprint(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IncludeDuplicates")]
		public void put_IncludeDuplicates(bool value)
		{
			global::Windows.Security.Cryptography.Certificates.ICertificateQuery2__Impl.Stubs.put_IncludeDuplicates(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "StoreName")]
		public void put_StoreName(string value)
		{
			global::Windows.Security.Cryptography.Certificates.ICertificateQuery2__Impl.Stubs.put_StoreName(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public CertificateQuery(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CertificateStores : global::System.__ComObject
	{
		public static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> FindAllAsync(global::Windows.Security.Cryptography.Certificates.CertificateQuery query)
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> retval;
			retval = __Factory_Windows_Security_Cryptography_Certificates__ICertificateStoresStatics_FindAllAsync(
								"Windows.Security.Cryptography.Certificates.CertificateStores", 
								query
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> __Factory_Windows_Security_Cryptography_Certificates__ICertificateStoresStatics_FindAllAsync(
					string typeName, 
					global::Windows.Security.Cryptography.Certificates.CertificateQuery query)
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> __pRetVal;
			__pRetVal = global::Windows.Security.Cryptography.Certificates.ICertificateStoresStatics__Impl.Stubs.FindAllAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Security.Cryptography.Certificates.ICertificateStoresStatics).TypeHandle
												), 
								query
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CertificateStores(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificate
	{
		global::Windows.Storage.Streams.IBuffer GetCertificateBlob();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificate2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificate3
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificateQuery
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Thumbprint")]
		void put_Thumbprint(byte[] value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificateQuery2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "IncludeDuplicates")]
		void put_IncludeDuplicates(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "StoreName")]
		void put_StoreName(string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICertificateStoresStatics
	{
		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate>> FindAllAsync(global::Windows.Security.Cryptography.Certificates.CertificateQuery query);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ChainValidationResult
	{
		Success = 0,
		Untrusted = 1,
		Revoked = 2,
		Expired = 3,
		IncompleteChain = 4,
		InvalidSignature = 5,
		WrongUsage = 6,
		InvalidName = 7,
		InvalidCertificateAuthorityPolicy = 8,
		BasicConstraintsError = 9,
		UnknownCriticalExtension = 10,
		RevocationInformationMissing = 11,
		RevocationFailure = 12,
		OtherErrors = 13,
	}
}

namespace Windows.Storage
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFile))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageItem))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFile : global::System.__ComObject, global::Windows.Storage.IStorageFile, global::Windows.Storage.Streams.IInputStreamReference, global::Windows.Storage.Streams.IRandomAccessStreamReference, global::Windows.Storage.IStorageItem, global::Windows.Storage.IStorageItemProperties, global::Windows.Storage.IStorageItemProperties2, global::Windows.Storage.IStorageItem2, global::Windows.Storage.IStorageItemPropertiesWithProvider, global::Windows.Storage.IStorageFilePropertiesWithAvailability, global::Windows.Storage.IStorageFile2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileType")]
		public string get_FileType()
		{
			string __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.get_FileType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		public string get_ContentType()
		{
			string __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.get_ContentType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(global::Windows.Storage.FileAccessMode accessMode)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.OpenAsync(
								this, 
								accessMode
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.OpenTransactedWriteAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(global::Windows.Storage.IStorageFolder destinationFolder)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder, 
								desiredNewName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAsync(
								this, 
								destinationFolder, 
								desiredNewName, 
								option
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction CopyAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.CopyAndReplaceAsync(
								this, 
								fileToReplace
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAsync(global::Windows.Storage.IStorageFolder destinationFolder)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder, 
								desiredNewName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAsync(
								this, 
								destinationFolder, 
								desiredNewName, 
								option
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction MoveAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.Storage.IStorageFile__Impl.Stubs.MoveAndReplaceAsync(
								this, 
								fileToReplace
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		public string get_Path()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Path(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileFromPathAsync(string path)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> retval;
			retval = __Factory_Windows_Storage__IStorageFileStatics_GetFileFromPathAsync(
								"Windows.Storage.StorageFile", 
								path
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __Factory_Windows_Storage__IStorageFileStatics_GetFileFromPathAsync(
					string typeName, 
					string path)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __pRetVal;
			__pRetVal = global::Windows.Storage.IStorageFileStatics__Impl.Stubs.GetFileFromPathAsync(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Storage.IStorageFileStatics).TypeHandle
												), 
								path
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public StorageFile(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageStreamTransaction))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageStreamTransaction : global::System.__ComObject, global::Windows.Storage.IStorageStreamTransaction, global::System.IDisposable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		public StorageStreamTransaction(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Storage.IStorageFolder))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class StorageFolder : global::System.__ComObject, global::Windows.Storage.IStorageFolder, global::Windows.Storage.IStorageItem, global::Windows.Storage.Search.IStorageFolderQueryOperations, global::Windows.Storage.IStorageItemProperties, global::Windows.Storage.IStorageItemProperties2, global::Windows.Storage.IStorageItem2, global::Windows.Storage.IStorageFolder2, global::Windows.Storage.IStorageItemPropertiesWithProvider, global::Windows.Storage.IStorageFolder3
	{
		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFileAsync(
								this, 
								desiredName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFileAsync(
								this, 
								desiredName, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(string desiredName)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFolderAsync(
								this, 
								desiredName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.CreateFolderAsync(
								this, 
								desiredName, 
								options
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFileAsync(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFolderAsync(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> GetItemAsync(string name)
		{
			global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetItemAsync(
								this, 
								name
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFilesAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> GetFoldersAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetFoldersAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> GetItemsAsync()
		{
			global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> __retVal = global::Windows.Storage.IStorageFolder__Impl.Stubs.GetItemsAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		public string get_Path()
		{
			string __retVal = global::Windows.Storage.IStorageItem__Impl.Stubs.get_Path(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public StorageFolder(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItem
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Path")]
		string get_Path();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFileStatics
	{
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileFromPathAsync(string path);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFile : global::Windows.Storage.IStorageItem, global::Windows.Storage.Streams.IRandomAccessStreamReference, global::Windows.Storage.Streams.IInputStreamReference
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FileType")]
		string get_FileType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentType")]
		string get_ContentType();

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.Streams.IRandomAccessStream> OpenAsync(global::Windows.Storage.FileAccessMode accessMode);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageStreamTransaction> OpenTransactedWriteAsync();

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(global::Windows.Storage.IStorageFolder destinationFolder);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CopyAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option);

		global::Windows.Foundation.IAsyncAction CopyAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace);

		global::Windows.Foundation.IAsyncAction MoveAsync(global::Windows.Storage.IStorageFolder destinationFolder);

		global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName);

		global::Windows.Foundation.IAsyncAction MoveAsync(
					global::Windows.Storage.IStorageFolder destinationFolder, 
					string desiredNewName, 
					global::Windows.Storage.NameCollisionOption option);

		global::Windows.Foundation.IAsyncAction MoveAndReplaceAsync(global::Windows.Storage.IStorageFile fileToReplace);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageStreamTransaction : global::System.IDisposable
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder : global::Windows.Storage.IStorageItem
	{
		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(string desiredName);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> CreateFileAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(string desiredName);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> CreateFolderAsync(
					string desiredName, 
					global::Windows.Storage.CreationCollisionOption options);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFile> GetFileAsync(string name);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.StorageFolder> GetFolderAsync(string name);

		global::Windows.Foundation.IAsyncOperation<global::Windows.Storage.IStorageItem> GetItemAsync(string name);

		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFile>> GetFilesAsync();

		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.StorageFolder>> GetFoldersAsync();

		global::Windows.Foundation.IAsyncOperation<global::System.Collections.Generic.IReadOnlyList<global::Windows.Storage.IStorageItem>> GetItemsAsync();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemProperties
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemProperties2 : global::Windows.Storage.IStorageItemProperties
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItem2 : global::Windows.Storage.IStorageItem
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageItemPropertiesWithProvider : global::Windows.Storage.IStorageItemProperties
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolder3
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFilePropertiesWithAvailability
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFile2
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum FileAccessMode
	{
		Read = 0,
		ReadWrite = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CreationCollisionOption
	{
		GenerateUniqueName = 0,
		ReplaceExisting = 1,
		FailIfExists = 2,
		OpenIfExists = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum NameCollisionOption
	{
		GenerateUniqueName = 0,
		ReplaceExisting = 1,
		FailIfExists = 2,
	}
}

namespace Windows.Storage.Search
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IStorageFolderQueryOperations
	{
	}
}

namespace Windows.Storage.Streams
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRandomAccessStreamReference
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputStreamReference
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRandomAccessStream : global::System.IDisposable, global::Windows.Storage.Streams.IInputStream, global::Windows.Storage.Streams.IOutputStream
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Size")]
		ulong get_Size();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Size")]
		void put_Size(ulong value);

		global::Windows.Storage.Streams.IInputStream GetInputStreamAt(ulong position);

		global::Windows.Storage.Streams.IOutputStream GetOutputStreamAt(ulong position);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Position")]
		ulong get_Position();

		void Seek(ulong position);

		global::Windows.Storage.Streams.IRandomAccessStream CloneStream();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanRead")]
		bool get_CanRead();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CanWrite")]
		bool get_CanWrite();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IInputStream : global::System.IDisposable
	{
		global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, uint> ReadAsync(
					global::Windows.Storage.Streams.IBuffer buffer, 
					uint count, 
					global::Windows.Storage.Streams.InputStreamOptions options);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBuffer
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Capacity")]
		uint get_Capacity();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Length")]
		uint get_Length();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Length")]
		void put_Length(uint value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IOutputStream : global::System.IDisposable
	{
		global::Windows.Foundation.IAsyncOperationWithProgress<uint, uint> WriteAsync(global::Windows.Storage.Streams.IBuffer buffer);

		global::Windows.Foundation.IAsyncOperation<bool> FlushAsync();
	}

	[global::System.Flags]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum InputStreamOptions : uint
	{
		None = 0x0u,
		Partial = 0x1u,
		ReadAhead = 0x2u,
	}
}

namespace Windows.UI.Composition
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.ICompositionObject))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class CompositionObject : global::System.__ComObject, global::Windows.UI.Composition.ICompositionObject, global::System.IDisposable, global::Windows.UI.Composition.IAnimationObject
	{
		public virtual void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		public CompositionObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Composition.IAnimationPropertyInfo))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AnimationPropertyInfo : global::Windows.UI.Composition.CompositionObject, global::Windows.UI.Composition.IAnimationPropertyInfo
	{
		public AnimationPropertyInfo(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICompositionObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimationObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAnimationPropertyInfo
	{
	}
}

namespace Windows.UI.Core
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreDispatcher))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreDispatcher : global::System.__ComObject, global::Windows.UI.Core.ICoreDispatcher
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThreadAccess")]
		public bool get_HasThreadAccess()
		{
			bool __retVal = global::Windows.UI.Core.ICoreDispatcher__Impl.Stubs.get_HasThreadAccess(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.UI.Core.CoreDispatcherPriority priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback)
		{
			global::Windows.Foundation.IAsyncAction __retVal = global::Windows.UI.Core.ICoreDispatcher__Impl.Stubs.RunAsync(
								this, 
								priority, 
								agileCallback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public CoreDispatcher(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreWindow))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreWindow : global::System.__ComObject, global::Windows.UI.Core.ICoreWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		public global::Windows.UI.Core.CoreDispatcher get_Dispatcher()
		{
			global::Windows.UI.Core.CoreDispatcher __retVal = global::Windows.UI.Core.ICoreWindow__Impl.Stubs.get_Dispatcher(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public static global::Windows.UI.Core.CoreWindow GetForCurrentThread()
		{
			global::Windows.UI.Core.CoreWindow retval;
			retval = __Factory_Windows_UI_Core__ICoreWindowStatic_GetForCurrentThread("Windows.UI.Core.CoreWindow");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Core.CoreWindow __Factory_Windows_UI_Core__ICoreWindowStatic_GetForCurrentThread(string typeName)
		{
			global::Windows.UI.Core.CoreWindow __pRetVal;
			__pRetVal = global::Windows.UI.Core.ICoreWindowStatic__Impl.Stubs.GetForCurrentThread(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Core.ICoreWindowStatic).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public CoreWindow(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IWindowActivatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowActivatedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IWindowActivatedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public WindowActivatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.ICoreWindowEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CoreWindowEventArgs : global::System.__ComObject, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public CoreWindowEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IWindowSizeChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowSizeChangedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IWindowSizeChangedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public WindowSizeChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Core.IVisibilityChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class VisibilityChangedEventArgs : global::System.__ComObject, global::Windows.UI.Core.IVisibilityChangedEventArgs, global::Windows.UI.Core.ICoreWindowEventArgs
	{
		public VisibilityChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreDispatcher
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "HasThreadAccess")]
		bool get_HasThreadAccess();

		global::Windows.Foundation.IAsyncAction RunAsync(
					global::Windows.UI.Core.CoreDispatcherPriority priority, 
					global::Windows.UI.Core.DispatchedHandler agileCallback);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DispatchedHandler();

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindowStatic
	{
		global::Windows.UI.Core.CoreWindow GetForCurrentThread();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Dispatcher")]
		global::Windows.UI.Core.CoreDispatcher get_Dispatcher();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowActivatedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowSizeChangedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IVisibilityChangedEventArgs : global::Windows.UI.Core.ICoreWindowEventArgs
	{
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum CoreDispatcherPriority
	{
		Idle = -2,
		Low = -1,
		Normal = 0,
		High = 1,
	}
}

namespace Windows.UI.Xaml
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyObject))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DependencyObject : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyObject, global::Windows.UI.Xaml.IDependencyObject2
	{
		public DependencyObject(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElement8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUIElementOverrides9))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class UIElement : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IUIElement, global::Windows.UI.Xaml.IUIElement2, global::Windows.UI.Xaml.IUIElement3, global::Windows.UI.Xaml.IUIElement4, global::Windows.UI.Xaml.IUIElement5, global::Windows.UI.Xaml.IUIElement7, global::Windows.UI.Xaml.IUIElement8, global::Windows.UI.Xaml.IUIElement9, global::Windows.UI.Xaml.IUIElementOverrides, global::Windows.UI.Xaml.IUIElementOverrides7, global::Windows.UI.Xaml.IUIElementOverrides8, global::Windows.UI.Xaml.IUIElementOverrides9, global::Windows.UI.Composition.IAnimationObject
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyUp")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_KeyUp(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyUp")]
		public virtual void remove_KeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_KeyUp(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyDown")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_KeyDown(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyDown")]
		public virtual void remove_KeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_KeyDown(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_GotFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		public virtual void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_GotFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_LostFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		public virtual void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_LostFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragEnter")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragEnter(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragEnter(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragEnter")]
		public virtual void remove_DragEnter(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragEnter(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragLeave")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragLeave(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragLeave(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragLeave")]
		public virtual void remove_DragLeave(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragLeave(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragOver")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragOver(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DragOver(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragOver")]
		public virtual void remove_DragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DragOver(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Drop")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Drop(global::Windows.UI.Xaml.DragEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Drop(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Drop")]
		public virtual void remove_Drop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Drop(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerPressed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerPressed(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerPressed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerPressed")]
		public virtual void remove_PointerPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerPressed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerMoved")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerMoved(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerMoved(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerMoved")]
		public virtual void remove_PointerMoved(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerMoved(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerReleased")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerReleased(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerReleased(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerReleased")]
		public virtual void remove_PointerReleased(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerReleased(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerEntered")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerEntered(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerEntered(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerEntered")]
		public virtual void remove_PointerEntered(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerEntered(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerExited")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerExited(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerExited(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerExited")]
		public virtual void remove_PointerExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerExited(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCaptureLost")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCaptureLost(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerCaptureLost(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCaptureLost")]
		public virtual void remove_PointerCaptureLost(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerCaptureLost(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCanceled")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCanceled(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerCanceled(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCanceled")]
		public virtual void remove_PointerCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerCanceled(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerWheelChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerWheelChanged(global::Windows.UI.Xaml.Input.PointerEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_PointerWheelChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerWheelChanged")]
		public virtual void remove_PointerWheelChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_PointerWheelChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Tapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Tapped(global::Windows.UI.Xaml.Input.TappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Tapped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Tapped")]
		public virtual void remove_Tapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Tapped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DoubleTapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_DoubleTapped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DoubleTapped")]
		public virtual void remove_DoubleTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_DoubleTapped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Holding")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Holding(global::Windows.UI.Xaml.Input.HoldingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_Holding(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Holding")]
		public virtual void remove_Holding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_Holding(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RightTapped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RightTapped(global::Windows.UI.Xaml.Input.RightTappedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_RightTapped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RightTapped")]
		public virtual void remove_RightTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_RightTapped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarting")]
		public virtual void remove_ManipulationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationInertiaStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationInertiaStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationInertiaStarting")]
		public virtual void remove_ManipulationInertiaStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationInertiaStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationStarted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarted")]
		public virtual void remove_ManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationStarted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationDelta")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationDelta(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationDelta")]
		public virtual void remove_ManipulationDelta(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationDelta(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement__Impl.Stubs.add_ManipulationCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationCompleted")]
		public virtual void remove_ManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement__Impl.Stubs.remove_ManipulationCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragStarting")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragStarting(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.add_DragStarting(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragStarting")]
		public virtual void remove_DragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.remove_DragStarting(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropCompleted")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.add_DropCompleted(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropCompleted")]
		public virtual void remove_DropCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement3__Impl.Stubs.remove_DropCompleted(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ContextRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_ContextRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextRequested")]
		public virtual void remove_ContextRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_ContextRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextCanceled")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextCanceled(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.RoutedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_ContextCanceled(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextCanceled")]
		public virtual void remove_ContextCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_ContextCanceled(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyDisplayRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayRequested")]
		public virtual void remove_AccessKeyDisplayRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyDisplayRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayDismissed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayDismissed(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyDisplayDismissed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayDismissed")]
		public virtual void remove_AccessKeyDisplayDismissed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyDisplayDismissed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyInvoked")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.add_AccessKeyInvoked(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyInvoked")]
		public virtual void remove_AccessKeyInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement4__Impl.Stubs.remove_AccessKeyInvoked(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GettingFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GettingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.GettingFocusEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_GettingFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GettingFocus")]
		public virtual void remove_GettingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_GettingFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LosingFocus")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LosingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.LosingFocusEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_LosingFocus(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LosingFocus")]
		public virtual void remove_LosingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_LosingFocus(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NoFocusCandidateFound")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NoFocusCandidateFound(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.add_NoFocusCandidateFound(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NoFocusCandidateFound")]
		public virtual void remove_NoFocusCandidateFound(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement5__Impl.Stubs.remove_NoFocusCandidateFound(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CharacterReceived")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CharacterReceived(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_CharacterReceived(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CharacterReceived")]
		public virtual void remove_CharacterReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_CharacterReceived(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessKeyboardAccelerators")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessKeyboardAccelerators(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_ProcessKeyboardAccelerators(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessKeyboardAccelerators")]
		public virtual void remove_ProcessKeyboardAccelerators(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_ProcessKeyboardAccelerators(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyDown")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_PreviewKeyDown(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyDown")]
		public virtual void remove_PreviewKeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_PreviewKeyDown(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyUp")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.add_PreviewKeyUp(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyUp")]
		public virtual void remove_PreviewKeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement7__Impl.Stubs.remove_PreviewKeyUp(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BringIntoViewRequested")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BringIntoViewRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IUIElement8__Impl.Stubs.add_BringIntoViewRequested(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BringIntoViewRequested")]
		public virtual void remove_BringIntoViewRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IUIElement8__Impl.Stubs.remove_BringIntoViewRequested(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.IUIElementOverrides.OnCreateAutomationPeer()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.OnCreateAutomationPeer();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer OnCreateAutomationPeer()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.OnCreateAutomationPeer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren()
		{
			this.OnDisconnectVisualChildren();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDisconnectVisualChildren()
		{
			global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.OnDisconnectVisualChildren(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> global::Windows.UI.Xaml.IUIElementOverrides.FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect)
		{
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __retVal_1 = this.FindSubElementsForTouchTargeting(
								point, 
								boundingRect
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect)
		{
			global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> __retVal = global::Windows.UI.Xaml.IUIElementOverrides__Impl.Stubs.FindSubElementsForTouchTargeting(
								this, 
								point, 
								boundingRect
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> global::Windows.UI.Xaml.IUIElementOverrides7.GetChildrenInTabFocusOrder()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> __retVal_1 = this.GetChildrenInTabFocusOrder();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> GetChildrenInTabFocusOrder()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> __retVal = global::Windows.UI.Xaml.IUIElementOverrides7__Impl.Stubs.GetChildrenInTabFocusOrder(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IUIElementOverrides7.OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			this.OnProcessKeyboardAccelerators(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args)
		{
			global::Windows.UI.Xaml.IUIElementOverrides7__Impl.Stubs.OnProcessKeyboardAccelerators(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides8.OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args)
		{
			this.OnKeyboardAcceleratorInvoked(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args)
		{
			global::Windows.UI.Xaml.IUIElementOverrides8__Impl.Stubs.OnKeyboardAcceleratorInvoked(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides8.OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e)
		{
			this.OnBringIntoViewRequested(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e)
		{
			global::Windows.UI.Xaml.IUIElementOverrides8__Impl.Stubs.OnBringIntoViewRequested(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IUIElementOverrides9.PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			this.PopulatePropertyInfoOverride(
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			global::Windows.UI.Xaml.IUIElementOverrides9__Impl.Stubs.PopulatePropertyInfoOverride(
								this, 
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public UIElement(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class RoutedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IRoutedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public RoutedEventArgs()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IRoutedEventArgsFactory_CreateInstance("Windows.UI.Xaml.RoutedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IRoutedEventArgsFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.RoutedEventArgs).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IRoutedEventArgsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IRoutedEventArgsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IRoutedEventArgsFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IRoutedEventArgsFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public RoutedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDragEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDragEventArgs
	{
		public DragEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDragStartingEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DragStartingEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDragStartingEventArgs
	{
		public DragStartingEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDropCompletedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DropCompletedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IDropCompletedEventArgs
	{
		public DropCompletedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IBringIntoViewRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BringIntoViewRequestedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.IBringIntoViewRequestedEventArgs
	{
		public BringIntoViewRequestedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElement7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementProtected7))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkElementOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FrameworkElement : global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.IFrameworkElement, global::Windows.UI.Xaml.IFrameworkElement2, global::Windows.UI.Xaml.IFrameworkElement3, global::Windows.UI.Xaml.IFrameworkElement6, global::Windows.UI.Xaml.IFrameworkElement7, global::Windows.UI.Xaml.IFrameworkElementProtected7, global::Windows.UI.Xaml.IFrameworkElementOverrides, global::Windows.UI.Xaml.IFrameworkElementOverrides2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalAlignment")]
		public virtual global::Windows.UI.Xaml.VerticalAlignment get_VerticalAlignment()
		{
			global::Windows.UI.Xaml.VerticalAlignment __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_VerticalAlignment(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalAlignment")]
		public virtual void put_VerticalAlignment(global::Windows.UI.Xaml.VerticalAlignment value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_VerticalAlignment(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Margin")]
		public virtual global::Windows.UI.Xaml.Thickness get_Margin()
		{
			global::Windows.UI.Xaml.Thickness __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.get_Margin(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Margin")]
		public virtual void put_Margin(global::Windows.UI.Xaml.Thickness value)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.put_Margin(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loaded")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loaded(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_Loaded(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loaded")]
		public virtual void remove_Loaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_Loaded(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unloaded")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unloaded(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_Unloaded(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unloaded")]
		public virtual void remove_Unloaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_Unloaded(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.SizeChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_SizeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		public virtual void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_SizeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LayoutUpdated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LayoutUpdated(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.add_LayoutUpdated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LayoutUpdated")]
		public virtual void remove_LayoutUpdated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement__Impl.Stubs.remove_LayoutUpdated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DataContextChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DataContextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.add_DataContextChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DataContextChanged")]
		public virtual void remove_DataContextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement2__Impl.Stubs.remove_DataContextChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loading")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loading(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement3__Impl.Stubs.add_Loading(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loading")]
		public virtual void remove_Loading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement3__Impl.Stubs.remove_Loading(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActualThemeChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActualThemeChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement6__Impl.Stubs.add_ActualThemeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActualThemeChanged")]
		public virtual void remove_ActualThemeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement6__Impl.Stubs.remove_ActualThemeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EffectiveViewportChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EffectiveViewportChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.EffectiveViewportChangedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IFrameworkElement7__Impl.Stubs.add_EffectiveViewportChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EffectiveViewportChanged")]
		public virtual void remove_EffectiveViewportChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IFrameworkElement7__Impl.Stubs.remove_EffectiveViewportChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IFrameworkElementProtected7.InvalidateViewport()
		{
			this.InvalidateViewport();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void InvalidateViewport()
		{
			global::Windows.UI.Xaml.IFrameworkElementProtected7__Impl.Stubs.InvalidateViewport(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.Foundation.Size global::Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride(global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.MeasureOverride(availableSize);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size MeasureOverride(global::Windows.Foundation.Size availableSize)
		{
			global::Windows.Foundation.Size __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.MeasureOverride(
								this, 
								availableSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Size global::Windows.UI.Xaml.IFrameworkElementOverrides.ArrangeOverride(global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal_1 = this.ArrangeOverride(finalSize);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Size ArrangeOverride(global::Windows.Foundation.Size finalSize)
		{
			global::Windows.Foundation.Size __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.ArrangeOverride(
								this, 
								finalSize
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.IFrameworkElementOverrides.OnApplyTemplate()
		{
			this.OnApplyTemplate();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnApplyTemplate()
		{
			global::Windows.UI.Xaml.IFrameworkElementOverrides__Impl.Stubs.OnApplyTemplate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		bool global::Windows.UI.Xaml.IFrameworkElementOverrides2.GoToElementStateCore(
					string stateName, 
					bool useTransitions)
		{
			bool __retVal_1 = this.GoToElementStateCore(
								stateName, 
								useTransitions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool GoToElementStateCore(
					string stateName, 
					bool useTransitions)
		{
			bool __retVal = global::Windows.UI.Xaml.IFrameworkElementOverrides2__Impl.Stubs.GoToElementStateCore(
								this, 
								stateName, 
								useTransitions
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public FrameworkElement(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.ISizeChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class SizeChangedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.ISizeChangedEventArgs
	{
		public SizeChangedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDataContextChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DataContextChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IDataContextChangedEventArgs
	{
		public DataContextChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IEffectiveViewportChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class EffectiveViewportChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IEffectiveViewportChangedEventArgs
	{
		public EffectiveViewportChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DependencyPropertyChangedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IDependencyPropertyChangedEventArgs
	{
		public DependencyPropertyChangedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IFrameworkTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class FrameworkTemplate : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.IFrameworkTemplate
	{
		public FrameworkTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDataTemplate))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DataTemplate : global::Windows.UI.Xaml.FrameworkTemplate, global::Windows.UI.Xaml.IDataTemplate
	{
		public DataTemplate(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplication))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplication2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Application : global::System.__ComObject, global::Windows.UI.Xaml.IApplication, global::Windows.UI.Xaml.IApplication2, global::Windows.UI.Xaml.IApplicationOverrides, global::Windows.UI.Xaml.IApplicationOverrides2
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Application()
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml__IApplicationFactory_CreateInstance("Windows.UI.Xaml.Application");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml__IApplicationFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Application).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.IApplicationFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IApplicationFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.IApplicationFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.IApplicationFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DebugSettings")]
		public virtual global::Windows.UI.Xaml.DebugSettings get_DebugSettings()
		{
			global::Windows.UI.Xaml.DebugSettings __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.get_DebugSettings(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledException")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledException(global::Windows.UI.Xaml.UnhandledExceptionEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_UnhandledException(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledException")]
		public virtual void remove_UnhandledException(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_UnhandledException(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::Windows.UI.Xaml.SuspendingEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_Suspending(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		public virtual void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_Suspending(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication__Impl.Stubs.add_Resuming(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		public virtual void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication__Impl.Stubs.remove_Resuming(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::Windows.UI.Xaml.LeavingBackgroundEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication2__Impl.Stubs.add_LeavingBackground(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		public virtual void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication2__Impl.Stubs.remove_LeavingBackground(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::Windows.UI.Xaml.EnteredBackgroundEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IApplication2__Impl.Stubs.add_EnteredBackground(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		public virtual void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IApplication2__Impl.Stubs.remove_EnteredBackground(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args)
		{
			this.OnActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args)
		{
			this.OnLaunched(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnLaunched(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args)
		{
			this.OnFileActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args)
		{
			this.OnSearchActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnSearchActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args)
		{
			this.OnShareTargetActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnShareTargetActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args)
		{
			this.OnFileOpenPickerActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileOpenPickerActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args)
		{
			this.OnFileSavePickerActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnFileSavePickerActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args)
		{
			this.OnCachedFileUpdaterActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnCachedFileUpdaterActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides.OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args)
		{
			this.OnWindowCreated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides__Impl.Stubs.OnWindowCreated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.IApplicationOverrides2.OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args)
		{
			this.OnBackgroundActivated(args);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args)
		{
			global::Windows.UI.Xaml.IApplicationOverrides2__Impl.Stubs.OnBackgroundActivated(
								this, 
								args
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void Start(global::Windows.UI.Xaml.ApplicationInitializationCallback callback)
		{
			__Factory_Windows_UI_Xaml__IApplicationStatics_Start(
								"Windows.UI.Xaml.Application", 
								callback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml__IApplicationStatics_Start(
					string typeName, 
					global::Windows.UI.Xaml.ApplicationInitializationCallback callback)
		{
			global::Windows.UI.Xaml.IApplicationStatics__Impl.Stubs.Start(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IApplicationStatics).TypeHandle
												), 
								callback
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public static void LoadComponent(
					object component, 
					global::System.Uri resourceLocator, 
					global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation)
		{
			__Factory_Windows_UI_Xaml__IApplicationStatics_LoadComponent(
								"Windows.UI.Xaml.Application", 
								component, 
								resourceLocator, 
								componentResourceLocation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		static void __Factory_Windows_UI_Xaml__IApplicationStatics_LoadComponent(
					string typeName, 
					object component, 
					global::System.Uri resourceLocator, 
					global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation)
		{
			global::Windows.UI.Xaml.IApplicationStatics__Impl.Stubs.LoadComponent(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.UI.Xaml.IApplicationStatics).TypeHandle
												), 
								component, 
								resourceLocator, 
								componentResourceLocation
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Application(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IApplicationInitializationCallbackParams))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ApplicationInitializationCallbackParams : global::System.__ComObject, global::Windows.UI.Xaml.IApplicationInitializationCallbackParams
	{
		public ApplicationInitializationCallbackParams(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IDebugSettings))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DebugSettings : global::System.__ComObject, global::Windows.UI.Xaml.IDebugSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BindingFailed")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BindingFailed(global::Windows.UI.Xaml.BindingFailedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IDebugSettings__Impl.Stubs.add_BindingFailed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BindingFailed")]
		public void remove_BindingFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IDebugSettings__Impl.Stubs.remove_BindingFailed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public DebugSettings(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IBindingFailedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class BindingFailedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IBindingFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Message")]
		public string get_Message()
		{
			string __retVal = global::Windows.UI.Xaml.IBindingFailedEventArgs__Impl.Stubs.get_Message(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public BindingFailedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IUnhandledExceptionEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class UnhandledExceptionEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IUnhandledExceptionEventArgs
	{
		public UnhandledExceptionEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IWindowCreatedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class WindowCreatedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.IWindowCreatedEventArgs
	{
		public WindowCreatedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.IWindow))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class Window : global::System.__ComObject, global::Windows.UI.Xaml.IWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public global::Windows.UI.Xaml.UIElement get_Content()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public void put_Content(global::Windows.UI.Xaml.UIElement value)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.UI.Xaml.WindowActivatedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_Activated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		public void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_Activated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.UI.Xaml.WindowClosedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_Closed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		public void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_Closed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.WindowSizeChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_SizeChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		public void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_SizeChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VisibilityChanged")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VisibilityChanged(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.IWindow__Impl.Stubs.add_VisibilityChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VisibilityChanged")]
		public void remove_VisibilityChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.remove_VisibilityChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public void Activate()
		{
			global::Windows.UI.Xaml.IWindow__Impl.Stubs.Activate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		public static global::Windows.UI.Xaml.Window get_Current()
		{
			global::Windows.UI.Xaml.Window retval;
			retval = __Factory_Windows_UI_Xaml__IWindowStatics_get_Current("Windows.UI.Xaml.Window");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return retval;
		}

		static global::Windows.UI.Xaml.Window __Factory_Windows_UI_Xaml__IWindowStatics_get_Current(string typeName)
		{
			global::Windows.UI.Xaml.Window __pRetVal;
			__pRetVal = global::Windows.UI.Xaml.IWindowStatics__Impl.Stubs.get_Current(global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
									typeName, 
									typeof(global::Windows.UI.Xaml.IWindowStatics).TypeHandle
								));
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __pRetVal;
		}

		public Window(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObject
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyObject2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyUp")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyUp")]
		void remove_KeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "KeyDown")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_KeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "KeyDown")]
		void remove_KeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GotFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GotFocus(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GotFocus")]
		void remove_GotFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LostFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LostFocus(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LostFocus")]
		void remove_LostFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragEnter")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragEnter(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragEnter")]
		void remove_DragEnter(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragLeave")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragLeave(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragLeave")]
		void remove_DragLeave(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragOver")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragOver(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragOver")]
		void remove_DragOver(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Drop")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Drop(global::Windows.UI.Xaml.DragEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Drop")]
		void remove_Drop(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerPressed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerPressed(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerPressed")]
		void remove_PointerPressed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerMoved")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerMoved(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerMoved")]
		void remove_PointerMoved(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerReleased")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerReleased(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerReleased")]
		void remove_PointerReleased(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerEntered")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerEntered(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerEntered")]
		void remove_PointerEntered(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerExited")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerExited(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerExited")]
		void remove_PointerExited(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCaptureLost")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCaptureLost(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCaptureLost")]
		void remove_PointerCaptureLost(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerCanceled")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerCanceled(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerCanceled")]
		void remove_PointerCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PointerWheelChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PointerWheelChanged(global::Windows.UI.Xaml.Input.PointerEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PointerWheelChanged")]
		void remove_PointerWheelChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Tapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Tapped(global::Windows.UI.Xaml.Input.TappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Tapped")]
		void remove_Tapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DoubleTapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DoubleTapped")]
		void remove_DoubleTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Holding")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Holding(global::Windows.UI.Xaml.Input.HoldingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Holding")]
		void remove_Holding(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "RightTapped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_RightTapped(global::Windows.UI.Xaml.Input.RightTappedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "RightTapped")]
		void remove_RightTapped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarting")]
		void remove_ManipulationStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationInertiaStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationInertiaStarting")]
		void remove_ManipulationInertiaStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationStarted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationStarted")]
		void remove_ManipulationStarted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationDelta")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationDelta")]
		void remove_ManipulationDelta(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ManipulationCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ManipulationCompleted")]
		void remove_ManipulationCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRoutedEventArgsFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RoutedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.RoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DragEventHandler(
				object sender, 
				global::Windows.UI.Xaml.DragEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DragStarting")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DragStarting(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DragStartingEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DragStarting")]
		void remove_DragStarting(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DropCompleted")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DropCompleted(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.DropCompletedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DropCompleted")]
		void remove_DropCompleted(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDragStartingEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDropCompletedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ContextRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextRequested")]
		void remove_ContextRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ContextCanceled")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ContextCanceled(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.RoutedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ContextCanceled")]
		void remove_ContextCanceled(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayRequested")]
		void remove_AccessKeyDisplayRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyDisplayDismissed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyDisplayDismissed(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyDisplayDismissed")]
		void remove_AccessKeyDisplayDismissed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "AccessKeyInvoked")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_AccessKeyInvoked(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "AccessKeyInvoked")]
		void remove_AccessKeyInvoked(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement5
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "GettingFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_GettingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.GettingFocusEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "GettingFocus")]
		void remove_GettingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LosingFocus")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LosingFocus(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.LosingFocusEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LosingFocus")]
		void remove_LosingFocus(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NoFocusCandidateFound")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NoFocusCandidateFound(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.NoFocusCandidateFoundEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NoFocusCandidateFound")]
		void remove_NoFocusCandidateFound(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "CharacterReceived")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_CharacterReceived(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "CharacterReceived")]
		void remove_CharacterReceived(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ProcessKeyboardAccelerators")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ProcessKeyboardAccelerators(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ProcessKeyboardAccelerators")]
		void remove_ProcessKeyboardAccelerators(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyDown")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyDown(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyDown")]
		void remove_PreviewKeyDown(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "PreviewKeyUp")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_PreviewKeyUp(global::Windows.UI.Xaml.Input.KeyEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "PreviewKeyUp")]
		void remove_PreviewKeyUp(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement8
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BringIntoViewRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BringIntoViewRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.UIElement, global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BringIntoViewRequested")]
		void remove_BringIntoViewRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBringIntoViewRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElement9
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer OnCreateAutomationPeer();

		void OnDisconnectVisualChildren();

		global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.IEnumerable<global::Windows.Foundation.Point>> FindSubElementsForTouchTargeting(
					global::Windows.Foundation.Point point, 
					global::Windows.Foundation.Rect boundingRect);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides7
	{
		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.DependencyObject> GetChildrenInTabFocusOrder();

		void OnProcessKeyboardAccelerators(global::Windows.UI.Xaml.Input.ProcessKeyboardAcceleratorEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides8
	{
		void OnKeyboardAcceleratorInvoked(global::Windows.UI.Xaml.Input.KeyboardAcceleratorInvokedEventArgs args);

		void OnBringIntoViewRequested(global::Windows.UI.Xaml.BringIntoViewRequestedEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUIElementOverrides9
	{
		void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "VerticalAlignment")]
		global::Windows.UI.Xaml.VerticalAlignment get_VerticalAlignment();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "VerticalAlignment")]
		void put_VerticalAlignment(global::Windows.UI.Xaml.VerticalAlignment value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Margin")]
		global::Windows.UI.Xaml.Thickness get_Margin();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Margin")]
		void put_Margin(global::Windows.UI.Xaml.Thickness value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loaded(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loaded")]
		void remove_Loaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Unloaded")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Unloaded(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Unloaded")]
		void remove_Unloaded(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.SizeChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LayoutUpdated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LayoutUpdated(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LayoutUpdated")]
		void remove_LayoutUpdated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SizeChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.SizeChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ISizeChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "DataContextChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_DataContextChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.DataContextChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "DataContextChanged")]
		void remove_DataContextChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataContextChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement3
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Loading")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Loading(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Loading")]
		void remove_Loading(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ActualThemeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ActualThemeChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ActualThemeChanged")]
		void remove_ActualThemeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElement7
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EffectiveViewportChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EffectiveViewportChanged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.EffectiveViewportChangedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EffectiveViewportChanged")]
		void remove_EffectiveViewportChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IEffectiveViewportChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementProtected7
	{
		void InvalidateViewport();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementOverrides
	{
		global::Windows.Foundation.Size MeasureOverride(global::Windows.Foundation.Size availableSize);

		global::Windows.Foundation.Size ArrangeOverride(global::Windows.Foundation.Size finalSize);

		void OnApplyTemplate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkElementOverrides2
	{
		bool GoToElementStateCore(
					string stateName, 
					bool useTransitions);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DependencyPropertyChangedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.DependencyPropertyChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDependencyPropertyChangedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameworkTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplate
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationStatics
	{
		void Start(global::Windows.UI.Xaml.ApplicationInitializationCallback callback);

		void LoadComponent(
					object component, 
					global::System.Uri resourceLocator, 
					global::Windows.UI.Xaml.Controls.Primitives.ComponentResourceLocation componentResourceLocation);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ApplicationInitializationCallback(global::Windows.UI.Xaml.ApplicationInitializationCallbackParams p);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationInitializationCallbackParams
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplication
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DebugSettings")]
		global::Windows.UI.Xaml.DebugSettings get_DebugSettings();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "UnhandledException")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_UnhandledException(global::Windows.UI.Xaml.UnhandledExceptionEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "UnhandledException")]
		void remove_UnhandledException(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Suspending")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Suspending(global::Windows.UI.Xaml.SuspendingEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Suspending")]
		void remove_Suspending(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Resuming")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Resuming(global::System.EventHandler<object> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Resuming")]
		void remove_Resuming(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDebugSettings
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "BindingFailed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_BindingFailed(global::Windows.UI.Xaml.BindingFailedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "BindingFailed")]
		void remove_BindingFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void BindingFailedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.BindingFailedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBindingFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Message")]
		string get_Message();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void UnhandledExceptionEventHandler(
				object sender, 
				global::Windows.UI.Xaml.UnhandledExceptionEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUnhandledExceptionEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void SuspendingEventHandler(
				object sender, 
				global::Windows.ApplicationModel.SuspendingEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplication2
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "LeavingBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_LeavingBackground(global::Windows.UI.Xaml.LeavingBackgroundEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "LeavingBackground")]
		void remove_LeavingBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "EnteredBackground")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_EnteredBackground(global::Windows.UI.Xaml.EnteredBackgroundEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "EnteredBackground")]
		void remove_EnteredBackground(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void LeavingBackgroundEventHandler(
				object sender, 
				global::Windows.ApplicationModel.LeavingBackgroundEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void EnteredBackgroundEventHandler(
				object sender, 
				global::Windows.ApplicationModel.EnteredBackgroundEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationOverrides
	{
		void OnActivated(global::Windows.ApplicationModel.Activation.IActivatedEventArgs args);

		void OnLaunched(global::Windows.ApplicationModel.Activation.LaunchActivatedEventArgs args);

		void OnFileActivated(global::Windows.ApplicationModel.Activation.FileActivatedEventArgs args);

		void OnSearchActivated(global::Windows.ApplicationModel.Activation.SearchActivatedEventArgs args);

		void OnShareTargetActivated(global::Windows.ApplicationModel.Activation.ShareTargetActivatedEventArgs args);

		void OnFileOpenPickerActivated(global::Windows.ApplicationModel.Activation.FileOpenPickerActivatedEventArgs args);

		void OnFileSavePickerActivated(global::Windows.ApplicationModel.Activation.FileSavePickerActivatedEventArgs args);

		void OnCachedFileUpdaterActivated(global::Windows.ApplicationModel.Activation.CachedFileUpdaterActivatedEventArgs args);

		void OnWindowCreated(global::Windows.UI.Xaml.WindowCreatedEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowCreatedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IApplicationOverrides2
	{
		void OnBackgroundActivated(global::Windows.ApplicationModel.Activation.BackgroundActivatedEventArgs args);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindowStatics
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Current")]
		global::Windows.UI.Xaml.Window get_Current();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IWindow
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.UI.Xaml.UIElement get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.UI.Xaml.UIElement value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Activated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Activated(global::Windows.UI.Xaml.WindowActivatedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Activated")]
		void remove_Activated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Closed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Closed(global::Windows.UI.Xaml.WindowClosedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Closed")]
		void remove_Closed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "SizeChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_SizeChanged(global::Windows.UI.Xaml.WindowSizeChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "SizeChanged")]
		void remove_SizeChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "VisibilityChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_VisibilityChanged(global::Windows.UI.Xaml.WindowVisibilityChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "VisibilityChanged")]
		void remove_VisibilityChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		void Activate();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowActivatedEventHandler(
				object sender, 
				global::Windows.UI.Core.WindowActivatedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowClosedEventHandler(
				object sender, 
				global::Windows.UI.Core.CoreWindowEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowSizeChangedEventHandler(
				object sender, 
				global::Windows.UI.Core.WindowSizeChangedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void WindowVisibilityChangedEventHandler(
				object sender, 
				global::Windows.UI.Core.VisibilityChangedEventArgs e);

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum VerticalAlignment
	{
		Top = 0,
		Center = 1,
		Bottom = 2,
		Stretch = 3,
	}
}

namespace Windows.UI.Xaml.Automation.Peers
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class AutomationPeer : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer2, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer3, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer4, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer5, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer6, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer7, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer8, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeer9, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.PeerFromProvider(provider);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Stubs.PeerFromProvider(
								this, 
								provider
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple __retVal_1 = this.ProviderFromPeer(peer);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer)
		{
			global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected__Impl.Stubs.ProviderFromPeer(
								this, 
								peer
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
		{
			object __retVal_1 = this.GetPatternCore(patternInterface);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetPatternCore(
								this, 
								patternInterface
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAcceleratorKeyCore()
		{
			string __retVal_1 = this.GetAcceleratorKeyCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetAcceleratorKeyCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAcceleratorKeyCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAccessKeyCore()
		{
			string __retVal_1 = this.GetAccessKeyCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetAccessKeyCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAccessKeyCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationControlType global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationControlTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __retVal_1 = this.GetAutomationControlTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationControlType __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAutomationControlTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetAutomationIdCore()
		{
			string __retVal_1 = this.GetAutomationIdCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetAutomationIdCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetAutomationIdCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Rect global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetBoundingRectangleCore()
		{
			global::Windows.Foundation.Rect __retVal_1 = this.GetBoundingRectangleCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Rect GetBoundingRectangleCore()
		{
			global::Windows.Foundation.Rect __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetBoundingRectangleCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetChildrenCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetChildrenCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetChildrenCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetChildrenCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClassNameCore()
		{
			string __retVal_1 = this.GetClassNameCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetClassNameCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetClassNameCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.Foundation.Point global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClickablePointCore()
		{
			global::Windows.Foundation.Point __retVal_1 = this.GetClickablePointCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.Foundation.Point GetClickablePointCore()
		{
			global::Windows.Foundation.Point __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetClickablePointCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetHelpTextCore()
		{
			string __retVal_1 = this.GetHelpTextCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetHelpTextCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetHelpTextCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetItemStatusCore()
		{
			string __retVal_1 = this.GetItemStatusCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetItemStatusCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetItemStatusCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetItemTypeCore()
		{
			string __retVal_1 = this.GetItemTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetItemTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetItemTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLabeledByCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.GetLabeledByCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLabeledByCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLocalizedControlTypeCore()
		{
			string __retVal_1 = this.GetLocalizedControlTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetLocalizedControlTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLocalizedControlTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetNameCore()
		{
			string __retVal_1 = this.GetNameCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetNameCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetNameCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetOrientationCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation __retVal_1 = this.GetOrientationCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetOrientationCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.HasKeyboardFocusCore()
		{
			bool __retVal_1 = this.HasKeyboardFocusCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool HasKeyboardFocusCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.HasKeyboardFocusCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsContentElementCore()
		{
			bool __retVal_1 = this.IsContentElementCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsContentElementCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsContentElementCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsControlElementCore()
		{
			bool __retVal_1 = this.IsControlElementCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsControlElementCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsControlElementCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsEnabledCore()
		{
			bool __retVal_1 = this.IsEnabledCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsEnabledCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsEnabledCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsKeyboardFocusableCore()
		{
			bool __retVal_1 = this.IsKeyboardFocusableCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsKeyboardFocusableCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsKeyboardFocusableCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsOffscreenCore()
		{
			bool __retVal_1 = this.IsOffscreenCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsOffscreenCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsOffscreenCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsPasswordCore()
		{
			bool __retVal_1 = this.IsPasswordCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsPasswordCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsPasswordCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.IsRequiredForFormCore()
		{
			bool __retVal_1 = this.IsRequiredForFormCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsRequiredForFormCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.IsRequiredForFormCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.SetFocusCore()
		{
			this.SetFocusCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void SetFocusCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.SetFocusCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPeerFromPointCore(global::Windows.Foundation.Point point)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal_1 = this.GetPeerFromPointCore(point);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point)
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationPeer __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetPeerFromPointCore(
								this, 
								point
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetLiveSettingCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting __retVal_1 = this.GetLiveSettingCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides__Impl.Stubs.GetLiveSettingCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2.ShowContextMenuCore()
		{
			this.ShowContextMenuCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void ShowContextMenuCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Stubs.ShowContextMenuCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2.GetControlledPeersCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetControlledPeersCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeersCore()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides2__Impl.Stubs.GetControlledPeersCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
		{
			object __retVal_1 = this.NavigateCore(direction);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.NavigateCore(
								this, 
								direction
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates)
		{
			object __retVal_1 = this.GetElementFromPointCore(pointInWindowCoordinates);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates)
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetElementFromPointCore(
								this, 
								pointInWindowCoordinates
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		object global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetFocusedElementCore()
		{
			object __retVal_1 = this.GetFocusedElementCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual object GetFocusedElementCore()
		{
			object __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetFocusedElementCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetAnnotationsCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __retVal_1 = this.GetAnnotationsCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotationsCore()
		{
			global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetAnnotationsCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetPositionInSetCore()
		{
			int __retVal_1 = this.GetPositionInSetCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetPositionInSetCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetPositionInSetCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetSizeOfSetCore()
		{
			int __retVal_1 = this.GetSizeOfSetCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetSizeOfSetCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetSizeOfSetCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetLevelCore()
		{
			int __retVal_1 = this.GetLevelCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetLevelCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3__Impl.Stubs.GetLevelCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLandmarkTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType __retVal_1 = this.GetLandmarkTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Stubs.GetLandmarkTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4.GetLocalizedLandmarkTypeCore()
		{
			string __retVal_1 = this.GetLocalizedLandmarkTypeCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetLocalizedLandmarkTypeCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides4__Impl.Stubs.GetLocalizedLandmarkTypeCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.IsPeripheralCore()
		{
			bool __retVal_1 = this.IsPeripheralCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsPeripheralCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.IsPeripheralCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.IsDataValidForFormCore()
		{
			bool __retVal_1 = this.IsDataValidForFormCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsDataValidForFormCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.IsDataValidForFormCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		string global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFullDescriptionCore()
		{
			string __retVal_1 = this.GetFullDescriptionCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual string GetFullDescriptionCore()
		{
			string __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFullDescriptionCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetDescribedByCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetDescribedByCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetDescribedByCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetDescribedByCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFlowsToCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetFlowsToCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFlowsToCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5.GetFlowsFromCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal_1 = this.GetFlowsFromCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore()
		{
			global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides5__Impl.Stubs.GetFlowsFromCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		int global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6.GetCultureCore()
		{
			int __retVal_1 = this.GetCultureCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual int GetCultureCore()
		{
			int __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides6__Impl.Stubs.GetCultureCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8.GetHeadingLevelCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retVal_1 = this.GetHeadingLevelCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore()
		{
			global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides8__Impl.Stubs.GetHeadingLevelCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		bool global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9.IsDialogCore()
		{
			bool __retVal_1 = this.IsDialogCore();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual bool IsDialogCore()
		{
			bool __retVal = global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides9__Impl.Stubs.IsDialogCore(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public AutomationPeer(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AutomationPeerAnnotation : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Peers.IAutomationPeerAnnotation
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AutomationPeerAnnotation() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AutomationPeerAnnotation(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer2
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer3
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer4
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer5
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer6
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer7
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer8
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeer9
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerProtected
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer PeerFromProvider(global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple provider);

		global::Windows.UI.Xaml.Automation.Provider.IRawElementProviderSimple ProviderFromPeer(global::Windows.UI.Xaml.Automation.Peers.AutomationPeer peer);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides
	{
		object GetPatternCore(global::Windows.UI.Xaml.Automation.Peers.PatternInterface patternInterface);

		string GetAcceleratorKeyCore();

		string GetAccessKeyCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationControlType GetAutomationControlTypeCore();

		string GetAutomationIdCore();

		global::Windows.Foundation.Rect GetBoundingRectangleCore();

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetChildrenCore();

		string GetClassNameCore();

		global::Windows.Foundation.Point GetClickablePointCore();

		string GetHelpTextCore();

		string GetItemStatusCore();

		string GetItemTypeCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetLabeledByCore();

		string GetLocalizedControlTypeCore();

		string GetNameCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationOrientation GetOrientationCore();

		bool HasKeyboardFocusCore();

		bool IsContentElementCore();

		bool IsControlElementCore();

		bool IsEnabledCore();

		bool IsKeyboardFocusableCore();

		bool IsOffscreenCore();

		bool IsPasswordCore();

		bool IsRequiredForFormCore();

		void SetFocusCore();

		global::Windows.UI.Xaml.Automation.Peers.AutomationPeer GetPeerFromPointCore(global::Windows.Foundation.Point point);

		global::Windows.UI.Xaml.Automation.Peers.AutomationLiveSetting GetLiveSettingCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides2
	{
		void ShowContextMenuCore();

		global::System.Collections.Generic.IReadOnlyList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetControlledPeersCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides3
	{
		object NavigateCore(global::Windows.UI.Xaml.Automation.Peers.AutomationNavigationDirection direction);

		object GetElementFromPointCore(global::Windows.Foundation.Point pointInWindowCoordinates);

		object GetFocusedElementCore();

		global::System.Collections.Generic.IList<global::Windows.UI.Xaml.Automation.Peers.AutomationPeerAnnotation> GetAnnotationsCore();

		int GetPositionInSetCore();

		int GetSizeOfSetCore();

		int GetLevelCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerAnnotation
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides4
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationLandmarkType GetLandmarkTypeCore();

		string GetLocalizedLandmarkTypeCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides5
	{
		bool IsPeripheralCore();

		bool IsDataValidForFormCore();

		string GetFullDescriptionCore();

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetDescribedByCore();

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsToCore();

		global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.Automation.Peers.AutomationPeer> GetFlowsFromCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides6
	{
		int GetCultureCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides8
	{
		global::Windows.UI.Xaml.Automation.Peers.AutomationHeadingLevel GetHeadingLevelCore();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAutomationPeerOverrides9
	{
		bool IsDialogCore();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum PatternInterface
	{
		Invoke = 0,
		Selection = 1,
		Value = 2,
		RangeValue = 3,
		Scroll = 4,
		ScrollItem = 5,
		ExpandCollapse = 6,
		Grid = 7,
		GridItem = 8,
		MultipleView = 9,
		Window = 10,
		SelectionItem = 11,
		Dock = 12,
		Table = 13,
		TableItem = 14,
		Toggle = 15,
		Transform = 16,
		Text = 17,
		ItemContainer = 18,
		VirtualizedItem = 19,
		Text2 = 20,
		TextChild = 21,
		TextRange = 22,
		Annotation = 23,
		Drag = 24,
		DropTarget = 25,
		ObjectModel = 26,
		Spreadsheet = 27,
		SpreadsheetItem = 28,
		Styles = 29,
		Transform2 = 30,
		SynchronizedInput = 31,
		TextEdit = 32,
		CustomNavigation = 33,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationControlType
	{
		Button = 0,
		Calendar = 1,
		CheckBox = 2,
		ComboBox = 3,
		Edit = 4,
		Hyperlink = 5,
		Image = 6,
		ListItem = 7,
		List = 8,
		Menu = 9,
		MenuBar = 10,
		MenuItem = 11,
		ProgressBar = 12,
		RadioButton = 13,
		ScrollBar = 14,
		Slider = 15,
		Spinner = 16,
		StatusBar = 17,
		Tab = 18,
		TabItem = 19,
		Text = 20,
		ToolBar = 21,
		ToolTip = 22,
		Tree = 23,
		TreeItem = 24,
		Custom = 25,
		Group = 26,
		Thumb = 27,
		DataGrid = 28,
		DataItem = 29,
		Document = 30,
		SplitButton = 31,
		Window = 32,
		Pane = 33,
		Header = 34,
		HeaderItem = 35,
		Table = 36,
		TitleBar = 37,
		Separator = 38,
		SemanticZoom = 39,
		AppBar = 40,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationOrientation
	{
		None = 0,
		Horizontal = 1,
		Vertical = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationLiveSetting
	{
		Off = 0,
		Polite = 1,
		Assertive = 2,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationNavigationDirection
	{
		Parent = 0,
		NextSibling = 1,
		PreviousSibling = 2,
		FirstChild = 3,
		LastChild = 4,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationLandmarkType
	{
		None = 0,
		Custom = 1,
		Form = 2,
		Main = 3,
		Navigation = 4,
		Search = 5,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum AutomationHeadingLevel
	{
		None = 0,
		Level1 = 1,
		Level2 = 2,
		Level3 = 3,
		Level4 = 4,
		Level5 = 5,
		Level6 = 6,
		Level7 = 7,
		Level8 = 8,
		Level9 = 9,
	}
}

namespace Windows.UI.Xaml.Automation.Provider
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class IRawElementProviderSimple : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Automation.Provider.IIRawElementProviderSimple
	{
		public IRawElementProviderSimple(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IIRawElementProviderSimple
	{
	}
}

namespace Windows.UI.Xaml.Controls
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControl4))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlProtected))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IControlOverrides6))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Control : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IControl, global::Windows.UI.Xaml.Controls.IControl4, global::Windows.UI.Xaml.Controls.IControlProtected, global::Windows.UI.Xaml.Controls.IControlOverrides, global::Windows.UI.Xaml.Controls.IControlOverrides6
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		public virtual global::Windows.UI.Xaml.Media.Brush get_Background()
		{
			global::Windows.UI.Xaml.Media.Brush __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.get_Background(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		public virtual void put_Background(global::Windows.UI.Xaml.Media.Brush value)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.put_Background(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsEnabledChanged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsEnabledChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.add_IsEnabledChanged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsEnabledChanged")]
		public virtual void remove_IsEnabledChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl__Impl.Stubs.remove_IsEnabledChanged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusEngaged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusEngaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusEngagedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.add_FocusEngaged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusEngaged")]
		public virtual void remove_FocusEngaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.remove_FocusEngaged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusDisengaged")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusDisengaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusDisengagedEventArgs> handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.add_FocusDisengaged(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusDisengaged")]
		public virtual void remove_FocusDisengaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IControl4__Impl.Stubs.remove_FocusDisengaged(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		object global::Windows.UI.Xaml.Controls.IControlProtected.get_DefaultStyleKey()
		{
			object __retVal_1 = this.get_DefaultStyleKey();
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultStyleKey")]
		protected virtual object get_DefaultStyleKey()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.get_DefaultStyleKey(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IControlProtected.put_DefaultStyleKey(object value)
		{
			this.put_DefaultStyleKey(value);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultStyleKey")]
		protected virtual void put_DefaultStyleKey(object value)
		{
			global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.put_DefaultStyleKey(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		global::Windows.UI.Xaml.DependencyObject global::Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild(string childName)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal_1 = this.GetTemplateChild(childName);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DependencyObject GetTemplateChild(string childName)
		{
			global::Windows.UI.Xaml.DependencyObject __retVal = global::Windows.UI.Xaml.Controls.IControlProtected__Impl.Stubs.GetTemplateChild(
								this, 
								childName
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerEntered(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerEntered(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerPressed(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerPressed(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerMoved(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerMoved(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerReleased(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerReleased(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerExited(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerExited(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerCaptureLost(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerCaptureLost(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerCanceled(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerCanceled(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			this.OnPointerWheelChanged(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnPointerWheelChanged(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e)
		{
			this.OnTapped(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnTapped(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e)
		{
			this.OnDoubleTapped(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDoubleTapped(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e)
		{
			this.OnHolding(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnHolding(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e)
		{
			this.OnRightTapped(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnRightTapped(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e)
		{
			this.OnManipulationStarting(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationStarting(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e)
		{
			this.OnManipulationInertiaStarting(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationInertiaStarting(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e)
		{
			this.OnManipulationStarted(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationStarted(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e)
		{
			this.OnManipulationDelta(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationDelta(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e)
		{
			this.OnManipulationCompleted(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnManipulationCompleted(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnKeyUp(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnKeyUp(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnKeyDown(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnKeyDown(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			this.OnGotFocus(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnGotFocus(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			this.OnLostFocus(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnLostFocus(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragEnter(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragEnter(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragLeave(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragLeave(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDragOver(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDragOver(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDragOver(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDragOver(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides.OnDrop(global::Windows.UI.Xaml.DragEventArgs e)
		{
			this.OnDrop(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnDrop(global::Windows.UI.Xaml.DragEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides__Impl.Stubs.OnDrop(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnPreviewKeyDown(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnPreviewKeyDown(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			this.OnPreviewKeyUp(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnPreviewKeyUp(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IControlOverrides6.OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e)
		{
			this.OnCharacterReceived(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IControlOverrides6__Impl.Stubs.OnCharacterReceived(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Control(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFocusEngagedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FocusEngagedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IFocusEngagedEventArgs
	{
		public FocusEngagedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class FocusDisengagedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Controls.IFocusDisengagedEventArgs
	{
		public FocusDisengagedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IUserControl))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class UserControl : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IUserControl
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public UserControl() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IUserControlFactory_CreateInstance("Windows.UI.Xaml.Controls.UserControl");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IUserControlFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.UserControl).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IUserControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IUserControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IUserControlFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IUserControlFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual global::Windows.UI.Xaml.UIElement get_Content()
		{
			global::Windows.UI.Xaml.UIElement __retVal = global::Windows.UI.Xaml.Controls.IUserControl__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public virtual void put_Content(global::Windows.UI.Xaml.UIElement value)
		{
			global::Windows.UI.Xaml.Controls.IUserControl__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public UserControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPage))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPageOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Page : global::Windows.UI.Xaml.Controls.UserControl, global::Windows.UI.Xaml.Controls.IPage, global::Windows.UI.Xaml.Controls.IPageOverrides
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Page() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IPageFactory_CreateInstance("Windows.UI.Xaml.Controls.Page");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IPageFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Page).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IPageFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IPageFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IPageFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IPageFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		void global::Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedFrom(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			this.OnNavigatedFrom(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnNavigatedFrom(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IPageOverrides__Impl.Stubs.OnNavigatedFrom(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatedTo(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			this.OnNavigatedTo(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnNavigatedTo(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IPageOverrides__Impl.Stubs.OnNavigatedTo(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IPageOverrides.OnNavigatingFrom(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e)
		{
			this.OnNavigatingFrom(e);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnNavigatingFrom(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e)
		{
			global::Windows.UI.Xaml.Controls.IPageOverrides__Impl.Stubs.OnNavigatingFrom(
								this, 
								e
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Page(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class UIElementCollection : global::System.__ComObject, global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>, global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>, global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>
	{
		int global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Add(global::Windows.UI.Xaml.UIElement item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Contains(global::Windows.UI.Xaml.UIElement item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.CopyTo(
					global::Windows.UI.Xaml.UIElement[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>.Remove(global::Windows.UI.Xaml.UIElement item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		global::Windows.UI.Xaml.UIElement global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.this[int index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		int global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.IndexOf(global::Windows.UI.Xaml.UIElement item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.IndexOf(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.Insert(
					int index, 
					global::Windows.UI.Xaml.UIElement item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.Insert(
								this, 
								index, 
								item
							);
		}

		void global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>.RemoveAt(int index)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IVectorSharedReferenceTypesRCWAdapter.RemoveAt(
								((global::System.Collections.Generic.IList<global::Windows.UI.Xaml.UIElement>)this), 
								index
							);
		}

		global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.UIElement> global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>.GetEnumerator()
		{
			global::System.RuntimeTypeHandle dummySharedDynamicAdapter = typeof(global::System.Runtime.InteropServices.WindowsRuntime.IIterableSharedReferenceTypesDynamicAdapter<global::Windows.UI.Xaml.UIElement>).TypeHandle;
			return (global::System.Collections.Generic.IEnumerator<global::Windows.UI.Xaml.UIElement>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::Windows.UI.Xaml.UIElement>).TypeHandle
							);
		}

		public UIElementCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IPanel))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Panel : global::Windows.UI.Xaml.FrameworkElement, global::Windows.UI.Xaml.Controls.IPanel
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		public virtual global::Windows.UI.Xaml.Controls.UIElementCollection get_Children()
		{
			global::Windows.UI.Xaml.Controls.UIElementCollection __retVal = global::Windows.UI.Xaml.Controls.IPanel__Impl.Stubs.get_Children(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public Panel(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IGrid))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Grid : global::Windows.UI.Xaml.Controls.Panel, global::Windows.UI.Xaml.Controls.IGrid
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Grid() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IGridFactory_CreateInstance("Windows.UI.Xaml.Controls.Grid");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IGridFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Grid).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IGridFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IGridFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IGridFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IGridFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public Grid(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentControl))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IContentControlOverrides))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ContentControl : global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.IContentControl, global::Windows.UI.Xaml.Controls.IContentControlOverrides
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public virtual object get_Content()
		{
			object __retVal = global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public virtual void put_Content(object value)
		{
			global::Windows.UI.Xaml.Controls.IContentControl__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentChanged(
					object oldContent, 
					object newContent)
		{
			this.OnContentChanged(
								oldContent, 
								newContent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentChanged(
					object oldContent, 
					object newContent)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentChanged(
								this, 
								oldContent, 
								newContent
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			this.OnContentTemplateChanged(
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentTemplateChanged(
								this, 
								oldContentTemplate, 
								newContentTemplate
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		void global::Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			this.OnContentTemplateSelectorChanged(
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector)
		{
			global::Windows.UI.Xaml.Controls.IContentControlOverrides__Impl.Stubs.OnContentTemplateSelectorChanged(
								this, 
								oldContentTemplateSelector, 
								newContentTemplateSelector
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ContentControl(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelector))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class DataTemplateSelector : global::System.__ComObject, global::Windows.UI.Xaml.Controls.IDataTemplateSelector, global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides, global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2
	{
		global::Windows.UI.Xaml.DataTemplate global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides.SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal_1 = this.SelectTemplateCore(
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides__Impl.Stubs.SelectTemplateCore(
								this, 
								item, 
								container
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		global::Windows.UI.Xaml.DataTemplate global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2.SelectTemplateCore(object item)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal_1 = this.SelectTemplateCore(item);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal_1;
		}

		protected virtual global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(object item)
		{
			global::Windows.UI.Xaml.DataTemplate __retVal = global::Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides2__Impl.Stubs.SelectTemplateCore(
								this, 
								item
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public DataTemplateSelector(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IButton))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Button : global::Windows.UI.Xaml.Controls.Primitives.ButtonBase, global::Windows.UI.Xaml.Controls.IButton
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Button() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IButtonFactory_CreateInstance("Windows.UI.Xaml.Controls.Button");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IButtonFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Button).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IButtonFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IButtonFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		public Button(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.IFrame))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Frame : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.IFrame
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public Frame() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_UI_Xaml_Controls__IFrameFactory_CreateInstance("Windows.UI.Xaml.Controls.Frame");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_UI_Xaml_Controls__IFrameFactory_CreateInstance(string typeName)
		{
			global::System.IntPtr innerInspectable;
			global::System.IntPtr outerInspectable = default(global::System.IntPtr);
			if (global::System.Runtime.InteropServices.McgMarshal.IsOfType(
								this, 
								typeof(global::Windows.UI.Xaml.Controls.Frame).TypeHandle
							))
			{
				global::System.IntPtr __pRetVal_NoAggregation;
				__pRetVal_NoAggregation = global::Windows.UI.Xaml.Controls.IFrameFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IFrameFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(innerInspectable);
				global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal_NoAggregation);
				return __pRetVal_NoAggregation;
			}
			else
			{
				outerInspectable = global::System.Runtime.InteropServices.McgMarshal.GetOuterIInspectableForManagedObject(this);
				global::System.IntPtr __pRetVal_WithAggregation;
				__pRetVal_WithAggregation = global::Windows.UI.Xaml.Controls.IFrameFactory__Impl.Stubs.CreateInstance(
									global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
														typeName, 
														typeof(global::Windows.UI.Xaml.Controls.IFrameFactory).TypeHandle
													), 
									outerInspectable, 
									out innerInspectable
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(outerInspectable);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(__pRetVal_WithAggregation);
				return innerInspectable;
			}
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigated")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigated(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_Navigated(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigated")]
		public virtual void remove_Navigated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_Navigated(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigating")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigating(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_Navigating(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigating")]
		public virtual void remove_Navigating(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_Navigating(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationFailed")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationFailed(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_NavigationFailed(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationFailed")]
		public virtual void remove_NavigationFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_NavigationFailed(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStopped")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStopped(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.add_NavigationStopped(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStopped")]
		public virtual void remove_NavigationStopped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.remove_NavigationStopped(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public virtual bool Navigate(
					global::System.Type sourcePageType, 
					object parameter)
		{
			bool __retVal = global::Windows.UI.Xaml.Controls.IFrame__Impl.Stubs.Navigate(
								this, 
								sourcePageType, 
								parameter
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public Frame(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Background")]
		global::Windows.UI.Xaml.Media.Brush get_Background();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Background")]
		void put_Background(global::Windows.UI.Xaml.Media.Brush value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "IsEnabledChanged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_IsEnabledChanged(global::Windows.UI.Xaml.DependencyPropertyChangedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "IsEnabledChanged")]
		void remove_IsEnabledChanged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControl4
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusEngaged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusEngaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusEngagedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusEngaged")]
		void remove_FocusEngaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "FocusDisengaged")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_FocusDisengaged(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.Control, global::Windows.UI.Xaml.Controls.FocusDisengagedEventArgs> handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "FocusDisengaged")]
		void remove_FocusDisengaged(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFocusEngagedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFocusDisengagedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlProtected
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "DefaultStyleKey")]
		object get_DefaultStyleKey();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "DefaultStyleKey")]
		void put_DefaultStyleKey(object value);

		global::Windows.UI.Xaml.DependencyObject GetTemplateChild(string childName);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlOverrides
	{
		void OnPointerEntered(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerPressed(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerMoved(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerReleased(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerExited(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerCaptureLost(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerCanceled(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnPointerWheelChanged(global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

		void OnTapped(global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e);

		void OnDoubleTapped(global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e);

		void OnHolding(global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e);

		void OnRightTapped(global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e);

		void OnManipulationStarting(global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e);

		void OnManipulationInertiaStarting(global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e);

		void OnManipulationStarted(global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e);

		void OnManipulationDelta(global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e);

		void OnManipulationCompleted(global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e);

		void OnKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnGotFocus(global::Windows.UI.Xaml.RoutedEventArgs e);

		void OnLostFocus(global::Windows.UI.Xaml.RoutedEventArgs e);

		void OnDragEnter(global::Windows.UI.Xaml.DragEventArgs e);

		void OnDragLeave(global::Windows.UI.Xaml.DragEventArgs e);

		void OnDragOver(global::Windows.UI.Xaml.DragEventArgs e);

		void OnDrop(global::Windows.UI.Xaml.DragEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IControlOverrides6
	{
		void OnPreviewKeyDown(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnPreviewKeyUp(global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

		void OnCharacterReceived(global::Windows.UI.Xaml.Input.CharacterReceivedRoutedEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUserControlFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IUserControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.UI.Xaml.UIElement get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.UI.Xaml.UIElement value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPageFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPage
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPageOverrides
	{
		void OnNavigatedFrom(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

		void OnNavigatedTo(global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

		void OnNavigatingFrom(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPanel
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Children")]
		global::Windows.UI.Xaml.Controls.UIElementCollection get_Children();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGridFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGrid
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		object get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContentControlOverrides
	{
		void OnContentChanged(
					object oldContent, 
					object newContent);

		void OnContentTemplateChanged(
					global::Windows.UI.Xaml.DataTemplate oldContentTemplate, 
					global::Windows.UI.Xaml.DataTemplate newContentTemplate);

		void OnContentTemplateSelectorChanged(
					global::Windows.UI.Xaml.Controls.DataTemplateSelector oldContentTemplateSelector, 
					global::Windows.UI.Xaml.Controls.DataTemplateSelector newContentTemplateSelector);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelector
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelectorOverrides
	{
		global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(
					object item, 
					global::Windows.UI.Xaml.DependencyObject container);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDataTemplateSelectorOverrides2
	{
		global::Windows.UI.Xaml.DataTemplate SelectTemplateCore(object item);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IButtonFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IButton
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrameFactory
	{
		global::System.IntPtr CreateInstance(
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IFrame
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigated")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigated(global::Windows.UI.Xaml.Navigation.NavigatedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigated")]
		void remove_Navigated(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Navigating")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Navigating(global::Windows.UI.Xaml.Navigation.NavigatingCancelEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Navigating")]
		void remove_Navigating(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationFailed")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationFailed(global::Windows.UI.Xaml.Navigation.NavigationFailedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationFailed")]
		void remove_NavigationFailed(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "NavigationStopped")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_NavigationStopped(global::Windows.UI.Xaml.Navigation.NavigationStoppedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "NavigationStopped")]
		void remove_NavigationStopped(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);

		bool Navigate(
					global::System.Type sourcePageType, 
					object parameter);
	}
}

namespace Windows.UI.Xaml.Controls.Primitives
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Controls.Primitives.IButtonBase))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ButtonBase : global::Windows.UI.Xaml.Controls.ContentControl, global::Windows.UI.Xaml.Controls.Primitives.IButtonBase
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Click")]
		public virtual global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Click(global::Windows.UI.Xaml.RoutedEventHandler handler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.UI.Xaml.Controls.Primitives.IButtonBase__Impl.Stubs.add_Click(
								this, 
								handler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Click")]
		public virtual void remove_Click(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token)
		{
			global::Windows.UI.Xaml.Controls.Primitives.IButtonBase__Impl.Stubs.remove_Click(
								this, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public ButtonBase(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IButtonBase
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "Click")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_Click(global::Windows.UI.Xaml.RoutedEventHandler handler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "Click")]
		void remove_Click(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum ComponentResourceLocation
	{
		Application = 0,
		Nested = 1,
	}
}

namespace Windows.UI.Xaml.Data
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPropertyChangedEventArgsFactory
	{
		global::System.IntPtr CreateInstance(
					string name, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPropertyChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "PropertyName")]
		string get_PropertyName();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IValueConverter
	{
		object Convert(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language);

		object ConvertBack(
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language);
	}
}

namespace Windows.UI.Xaml.Input
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class KeyRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IKeyRoutedEventArgs
	{
		public KeyRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class PointerRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IPointerRoutedEventArgs
	{
		public PointerRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class TappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ITappedRoutedEventArgs
	{
		public TappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class DoubleTappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IDoubleTappedRoutedEventArgs
	{
		public DoubleTappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HoldingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IHoldingRoutedEventArgs
	{
		public HoldingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class RightTappedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IRightTappedRoutedEventArgs
	{
		public RightTappedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationStartingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationStartingRoutedEventArgs
	{
		public ManipulationStartingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationInertiaStartingRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationInertiaStartingRoutedEventArgs
	{
		public ManipulationInertiaStartingRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class ManipulationStartedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationStartedRoutedEventArgs
	{
		public ManipulationStartedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationDeltaRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs
	{
		public ManipulationDeltaRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ManipulationCompletedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IManipulationCompletedRoutedEventArgs
	{
		public ManipulationCompletedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IContextRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContextRequestedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IContextRequestedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public ContextRequestedEventArgs() : 
				base(default(global::System.IntPtr))
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.ContextRequestedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public ContextRequestedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyDisplayRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyDisplayRequestedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyDisplayRequestedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyDisplayRequestedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyDisplayRequestedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AccessKeyDisplayRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyDisplayDismissedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyDisplayDismissedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyDisplayDismissedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyDisplayDismissedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyDisplayDismissedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AccessKeyDisplayDismissedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IAccessKeyInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(196608)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class AccessKeyInvokedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IAccessKeyInvokedEventArgs
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public AccessKeyInvokedEventArgs()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.UI.Xaml.Input.AccessKeyInvokedEventArgs");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		public AccessKeyInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IGettingFocusEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class GettingFocusEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.IGettingFocusEventArgs
	{
		public GettingFocusEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ILosingFocusEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class LosingFocusEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ILosingFocusEventArgs
	{
		public LosingFocusEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.INoFocusCandidateFoundEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NoFocusCandidateFoundEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.INoFocusCandidateFoundEventArgs
	{
		public NoFocusCandidateFoundEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.ICharacterReceivedRoutedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class CharacterReceivedRoutedEventArgs : global::Windows.UI.Xaml.RoutedEventArgs, global::Windows.UI.Xaml.Input.ICharacterReceivedRoutedEventArgs
	{
		public CharacterReceivedRoutedEventArgs(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IProcessKeyboardAcceleratorEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ProcessKeyboardAcceleratorEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IProcessKeyboardAcceleratorEventArgs
	{
		public ProcessKeyboardAcceleratorEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class KeyboardAcceleratorInvokedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Input.IKeyboardAcceleratorInvokedEventArgs
	{
		public KeyboardAcceleratorInvokedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void KeyEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.KeyRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void PointerEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.PointerRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IPointerRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void TappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.TappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ITappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void DoubleTappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.DoubleTappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IDoubleTappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void HoldingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.HoldingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHoldingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void RightTappedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.RightTappedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IRightTappedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationStartingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationStartingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationInertiaStartingEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationInertiaStartingRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationInertiaStartingRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationStartedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationStartedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationStartedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationDeltaEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationDeltaRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationDeltaRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void ManipulationCompletedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Input.ManipulationCompletedRoutedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IManipulationCompletedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IContextRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyDisplayRequestedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyDisplayDismissedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IAccessKeyInvokedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IGettingFocusEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ILosingFocusEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INoFocusCandidateFoundEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface ICharacterReceivedRoutedEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IProcessKeyboardAcceleratorEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IKeyboardAcceleratorInvokedEventArgs
	{
	}
}

namespace Windows.UI.Xaml.Interop
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INotifyCollectionChangedEventArgsFactory
	{
		global::System.IntPtr CreateInstanceWithAllParameters(
					global::System.Collections.Specialized.NotifyCollectionChangedAction action, 
					global::System.Collections.IList newItems, 
					global::System.Collections.IList oldItems, 
					int newIndex, 
					int oldIndex, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INotifyCollectionChangedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Action")]
		global::System.Collections.Specialized.NotifyCollectionChangedAction get_Action();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewItems")]
		global::System.Collections.IList get_NewItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldItems")]
		global::System.Collections.IList get_OldItems();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "NewStartingIndex")]
		int get_NewStartingIndex();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "OldStartingIndex")]
		int get_OldStartingIndex();
	}
}

namespace Windows.UI.Xaml.Markup
{
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlMetadataProvider
	{
		global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type);

		global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName);

		global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlType
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "BaseType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_BaseType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ContentProperty")]
		global::Windows.UI.Xaml.Markup.IXamlMember get_ContentProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "FullName")]
		string get_FullName();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsArray")]
		bool get_IsArray();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsCollection")]
		bool get_IsCollection();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsConstructible")]
		bool get_IsConstructible();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDictionary")]
		bool get_IsDictionary();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsMarkupExtension")]
		bool get_IsMarkupExtension();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsBindable")]
		bool get_IsBindable();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ItemType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_ItemType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "KeyType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_KeyType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UnderlyingType")]
		global::System.Type get_UnderlyingType();

		object ActivateInstance();

		object CreateFromString(string value);

		global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name);

		void AddToVector(
					object instance, 
					object value);

		void AddToMap(
					object instance, 
					object key, 
					object value);

		void RunInitializer();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IXamlMember
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsAttachable")]
		bool get_IsAttachable();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsDependencyProperty")]
		bool get_IsDependencyProperty();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IsReadOnly")]
		bool get_IsReadOnly();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Name")]
		string get_Name();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "TargetType")]
		global::Windows.UI.Xaml.Markup.IXamlType get_TargetType();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Type")]
		global::Windows.UI.Xaml.Markup.IXamlType get_Type();

		object GetValue(object instance);

		void SetValue(
					object instance, 
					object value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComponentConnector
	{
		void Connect(
					int connectionId, 
					object target);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IComponentConnector2
	{
		global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(
					int connectionId, 
					object target);
	}

	[global::System.AttributeUsage((global::System.AttributeTargets.Assembly | global::System.AttributeTargets.Module 
				| global::System.AttributeTargets.Class 
				| global::System.AttributeTargets.Struct 
				| global::System.AttributeTargets.Enum 
				| global::System.AttributeTargets.Constructor 
				| global::System.AttributeTargets.Method 
				| global::System.AttributeTargets.Property 
				| global::System.AttributeTargets.Field 
				| global::System.AttributeTargets.Event 
				| global::System.AttributeTargets.Interface 
				| global::System.AttributeTargets.Parameter 
				| global::System.AttributeTargets.Delegate 
				| global::System.AttributeTargets.ReturnValue 
				| global::System.AttributeTargets.GenericParameter), AllowMultiple=false)]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class ContentPropertyAttribute : global::System.Attribute
	{
		public ContentPropertyAttribute()
		{
			throw new global::System.InvalidOperationException("Cannot construct type \'Windows.UI.Xaml.Markup.ContentPropertyAttribute\'.  Windows Runtime attribute types are no" +
					"t constructable.");
		}
		public string Name;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct XmlnsDefinition
	{
		public string XmlNamespace;
		public string Namespace;
	}
}

namespace Windows.UI.Xaml.Media
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IBrush))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Media.IBrushOverrides2))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe class Brush : global::Windows.UI.Xaml.DependencyObject, global::Windows.UI.Xaml.Media.IBrush, global::Windows.UI.Xaml.Media.IBrushOverrides2, global::Windows.UI.Composition.IAnimationObject
	{
		void global::Windows.UI.Xaml.Media.IBrushOverrides2.PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			this.PopulatePropertyInfoOverride(
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		protected virtual void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo)
		{
			global::Windows.UI.Xaml.Media.IBrushOverrides2__Impl.Stubs.PopulatePropertyInfoOverride(
								this, 
								propertyName, 
								animationPropertyInfo
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public Brush(global::System.IntPtr dummy) : 
				base(dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrush
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IBrushOverrides2
	{
		void PopulatePropertyInfoOverride(
					string propertyName, 
					global::Windows.UI.Composition.AnimationPropertyInfo animationPropertyInfo);
	}
}

namespace Windows.UI.Xaml.Navigation
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigationEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigationEventArgs
	{
		public NavigationEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigatingCancelEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigatingCancelEventArgs
	{
		public NavigatingCancelEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class NavigationFailedEventArgs : global::System.__ComObject, global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourcePageType")]
		public global::System.Type get_SourcePageType()
		{
			global::System.Type __retVal = global::Windows.UI.Xaml.Navigation.INavigationFailedEventArgs__Impl.Stubs.get_SourcePageType(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public NavigationFailedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigatingCancelEventArgs
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface INavigationFailedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "SourcePageType")]
		global::System.Type get_SourcePageType();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigatedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigatingCancelEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigatingCancelEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigationFailedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationFailedEventArgs e);

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe delegate void NavigationStoppedEventHandler(
				object sender, 
				global::Windows.UI.Xaml.Navigation.NavigationEventArgs e);
}

namespace Windows.Web.Http
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpRequestMessage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpRequestMessage : global::System.__ComObject, global::Windows.Web.Http.IHttpRequestMessage, global::System.IDisposable, global::Windows.Foundation.IStringable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpRequestMessage(
					global::Windows.Web.Http.HttpMethod method, 
					global::System.Uri uri)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Web_Http__IHttpRequestMessageFactory_Create(
								"Windows.Web.Http.HttpRequestMessage", 
								method, 
								uri
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Web_Http__IHttpRequestMessageFactory_Create(
					string typeName, 
					global::Windows.Web.Http.HttpMethod method, 
					global::System.Uri uri)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Web.Http.IHttpRequestMessageFactory__Impl.Stubs.Create(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Web.Http.IHttpRequestMessageFactory).TypeHandle
												), 
								method, 
								uri
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpRequestMessage()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Web.Http.HttpRequestMessage");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		public void put_Content(global::Windows.Web.Http.IHttpContent value)
		{
			global::Windows.Web.Http.IHttpRequestMessage__Impl.Stubs.put_Content(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Windows.Web.Http.Headers.HttpRequestHeaderCollection get_Headers()
		{
			global::Windows.Web.Http.Headers.HttpRequestHeaderCollection __retVal = global::Windows.Web.Http.IHttpRequestMessage__Impl.Stubs.get_Headers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		public global::System.Collections.Generic.IDictionary<string, object> get_Properties()
		{
			global::System.Collections.Generic.IDictionary<string, object> __retVal = global::Windows.Web.Http.IHttpRequestMessage__Impl.Stubs.get_Properties(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public HttpRequestMessage(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpMethod))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpMethod : global::System.__ComObject, global::Windows.Web.Http.IHttpMethod, global::Windows.Foundation.IStringable
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpMethod(string method)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Web_Http__IHttpMethodFactory_Create(
								"Windows.Web.Http.HttpMethod", 
								method
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Web_Http__IHttpMethodFactory_Create(
					string typeName, 
					string method)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Web.Http.IHttpMethodFactory__Impl.Stubs.Create(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Web.Http.IHttpMethodFactory).TypeHandle
												), 
								method
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public HttpMethod(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpResponseMessage))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpResponseMessage : global::System.__ComObject, global::Windows.Web.Http.IHttpResponseMessage, global::System.IDisposable, global::Windows.Foundation.IStringable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpResponseMessage()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Web.Http.HttpResponseMessage");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		public global::Windows.Web.Http.IHttpContent get_Content()
		{
			global::Windows.Web.Http.IHttpContent __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_Content(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Windows.Web.Http.Headers.HttpResponseHeaderCollection get_Headers()
		{
			global::Windows.Web.Http.Headers.HttpResponseHeaderCollection __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_Headers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReasonPhrase")]
		public string get_ReasonPhrase()
		{
			string __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_ReasonPhrase(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusCode")]
		public global::Windows.Web.Http.HttpStatusCode get_StatusCode()
		{
			global::Windows.Web.Http.HttpStatusCode __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_StatusCode(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Version")]
		public global::Windows.Web.Http.HttpVersion get_Version()
		{
			global::Windows.Web.Http.HttpVersion __retVal = global::Windows.Web.Http.IHttpResponseMessage__Impl.Stubs.get_Version(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public HttpResponseMessage(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpContent))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpBufferContent : global::System.__ComObject, global::Windows.Web.Http.IHttpContent, global::System.IDisposable, global::Windows.Foundation.IStringable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpBufferContent(
					global::Windows.Storage.Streams.IBuffer content, 
					uint offset, 
					uint count)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Web_Http__IHttpBufferContentFactory_CreateFromBufferWithOffset(
								"Windows.Web.Http.HttpBufferContent", 
								content, 
								offset, 
								count
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Web_Http__IHttpBufferContentFactory_CreateFromBufferWithOffset(
					string typeName, 
					global::Windows.Storage.Streams.IBuffer content, 
					uint offset, 
					uint count)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Web.Http.IHttpBufferContentFactory__Impl.Stubs.CreateFromBufferWithOffset(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Web.Http.IHttpBufferContentFactory).TypeHandle
												), 
								content, 
								offset, 
								count
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Windows.Web.Http.Headers.HttpContentHeaderCollection get_Headers()
		{
			global::Windows.Web.Http.Headers.HttpContentHeaderCollection __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.get_Headers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> BufferAllAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.BufferAllAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, ulong> ReadAsBufferAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.ReadAsBufferAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> ReadAsInputStreamAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.ReadAsInputStreamAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<string, ulong> ReadAsStringAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<string, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.ReadAsStringAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public bool TryComputeLength(out ulong length)
		{
			bool __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.TryComputeLength(
								this, 
								out length
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> WriteToStreamAsync(global::Windows.Storage.Streams.IOutputStream outputStream)
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.WriteToStreamAsync(
								this, 
								outputStream
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public HttpBufferContent(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.IHttpContent))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.IDisposable))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Foundation.IStringable))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpStreamContent : global::System.__ComObject, global::Windows.Web.Http.IHttpContent, global::System.IDisposable, global::Windows.Foundation.IStringable
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpStreamContent(global::Windows.Storage.Streams.IInputStream content)
		{
			global::System.IntPtr retval;
			retval = __Factory_Windows_Web_Http__IHttpStreamContentFactory_CreateFromInputStream(
								"Windows.Web.Http.HttpStreamContent", 
								content
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		global::System.IntPtr __Factory_Windows_Web_Http__IHttpStreamContentFactory_CreateFromInputStream(
					string typeName, 
					global::Windows.Storage.Streams.IInputStream content)
		{
			global::System.IntPtr __pRetVal;
			__pRetVal = global::Windows.Web.Http.IHttpStreamContentFactory__Impl.Stubs.CreateFromInputStream(
								global::System.Runtime.InteropServices.McgMarshal.GetActivationFactory(
													typeName, 
													typeof(global::Windows.Web.Http.IHttpStreamContentFactory).TypeHandle
												), 
								content
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref __pRetVal);
			return __pRetVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		public global::Windows.Web.Http.Headers.HttpContentHeaderCollection get_Headers()
		{
			global::Windows.Web.Http.Headers.HttpContentHeaderCollection __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.get_Headers(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> BufferAllAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.BufferAllAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, ulong> ReadAsBufferAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.ReadAsBufferAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> ReadAsInputStreamAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.ReadAsInputStreamAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<string, ulong> ReadAsStringAsync()
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<string, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.ReadAsStringAsync(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public bool TryComputeLength(out ulong length)
		{
			bool __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.TryComputeLength(
								this, 
								out length
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> WriteToStreamAsync(global::Windows.Storage.Streams.IOutputStream outputStream)
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> __retVal = global::Windows.Web.Http.IHttpContent__Impl.Stubs.WriteToStreamAsync(
								this, 
								outputStream
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public HttpStreamContent(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpRequestMessageFactory
	{
		global::System.IntPtr Create(
					global::Windows.Web.Http.HttpMethod method, 
					global::System.Uri uri);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpMethodFactory
	{
		global::System.IntPtr Create(string method);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpMethod
	{
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpRequestMessage : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "Content")]
		void put_Content(global::Windows.Web.Http.IHttpContent value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		global::Windows.Web.Http.Headers.HttpRequestHeaderCollection get_Headers();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Properties")]
		global::System.Collections.Generic.IDictionary<string, object> get_Properties();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpContent : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		global::Windows.Web.Http.Headers.HttpContentHeaderCollection get_Headers();

		global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> BufferAllAsync();

		global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IBuffer, ulong> ReadAsBufferAsync();

		global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Storage.Streams.IInputStream, ulong> ReadAsInputStreamAsync();

		global::Windows.Foundation.IAsyncOperationWithProgress<string, ulong> ReadAsStringAsync();

		bool TryComputeLength(out ulong length);

		global::Windows.Foundation.IAsyncOperationWithProgress<ulong, ulong> WriteToStreamAsync(global::Windows.Storage.Streams.IOutputStream outputStream);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpResponseMessage : global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Content")]
		global::Windows.Web.Http.IHttpContent get_Content();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Headers")]
		global::Windows.Web.Http.Headers.HttpResponseHeaderCollection get_Headers();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReasonPhrase")]
		string get_ReasonPhrase();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "StatusCode")]
		global::Windows.Web.Http.HttpStatusCode get_StatusCode();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "Version")]
		global::Windows.Web.Http.HttpVersion get_Version();
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpBufferContentFactory
	{
		global::System.IntPtr CreateFromBufferWithOffset(
					global::Windows.Storage.Streams.IBuffer content, 
					uint offset, 
					uint count);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpStreamContentFactory
	{
		global::System.IntPtr CreateFromInputStream(global::Windows.Storage.Streams.IInputStream content);
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpStatusCode
	{
		None = 0,
		Continue = 100,
		SwitchingProtocols = 101,
		Processing = 102,
		Ok = 200,
		Created = 201,
		Accepted = 202,
		NonAuthoritativeInformation = 203,
		NoContent = 204,
		ResetContent = 205,
		PartialContent = 206,
		MultiStatus = 207,
		AlreadyReported = 208,
		IMUsed = 226,
		MultipleChoices = 300,
		MovedPermanently = 301,
		Found = 302,
		SeeOther = 303,
		NotModified = 304,
		UseProxy = 305,
		TemporaryRedirect = 307,
		PermanentRedirect = 308,
		BadRequest = 400,
		Unauthorized = 401,
		PaymentRequired = 402,
		Forbidden = 403,
		NotFound = 404,
		MethodNotAllowed = 405,
		NotAcceptable = 406,
		ProxyAuthenticationRequired = 407,
		RequestTimeout = 408,
		Conflict = 409,
		Gone = 410,
		LengthRequired = 411,
		PreconditionFailed = 412,
		RequestEntityTooLarge = 413,
		RequestUriTooLong = 414,
		UnsupportedMediaType = 415,
		RequestedRangeNotSatisfiable = 416,
		ExpectationFailed = 417,
		UnprocessableEntity = 422,
		Locked = 423,
		FailedDependency = 424,
		UpgradeRequired = 426,
		PreconditionRequired = 428,
		TooManyRequests = 429,
		RequestHeaderFieldsTooLarge = 431,
		InternalServerError = 500,
		NotImplemented = 501,
		BadGateway = 502,
		ServiceUnavailable = 503,
		GatewayTimeout = 504,
		HttpVersionNotSupported = 505,
		VariantAlsoNegotiates = 506,
		InsufficientStorage = 507,
		LoopDetected = 508,
		NotExtended = 510,
		NetworkAuthenticationRequired = 511,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpVersion
	{
		None = 0,
		Http10 = 1,
		Http11 = 2,
		Http20 = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe struct HttpProgress
	{
		public global::Windows.Web.Http.HttpProgressStage Stage;
		public ulong BytesSent;
		public global::System.Nullable<ulong> TotalBytesToSend;
		public ulong BytesReceived;
		public global::System.Nullable<ulong> TotalBytesToReceive;
		public uint Retries;
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpProgressStage
	{
		None = 0,
		DetectingProxy = 10,
		ResolvingName = 20,
		ConnectingToServer = 30,
		NegotiatingSsl = 40,
		SendingHeaders = 50,
		SendingContent = 60,
		WaitingForResponse = 70,
		ReceivingHeaders = 80,
		ReceivingContent = 90,
	}
}

namespace Windows.Web.Http.Filters
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpFilter))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter2))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter3))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter4))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpBaseProtocolFilter : global::System.__ComObject, global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter, global::Windows.Web.Http.Filters.IHttpFilter, global::System.IDisposable, global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter2, global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter3, global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter4
	{
		public void Dispose()
		{
			global::System.IDisposable__Impl.Stubs.Close(this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		public HttpBaseProtocolFilter()
		{
			global::System.IntPtr retval;
			retval = global::System.Runtime.InteropServices.McgMarshal.ActivateInstance("Windows.Web.Http.Filters.HttpBaseProtocolFilter");
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::__Interop.McgHelpers.GetIUnknownForFactoryReturn(ref retval);
			this.__AttachAndRelease(retval);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowAutoRedirect")]
		public bool get_AllowAutoRedirect()
		{
			bool __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.get_AllowAutoRedirect(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowAutoRedirect")]
		public void put_AllowAutoRedirect(bool value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_AllowAutoRedirect(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowUI")]
		public bool get_AllowUI()
		{
			bool __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.get_AllowUI(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowUI")]
		public void put_AllowUI(bool value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_AllowUI(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutomaticDecompression")]
		public bool get_AutomaticDecompression()
		{
			bool __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.get_AutomaticDecompression(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutomaticDecompression")]
		public void put_AutomaticDecompression(bool value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_AutomaticDecompression(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CacheControl")]
		public global::Windows.Web.Http.Filters.HttpCacheControl get_CacheControl()
		{
			global::Windows.Web.Http.Filters.HttpCacheControl __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.get_CacheControl(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ClientCertificate")]
		public void put_ClientCertificate(global::Windows.Security.Cryptography.Certificates.Certificate value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_ClientCertificate(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IgnorableServerCertificateErrors")]
		public global::System.Collections.Generic.IList<global::Windows.Security.Cryptography.Certificates.ChainValidationResult> get_IgnorableServerCertificateErrors()
		{
			global::System.Collections.Generic.IList<global::Windows.Security.Cryptography.Certificates.ChainValidationResult> __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.get_IgnorableServerCertificateErrors(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxConnectionsPerServer")]
		public uint get_MaxConnectionsPerServer()
		{
			uint __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.get_MaxConnectionsPerServer(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxConnectionsPerServer")]
		public void put_MaxConnectionsPerServer(uint value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_MaxConnectionsPerServer(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ProxyCredential")]
		public void put_ProxyCredential(global::Windows.Security.Credentials.PasswordCredential value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_ProxyCredential(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ServerCredential")]
		public void put_ServerCredential(global::Windows.Security.Credentials.PasswordCredential value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_ServerCredential(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UseProxy")]
		public bool get_UseProxy()
		{
			bool __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.get_UseProxy(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UseProxy")]
		public void put_UseProxy(bool value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter__Impl.Stubs.put_UseProxy(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> SendRequestAsync(global::Windows.Web.Http.HttpRequestMessage request)
		{
			global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __retVal = global::Windows.Web.Http.Filters.IHttpFilter__Impl.Stubs.SendRequestAsync(
								this, 
								request
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVersion")]
		public global::Windows.Web.Http.HttpVersion get_MaxVersion()
		{
			global::Windows.Web.Http.HttpVersion __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter2__Impl.Stubs.get_MaxVersion(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxVersion")]
		public void put_MaxVersion(global::Windows.Web.Http.HttpVersion value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter2__Impl.Stubs.put_MaxVersion(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CookieUsageBehavior")]
		public global::Windows.Web.Http.Filters.HttpCookieUsageBehavior get_CookieUsageBehavior()
		{
			global::Windows.Web.Http.Filters.HttpCookieUsageBehavior __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter3__Impl.Stubs.get_CookieUsageBehavior(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CookieUsageBehavior")]
		public void put_CookieUsageBehavior(global::Windows.Web.Http.Filters.HttpCookieUsageBehavior value)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter3__Impl.Stubs.put_CookieUsageBehavior(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ServerCustomValidationRequested")]
		public global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ServerCustomValidationRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.Web.Http.Filters.HttpBaseProtocolFilter, global::Windows.Web.Http.Filters.HttpServerCustomValidationRequestedEventArgs> eventHandler)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken __retVal = global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter4__Impl.Stubs.add_ServerCustomValidationRequested(
								this, 
								eventHandler
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ServerCustomValidationRequested")]
		public void remove_ServerCustomValidationRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken eventCookie)
		{
			global::Windows.Web.Http.Filters.IHttpBaseProtocolFilter4__Impl.Stubs.remove_ServerCustomValidationRequested(
								this, 
								eventCookie
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public HttpBaseProtocolFilter(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpCacheControl))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpCacheControl : global::System.__ComObject, global::Windows.Web.Http.Filters.IHttpCacheControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReadBehavior")]
		public global::Windows.Web.Http.Filters.HttpCacheReadBehavior get_ReadBehavior()
		{
			global::Windows.Web.Http.Filters.HttpCacheReadBehavior __retVal = global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Stubs.get_ReadBehavior(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ReadBehavior")]
		public void put_ReadBehavior(global::Windows.Web.Http.Filters.HttpCacheReadBehavior value)
		{
			global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Stubs.put_ReadBehavior(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WriteBehavior")]
		public global::Windows.Web.Http.Filters.HttpCacheWriteBehavior get_WriteBehavior()
		{
			global::Windows.Web.Http.Filters.HttpCacheWriteBehavior __retVal = global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Stubs.get_WriteBehavior(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "WriteBehavior")]
		public void put_WriteBehavior(global::Windows.Web.Http.Filters.HttpCacheWriteBehavior value)
		{
			global::Windows.Web.Http.Filters.IHttpCacheControl__Impl.Stubs.put_WriteBehavior(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public HttpCacheControl(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Filters.IHttpServerCustomValidationRequestedEventArgs))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpServerCustomValidationRequestedEventArgs : global::System.__ComObject, global::Windows.Web.Http.Filters.IHttpServerCustomValidationRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestMessage")]
		public global::Windows.Web.Http.HttpRequestMessage get_RequestMessage()
		{
			global::Windows.Web.Http.HttpRequestMessage __retVal = global::Windows.Web.Http.Filters.IHttpServerCustomValidationRequestedEventArgs__Impl.Stubs.get_RequestMessage(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ServerCertificate")]
		public global::Windows.Security.Cryptography.Certificates.Certificate get_ServerCertificate()
		{
			global::Windows.Security.Cryptography.Certificates.Certificate __retVal = global::Windows.Web.Http.Filters.IHttpServerCustomValidationRequestedEventArgs__Impl.Stubs.get_ServerCertificate(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ServerCertificateErrors")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.ChainValidationResult> get_ServerCertificateErrors()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.ChainValidationResult> __retVal = global::Windows.Web.Http.Filters.IHttpServerCustomValidationRequestedEventArgs__Impl.Stubs.get_ServerCertificateErrors(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ServerIntermediateCertificates")]
		public global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate> get_ServerIntermediateCertificates()
		{
			global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate> __retVal = global::Windows.Web.Http.Filters.IHttpServerCustomValidationRequestedEventArgs__Impl.Stubs.get_ServerIntermediateCertificates(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public void Reject()
		{
			global::Windows.Web.Http.Filters.IHttpServerCustomValidationRequestedEventArgs__Impl.Stubs.Reject(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public HttpServerCustomValidationRequestedEventArgs(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpBaseProtocolFilter : global::Windows.Web.Http.Filters.IHttpFilter, global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowAutoRedirect")]
		bool get_AllowAutoRedirect();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowAutoRedirect")]
		void put_AllowAutoRedirect(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AllowUI")]
		bool get_AllowUI();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AllowUI")]
		void put_AllowUI(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "AutomaticDecompression")]
		bool get_AutomaticDecompression();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "AutomaticDecompression")]
		void put_AutomaticDecompression(bool value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CacheControl")]
		global::Windows.Web.Http.Filters.HttpCacheControl get_CacheControl();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ClientCertificate")]
		void put_ClientCertificate(global::Windows.Security.Cryptography.Certificates.Certificate value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "IgnorableServerCertificateErrors")]
		global::System.Collections.Generic.IList<global::Windows.Security.Cryptography.Certificates.ChainValidationResult> get_IgnorableServerCertificateErrors();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxConnectionsPerServer")]
		uint get_MaxConnectionsPerServer();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxConnectionsPerServer")]
		void put_MaxConnectionsPerServer(uint value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ProxyCredential")]
		void put_ProxyCredential(global::Windows.Security.Credentials.PasswordCredential value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ServerCredential")]
		void put_ServerCredential(global::Windows.Security.Credentials.PasswordCredential value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "UseProxy")]
		bool get_UseProxy();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "UseProxy")]
		void put_UseProxy(bool value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpFilter : global::System.IDisposable
	{
		global::Windows.Foundation.IAsyncOperationWithProgress<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> SendRequestAsync(global::Windows.Web.Http.HttpRequestMessage request);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpCacheControl
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ReadBehavior")]
		global::Windows.Web.Http.Filters.HttpCacheReadBehavior get_ReadBehavior();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ReadBehavior")]
		void put_ReadBehavior(global::Windows.Web.Http.Filters.HttpCacheReadBehavior value);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "WriteBehavior")]
		global::Windows.Web.Http.Filters.HttpCacheWriteBehavior get_WriteBehavior();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "WriteBehavior")]
		void put_WriteBehavior(global::Windows.Web.Http.Filters.HttpCacheWriteBehavior value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpBaseProtocolFilter2 : global::Windows.Web.Http.Filters.IHttpFilter, global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "MaxVersion")]
		global::Windows.Web.Http.HttpVersion get_MaxVersion();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "MaxVersion")]
		void put_MaxVersion(global::Windows.Web.Http.HttpVersion value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpBaseProtocolFilter3 : global::Windows.Web.Http.Filters.IHttpFilter, global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "CookieUsageBehavior")]
		global::Windows.Web.Http.Filters.HttpCookieUsageBehavior get_CookieUsageBehavior();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "CookieUsageBehavior")]
		void put_CookieUsageBehavior(global::Windows.Web.Http.Filters.HttpCookieUsageBehavior value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpBaseProtocolFilter4 : global::Windows.Web.Http.Filters.IHttpFilter, global::System.IDisposable
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventAdd, "ServerCustomValidationRequested")]
		global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken add_ServerCustomValidationRequested(global::Windows.Foundation.TypedEventHandler<global::Windows.Web.Http.Filters.HttpBaseProtocolFilter, global::Windows.Web.Http.Filters.HttpServerCustomValidationRequestedEventArgs> eventHandler);

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.EventRemove, "ServerCustomValidationRequested")]
		void remove_ServerCustomValidationRequested(global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken eventCookie);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpServerCustomValidationRequestedEventArgs
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "RequestMessage")]
		global::Windows.Web.Http.HttpRequestMessage get_RequestMessage();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ServerCertificate")]
		global::Windows.Security.Cryptography.Certificates.Certificate get_ServerCertificate();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ServerCertificateErrors")]
		global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.ChainValidationResult> get_ServerCertificateErrors();

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertyGet, "ServerIntermediateCertificates")]
		global::System.Collections.Generic.IReadOnlyList<global::Windows.Security.Cryptography.Certificates.Certificate> get_ServerIntermediateCertificates();

		void Reject();
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpCacheReadBehavior
	{
		Default = 0,
		MostRecent = 1,
		OnlyFromCache = 2,
		NoCache = 3,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpCacheWriteBehavior
	{
		Default = 0,
		NoCache = 1,
	}

	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public enum HttpCookieUsageBehavior
	{
		Default = 0,
		NoCookies = 1,
	}
}

namespace Windows.Web.Http.Headers
{
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Headers.IHttpContentHeaderCollection))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(65536)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpContentHeaderCollection : global::System.__ComObject, global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>, global::System.Collections.Generic.IDictionary<string, string>, global::Windows.Web.Http.Headers.IHttpContentHeaderCollection, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>, global::Windows.Foundation.IStringable
	{
		int global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Add(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IDictionary<string, string>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Contains(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.CopyTo(
					global::System.Collections.Generic.KeyValuePair<string, string>[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Remove(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		string global::System.Collections.Generic.IDictionary<string, string>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IDictionary<string, string>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Keys(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Values(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		void global::System.Collections.Generic.IDictionary<string, string>.Add(
					string key, 
					string value)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								key, 
								value
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.ContainsKey(
								((global::System.Collections.Generic.IDictionary<string, string>)this), 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.Remove(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								((global::System.Collections.Generic.IDictionary<string, string>)this), 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.TryGetValue(
					string key, 
					out string value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentLength")]
		public void put_ContentLength(global::System.Nullable<ulong> value)
		{
			global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Stubs.put_ContentLength(
								this, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
		}

		public bool TryAppendWithoutValidation(
					string name, 
					string value)
		{
			bool __retVal = global::Windows.Web.Http.Headers.IHttpContentHeaderCollection__Impl.Stubs.TryAppendWithoutValidation(
								this, 
								name, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public HttpContentHeaderCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpRequestHeaderCollection : global::System.__ComObject, global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>, global::System.Collections.Generic.IDictionary<string, string>, global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>, global::Windows.Foundation.IStringable
	{
		int global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Add(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IDictionary<string, string>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Contains(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.CopyTo(
					global::System.Collections.Generic.KeyValuePair<string, string>[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Remove(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		string global::System.Collections.Generic.IDictionary<string, string>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IDictionary<string, string>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Keys(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Values(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		void global::System.Collections.Generic.IDictionary<string, string>.Add(
					string key, 
					string value)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								key, 
								value
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.ContainsKey(
								((global::System.Collections.Generic.IDictionary<string, string>)this), 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.Remove(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								((global::System.Collections.Generic.IDictionary<string, string>)this), 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.TryGetValue(
					string key, 
					out string value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		public bool TryAppendWithoutValidation(
					string name, 
					string value)
		{
			bool __retVal = global::Windows.Web.Http.Headers.IHttpRequestHeaderCollection__Impl.Stubs.TryAppendWithoutValidation(
								this, 
								name, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public HttpRequestHeaderCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IDictionary<string, string>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.ICollection<string>))]
	[global::System.Runtime.CompilerServices.DependencyReductionConditionallyDependent(typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>))]
	[global::System.Runtime.InteropServices.McgWindowsRuntimeVersion(0)]
	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe sealed class HttpResponseHeaderCollection : global::System.__ComObject, global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>, global::System.Collections.Generic.IDictionary<string, string>, global::Windows.Web.Http.Headers.IHttpResponseHeaderCollection, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>, global::Windows.Foundation.IStringable
	{
		int global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Count
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Count(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.IsReadOnly
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.IsReadOnly(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Add(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Clear()
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Clear(((global::System.Collections.Generic.IDictionary<string, string>)this));
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Contains(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Contains(
								this, 
								item
							);
		}

		void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.CopyTo(
					global::System.Collections.Generic.KeyValuePair<string, string>[] array, 
					int arrayindex)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.CopyTo(
								this, 
								array, 
								arrayindex
							);
		}

		bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<string, string>>.Remove(global::System.Collections.Generic.KeyValuePair<string, string> item)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								this, 
								item
							);
		}

		string global::System.Collections.Generic.IDictionary<string, string>.this[string index]
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Get(
									((global::System.Collections.Generic.IDictionary<string, string>)this), 
									index
								);
			}
			set
			{
				global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Indexer_Set(
									this, 
									index, 
									value
								);
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Keys
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Keys(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		global::System.Collections.Generic.ICollection<string> global::System.Collections.Generic.IDictionary<string, string>.Values
		{
			get
			{
				return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Values(((global::System.Collections.Generic.IDictionary<string, string>)this));
			}
		}

		void global::System.Collections.Generic.IDictionary<string, string>.Add(
					string key, 
					string value)
		{
			global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Add(
								this, 
								key, 
								value
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.ContainsKey(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.ContainsKey(
								((global::System.Collections.Generic.IDictionary<string, string>)this), 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.Remove(string key)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.Remove(
								((global::System.Collections.Generic.IDictionary<string, string>)this), 
								key
							);
		}

		bool global::System.Collections.Generic.IDictionary<string, string>.TryGetValue(
					string key, 
					out string value)
		{
			return global::System.Runtime.InteropServices.WindowsRuntime.IMapSharedReferenceTypesRCWAdapter.TryGetValue(
								this, 
								key, 
								out value
							);
		}

		global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>.GetEnumerator()
		{
			return (global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, string>>)global::__Interop.McgHelpers.GetGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			return global::__Interop.McgHelpers.GetNonGenericEnumerator(
								this, 
								typeof(global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>).TypeHandle
							);
		}

		public override string ToString()
		{
			string __retVal = global::Windows.Foundation.IStringable__Impl.Stubs.ToString(this);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			return __retVal;
		}

		public HttpResponseHeaderCollection(global::System.IntPtr dummy)
		{
		}
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpContentHeaderCollection : global::System.Collections.Generic.IDictionary<string, string>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>
	{
		[global::System.Runtime.InteropServices.McgAccessor(global::System.Runtime.InteropServices.McgAccessorKind.PropertySet, "ContentLength")]
		void put_ContentLength(global::System.Nullable<ulong> value);

		bool TryAppendWithoutValidation(
					string name, 
					string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpRequestHeaderCollection : global::System.Collections.Generic.IDictionary<string, string>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>
	{
		bool TryAppendWithoutValidation(
					string name, 
					string value);
	}

	[global::Internal.Reflection.MetadataTransformed(global::Internal.Reflection.MetadataTransformation.OriginallyForeignObject)]
	[global::Internal.Reflection.ExplicitScope("Windows, Version=255.255.255.255, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime")]
	public unsafe interface IHttpResponseHeaderCollection : global::System.Collections.Generic.IDictionary<string, string>, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, string>>
	{
	}
}

// Unmanaged Function Pointer - Calling Convention StdCall
[global::System.Runtime.InteropServices.McgRedirectedType("Interop+Winsock+LPLOOKUPSERVICE_COMPLETION_ROUTINE,System.Net.NameResolution, Version=4.1.1.0, Culture=neutral, " +
	"PublicKeyToken=b03f5f7f11d50a3a")]
public unsafe delegate void Interop_Winsock_LPLOOKUPSERVICE_COMPLETION_ROUTINE__System_Net_NameResolution(
			int dwError, 
			int dwBytes, 
			global::System_Threading.NativeOverlapped__System_Private_CoreLib* lpOverlapped);

